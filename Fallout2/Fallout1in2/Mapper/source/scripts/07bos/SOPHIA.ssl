/*

   Brotherhood - Sophia

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_SOPHIA
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BOS)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;

procedure goto00;
procedure goto01;
procedure goto02;
procedure goto03;
procedure goto04;
procedure goto05;
procedure goto06;
procedure goto07;
procedure goto08;
procedure goto09;
procedure goto10;
procedure goto11;
procedure goto12;
procedure goto13;
procedure goto14;
procedure goto15;
procedure goto16;
procedure goto16b;
procedure goto17;
procedure goto18;
procedure goto19;
procedure goto20;
procedure goto20b;
procedure goto21;
procedure anger;
procedure gotoend;
procedure gotostory;
procedure grenades;
procedure grenadesGive;
procedure grenadesGiveLowInt;
procedure grenadesFail;

procedure gotoDownReact;

variable tmp_hostile;
variable Pick;
variable Only_Once := 1;
variable message;
variable Item := 0;
variable ch := 0;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_BROTHERHOOD);
      set_self_ai(AI_BROTHERHOOD_SCRIBE);
   end
end

procedure combat begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   if (global_var(GVAR_ENEMY_BROTHERHOOD)) then begin
      tmp_hostile := 1;
   end
   if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
      tmp_hostile := 0;
   end
   if (tmp_hostile) then begin
      set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
      tmp_hostile := 0;
      attack(dude_obj);
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   dude_look_at_self;
   get_reaction
   start_gdialog(319, self_obj, 4, -1, -1);
   gsay_start;
   if global_var(GVAR_MICHAEL_SOPHIA_GRENADES) == 1 then begin
      call grenades;
   end
   else begin
   if (local_var(4)) then begin
      if (local_var(1) < 2) then begin
         call goto20;
      end
      else begin
         call goto16;
      end
   end
   else begin
      set_local_var(4, 1);
      if (map_var(0) == 1) then begin
         call goto14;
      end
      else begin
         call goto00;
      end
   end
   end
   gsay_end;
   end_dialogue;
end

procedure destroy_p_proc begin
   set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure goto00 begin
   Reply(301);
   giq_option(-3, NAME, 302, goto01, NEUTRAL_REACTION);
   giq_option(4, NAME, 303, goto02, NEUTRAL_REACTION);
   giq_option(4, NAME, 304, goto03, NEUTRAL_REACTION);
   giq_option(4, NAME, 305, goto02, NEUTRAL_REACTION);
   giq_option(4, NAME, 306, anger, BAD_REACTION);
end

procedure goto01 begin
   BMessage(307);
end

procedure goto02 begin
   Reply(308);
   if (global_var(GVAR_NECROP_WATER_CHIP_TAKEN) != 1) then begin
      giq_option(4, NAME, 309, goto04, NEUTRAL_REACTION);
   end
   giq_option(4, NAME, 310, goto05, NEUTRAL_REACTION);
   giq_option(4, NAME, 311, goto06, NEUTRAL_REACTION);
   giq_option(4, NAME, 312, gotoend, NEUTRAL_REACTION);
   if (has_rep_berserker) then begin
      giq_option(4, NAME, 313, anger, BAD_REACTION);
   end
end

procedure goto03 begin
   Reply(314);
   giq_option(4, NAME, 315, gotoend, NEUTRAL_REACTION);
   giq_option(4, NAME, 316, goto07, NEUTRAL_REACTION);
end

procedure goto04 begin
   Reply(317);
   giq_option(4, NAME, 318, goto07, NEUTRAL_REACTION);
   giq_option(4, NAME, 319, goto06, NEUTRAL_REACTION);
   giq_option(4, NAME, 320, anger, BAD_REACTION);
   giq_option(4, NAME, 321, gotoend, NEUTRAL_REACTION);
end

procedure goto05 begin
   Reply(322);
   giq_option(4, NAME, 323, gotoend, NEUTRAL_REACTION);
   giq_option(4, NAME, 324, goto08, NEUTRAL_REACTION);
   giq_option(4, NAME, 325, goto09, NEUTRAL_REACTION);
end

procedure goto06 begin
   Reply(326);
   giq_option(4, NAME, 327, goto11, NEUTRAL_REACTION);
   giq_option(4, NAME, 328, goto11, NEUTRAL_REACTION);
   if (local_var(6) != 1) then begin
      giq_option(4, NAME, 329, goto12, NEUTRAL_REACTION);
   end
   giq_option(4, NAME, 330, goto07, NEUTRAL_REACTION);
end

procedure goto07 begin
   Reply(331);
   if (local_var(6) != 1) then begin
      giq_option(4, NAME, 332, goto12, NEUTRAL_REACTION);
   end
   giq_option(4, NAME, 333, goto09, NEUTRAL_REACTION);
   if (has_rep_berserker) then begin
      giq_option(4, NAME, 334, goto01, BAD_REACTION);
   end
   giq_option(4, NAME, 335, goto05, NEUTRAL_REACTION);
end

procedure goto08 begin
   NMessage(336);
end

procedure goto09 begin
   Reply(337);
   if (local_var(6) != 1) then begin
      giq_option(4, NAME, 338, goto12, GOOD_REACTION);
   end
   giq_option(4, NAME, 339, gotoDownReact, BAD_REACTION);
   giq_option(4, NAME, 341, goto01, BAD_REACTION);
   giq_option(4, NAME, 342, goto10, NEUTRAL_REACTION);
end

procedure gotoDownReact begin
   DownReact
end

procedure goto10 begin
   NMessage(343);
end

procedure goto11 begin
   Reply(344);
   giq_option(4, NAME, 345, gotoend, NEUTRAL_REACTION);
   giq_option(4, NAME, 346, goto13, NEUTRAL_REACTION);
   giq_option(4, NAME, 347, gotoDownReact, BAD_REACTION);
end

procedure goto12 begin
   set_local_var(6, 1);

   Item := create_object_sid(PID_BOS_HISTORY_HOLODISK, 0, 0, SCRIPT_SOPDISK);
   add_obj_to_inven(dude_obj, Item);

   Reply(348);
   giq_option(4, NAME, 349, gotoend, NEUTRAL_REACTION);
   giq_option(4, NAME, 350, gotoDownReact, BAD_REACTION);
end

procedure goto13 begin
   Reply(351);
   if (local_var(6) != 1) then begin
      giq_option(4, NAME, 352, goto12, GOOD_REACTION);
   end
   giq_option(4, NAME, 349, gotoend, NEUTRAL_REACTION);
   giq_option(4, NAME, 353, anger, BAD_REACTION);
end

procedure goto14 begin
   Reply(301);
   giq_option(-3, NAME, 302, goto01, NEUTRAL_REACTION);
   giq_option(4, NAME, 303, goto02, NEUTRAL_REACTION);
   giq_option(4, NAME, 330, goto15, NEUTRAL_REACTION);
   giq_option(4, NAME, 306, anger, BAD_REACTION);
end

procedure goto15 begin
   Reply(359);
   giq_option(4, NAME, 360, goto07, NEUTRAL_REACTION);
   giq_option(4, NAME, 361, anger, BAD_REACTION);
   giq_option(4, NAME, 362, gotoDownReact, BAD_REACTION);
end

procedure goto16 begin
   Reply(364);
   giq_option(4, NAME, 365, goto17, NEUTRAL_REACTION);
   giq_option(4, NAME, 366, goto16b, NEUTRAL_REACTION);
   giq_option(4, NAME, 367, gotoend, NEUTRAL_REACTION);
   giq_option(-3, NAME, 302, goto01, NEUTRAL_REACTION);
end

procedure goto16b begin
   if (local_var(6) != 1) then begin
      call goto12;
   end
   else begin
      call goto18;
   end
end

procedure goto17 begin
   Reply(368);
   giq_option(4, NAME, 369, gotoend, NEUTRAL_REACTION);
   giq_option(4, NAME, 316, goto07, NEUTRAL_REACTION);
end

procedure goto18 begin
   Reply(374);
   giq_option(4, NAME, 369, gotoend, NEUTRAL_REACTION);
   giq_option(4, NAME, 350, gotoDownReact, BAD_REACTION);
end

procedure goto19 begin
   Reply(374);
   giq_option(4, NAME, 369, gotoend, NEUTRAL_REACTION);
   giq_option(4, NAME, 350, gotoDownReact, BAD_REACTION);
end

procedure goto20 begin
   Reply(377);
   giq_option(4, NAME, 378, gotoend, NEUTRAL_REACTION);
   giq_option(4, NAME, 379, goto20b, GOOD_REACTION);
   giq_option(-3, NAME, 302, goto01, NEUTRAL_REACTION);
end

procedure goto20b begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -10))) then begin
      call goto21;
   end
   else begin
      call goto01;
   end
end

procedure goto21 begin
   UpReact
   Reply(380);
   giq_option(4, NAME, 381, goto17, NEUTRAL_REACTION);
   giq_option(4, NAME, 382, goto16b, NEUTRAL_REACTION);
   giq_option(4, NAME, 383, gotoend, NEUTRAL_REACTION);
end

procedure grenades begin
   Reply(201);
   if (dude_item_count(PID_PULSE_GRENADE) >= 3) then begin
      giq_option(4, NAME, 202, grenadesGive, NEUTRAL_REACTION);
      giq_option(-3, NAME, 205, grenadesGiveLowInt, NEUTRAL_REACTION);
   end
   giq_option(5, NAME, 203, gotoend, NEUTRAL_REACTION);
   giq_option(4, NAME, 204, grenadesFail, NEUTRAL_REACTION);
end

procedure grenadesGive begin
   Item := dude_item(PID_PULSE_GRENADE);
   rm_obj_from_inven(dude_obj, Item);
   add_obj_to_inven(self_obj, Item);
   Item := dude_item(PID_PULSE_GRENADE);
   rm_obj_from_inven(dude_obj, Item);
   add_obj_to_inven(self_obj, Item);
   Item := dude_item(PID_PULSE_GRENADE);
   rm_obj_from_inven(dude_obj, Item);
   add_obj_to_inven(self_obj, Item);

   UpReact
   NMessage(206);
   //if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
   ch := dude_charisma > 5;
   if ch and is_success(do_check(dude_obj, STAT_ch, 0)) then begin
      //quest ok + bonus
      GMessage(208);
      set_global_var(GVAR_MICHAEL_SOPHIA_GRENADES, 4);
   end
   else begin
      //quest ok
      set_global_var(GVAR_MICHAEL_SOPHIA_GRENADES, 3);
   end
end

procedure grenadesGiveLowInt
begin
   UpReact
   Reply(207);
   set_global_var(GVAR_MICHAEL_SOPHIA_GRENADES, 3); //quest ok
   Item := create_object(PID_PULSE_GRENADE, 0, 0);
   rm_obj_from_inven(dude_obj, Item);
   rm_obj_from_inven(dude_obj, Item);
   rm_obj_from_inven(dude_obj, Item);
end

procedure grenadesFail
begin
   DownReact
   Reply(115);
   set_global_var(GVAR_MICHAEL_SOPHIA_GRENADES, 2); //quest fail
end

procedure anger
begin
   DownReact
   call goto01;
end

procedure gotoend
begin
end

procedure gotostory
begin
end
