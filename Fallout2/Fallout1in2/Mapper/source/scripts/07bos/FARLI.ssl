/*

	Brotherhood - paladin Farli

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_FARLI
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BOS)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure destroy_p_proc;

procedure farli0;
procedure farli1;
procedure farli2;
procedure farli3;
procedure farli4;

variable Herebefore;

procedure start begin
	if ((script_action == look_at_proc) or (script_action == description_proc)) then begin// 21 is look_at, 3 is description (Binoculars)   //NEED TO FIX THIS, DUPLICATE DESCRIPTIONS IS BULLSHIT. --Sduibek
		script_overrides;
		display_msg(mstr(100));
	end
	else begin
		if (script_action == destroy_proc) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
			call destroy_p_proc;
		end
		else begin
			if (script_action == talk_proc) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				script_overrides;
				if (Herebefore > 1) then begin
					call farli4;
				end
				else begin
					if (Herebefore == 1) then begin
						Herebefore := Herebefore + 1;
						call farli3;
					end
					else begin
						Herebefore := Herebefore + 1;
						start_gdialog(315, self_obj, 4, -1, -1);
						gsay_start;
						call farli0;
						gsay_end;
						end_dialogue;
					end
				end
			end
		end
	end
end

procedure farli0
begin
	Reply(101);
	giq_option(3, NAME, 102, farli1, NEUTRAL_REACTION);
end

procedure farli1
begin
	Reply(103);
	giq_option(3, NAME, mstr(104) + dude_name + mstr(105), farli2, NEUTRAL_REACTION);
end

procedure farli2
begin
	variable LVar0 := 0;
	NMessage(106);
	LVar0 := create_object(PID_SHOTGUN_SHELLS, 0, 0);
	add_obj_to_inven(dude_obj, LVar0);
end

procedure farli3
begin
	float_msg(self_obj, mstr(107), FLOAT_MSG_NORMAL);
end

procedure farli4
begin
	float_msg(self_obj, mstr(108), FLOAT_MSG_NORMAL);
end

procedure destroy_p_proc begin
   inc_good_critter
end
