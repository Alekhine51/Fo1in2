/*

   Brotherhood - Paladin, lone sentry

*/

/* Include Files */
#include "define.h"
//#include "necropolis.h"

#define NAME                    SCRIPT_SENTRY
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BOS)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure look_at_p_proc;
procedure damage_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure destroy_p_proc;

procedure node01;
procedure node02;
procedure node03;
procedure node04;
procedure node05;
procedure node06;
procedure node07;
procedure node08;
procedure node09;
procedure node11;
procedure node12;
procedure node_exit;

variable initial := 0;
variable tmp_hostile;
variable weaponPtr;


procedure start begin
   if not(initial) then begin
      set_self_team(TEAM_BROTHERHOOD);
      set_self_ai(AI_BROTHERHOOD_PALADIN);
      self_rotate(2);
      if (local_var(0) == 0) then begin
         set_local_var(0, 1);
         weaponPtr := create_object(PID_GATLING_LASER, 0, 0);
         add_obj_to_inven(self_obj, weaponPtr);
         wield_obj_critter(self_obj, weaponPtr);
         add_obj_to_inven(self_obj, create_object(PID_MICRO_FUSION_CELL, 0, 0));
      end
      initial := 1;
   end
end

procedure look_at_p_proc
begin
   script_overrides;
   display_msg(mstr(100));
end

procedure damage_p_proc
begin
end

procedure pickup_p_proc
begin
   if source_is_dude then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_BOS);

   dude_look_at_self;
   if (local_var(1) == 0) then begin
      set_local_var(1, 1);
      start_gdialog(324, self_obj, 4, -1, -1);
      gsay_start;
      if (global_var(GVAR_QUEST_BROHOOD_1_JOIN_THEM) != 2) then begin
         call node01;
      end
      else begin
         call node09;
      end
      gsay_end;
      end_dialogue;
   end
   else begin
      display_msg(mstr(150));
   end
end

procedure critter_p_proc
begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure node01
begin
   Reply(101);
   NLowOption(mstr(102) + dude_name + mstr(103), node02);
   NOption(mstr(104) + dude_name + mstr(105), node04, 4);
   NOption(106, node12, 4);
end

procedure node02
begin
   Reply(mstr(107) + dude_name + mstr(108));
   NLowOption(109, node03);
end

procedure node03
begin
   Reply(110);
   NLowOption(111, node_exit);
end

procedure node04
begin
   Reply(112);
   NOption(113, node05, 4);
end

procedure node05
begin
   Reply(114);
   NOption(115, node06, 4);
   NOption(116, node07, 4);
end

procedure node06
begin
   Reply(117);
   NOption(118, node_exit, 4);
   NOption(119, node07, 4);
end

procedure node07
begin
   Reply(120);
   if (global_var(GVAR_QUEST_BROHOOD_1_JOIN_THEM) != 2) then begin
      NOption(121, node08, 4);
   end
   else begin
      NOption(121, node11, 4);
   end
end

procedure node08
begin
   NMessage(mstr(122) + dude_name + mstr(123));
end

procedure node09
begin
   Reply(mstr(124) + dude_name + mstr(125));
   NLowOption(126, node02);
   NOption(127, node04, 4);
end

procedure node11
begin
   Reply(mstr(130) + dude_name + mstr(131));
   NOption(132, node_exit, 4);
end

procedure node12
begin
   NMessage(133);
end

procedure node_exit
begin
end
