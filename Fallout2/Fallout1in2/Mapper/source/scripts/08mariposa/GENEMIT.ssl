/*

   Military Base - generic (red field) emitter

*/

#include "..\headers\define.h"

#define NAME                    SCRIPT_EMITER1A

#include "..\headers\command.h"

procedure start;
procedure look_at_p_proc;
procedure use_p_proc;
procedure use_skill_on_p_proc;
procedure description_p_proc;
procedure use_obj_on_p_proc;

#define ACTIVE       (0)
#define DESTROYED    (1)

#define LVAR_FF_Status        (0)

procedure start begin
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(200));
end

procedure use_p_proc begin
   script_overrides;
   display_msg(mstr(201));
end

procedure use_skill_on_p_proc begin
   if (action_being_used == SKILL_SCIENCE) then begin
      script_overrides;
      display_msg(mstr(203));
   end
   else if (action_being_used == SKILL_REPAIR) then begin
      script_overrides;
      display_msg(mstr(202));
   end
end

procedure description_p_proc begin
   script_overrides;
   if fixt_disabled then
      display_msg(mstr(201));
   else
      display_msg(mstr(204));
end

procedure use_obj_on_p_proc begin
   if fixt_enabled then begin
      if (obj_pid(obj_being_used_with) == PID_DYNAMITE) or (obj_pid(obj_being_used_with) == PID_ACTIVE_DYNAMITE) or (obj_pid(obj_being_used_with) == PID_PLASTIC_EXPLOSIVES) or (obj_pid(obj_being_used_with) == PID_ACTIVE_PLASTIC_EXPLOSIVE) then begin
         script_overrides;
         display_msg(mstr(205));
      end
   end
end

procedure damage_p_proc begin
variable pain_field_ptr, ff_emitter;

   if (is_success(roll_vs_skill(dude_obj, SKILL_TRAPS, 0))) then begin
      set_local_var(LVAR_FF_Status, DESTROYED);

      if (self_pid == PID_EMITTER_MBASE_NS) then begin
         pain_field_ptr := tile_num_in_direction(self_tile,2,2);
         pain_field_ptr := tile_contains_pid_obj(pain_field_ptr, self_elevation, PID_NS_PAIN_FIELD);

         ff_emitter := create_object(PID_EMITTER_DESTROYED_NS, self_tile, self_elevation);
      end
      else if (self_pid == PID_EMITTER_MBASE_EW) then begin
         pain_field_ptr := tile_num_in_direction(self_tile,5,1);
         pain_field_ptr := tile_num_in_direction(pain_field_ptr,3,2);
         pain_field_ptr := tile_contains_pid_obj(pain_field_ptr, self_elevation, PID_EW_PAIN_FIELD);

         ff_emitter := create_object(PID_EMITTER_DESTROYED_EW, self_tile, self_elevation);
      end
      if (pain_field_ptr != 0) then
         destroy_object(pain_field_ptr);

      display_msg(message_str(SCRIPT_EMITER1A, 102));
      set_global_var(GVAR_VATS_ALERT, 1);
      destroy_object(self_obj);
   end
end
