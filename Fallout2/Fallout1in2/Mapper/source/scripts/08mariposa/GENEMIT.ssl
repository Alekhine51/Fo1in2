/*

   Military Base - generic (red field) emitter

*/

#include "..\headers\define.h"

#define NAME                    SCRIPT_EMITER1A

#include "..\headers\command.h"

procedure start;
procedure look_at_p_proc;
procedure use_p_proc;
procedure use_skill_on_p_proc;
procedure description_p_proc;
procedure use_obj_on_p_proc;

procedure start begin
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(200));
end

procedure use_p_proc begin
   script_overrides;
   display_msg(mstr(201));
end

procedure use_skill_on_p_proc begin
   if (action_being_used == SKILL_SCIENCE) then begin
      script_overrides;
      display_msg(mstr(203));
   end
   else if (action_being_used == SKILL_REPAIR) then begin//-- REPAIR
      script_overrides;
      display_msg(mstr(202));
   end
end

procedure description_p_proc begin
   script_overrides;
   if fixt_disabled then
      display_msg(mstr(201));
   else
      display_msg(mstr(204));
end

procedure use_obj_on_p_proc begin
//
// drop the explosive and arm it automatically?
//
   if fixt_enabled then begin
      if (obj_pid(obj_being_used_with) == PID_DYNAMITE) or (obj_pid(obj_being_used_with) == PID_ACTIVE_DYNAMITE) or (obj_pid(obj_being_used_with) == PID_PLASTIC_EXPLOSIVES) or (obj_pid(obj_being_used_with) == PID_ACTIVE_PLASTIC_EXPLOSIVE) then begin
         script_overrides;
         display_msg(mstr(205));
      end
   end
end
