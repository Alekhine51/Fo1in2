/*

   Military Base - Force Field emitters

   NOTE:

      Template script!
      This is included in other MBase Force Field (emitter) scripts.

*/

#include "..\headers\define.h"
#include "..\headers\mbase.h"
//#include "..\headers\maps\mbstrg12.h"

#ifndef NAME
   #define NAME                     SCRIPT_EMITER1A
   #define FField_Ptr               Field1a_Ptr
   #define FField_MVAR              16
#endif

#include "..\headers\command.h"

procedure start;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;

#define ACTIVE       (0)
#define DESTROYED    (1)

#define DISABLED     (0)
#define ENABLED      (1)

#define LVAR_FF_Status        (0)

import variable FField_Ptr;

procedure start begin
end

procedure use_p_proc begin
   script_overrides;
   display_msg(message_str(SCRIPT_EMITER1A, 100));
end

procedure use_obj_on_p_proc begin
   variable Item:= obj_pid(obj_being_used_with);

   if (local_var(LVAR_FF_Status) == ACTIVE) then begin
      if (Item == PID_MULTI_TOOL or Item == PID_SUPER_TOOL_KIT) then begin
         script_overrides;
         if (is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 0))) then begin
            if (map_var(FField_MVAR) == 1) then begin
               if not(is_loading_game) then begin  set_obj_invisible(FField_Ptr);  end
               display_msg(message_str(SCRIPT_EMITER1A, 103));
               give_xp(50);
               set_map_var(FField_MVAR, DISABLED);
            end
            else begin
               if not(is_loading_game) then begin  set_obj_visible(FField_Ptr); end
               display_msg(message_str(SCRIPT_EMITER1A, 105));
               set_map_var(FField_MVAR, ENABLED);
            end
         end
         else begin
            display_msg(message_str(SCRIPT_EMITER1A, 104));
         end
      end
   end
end

procedure use_skill_on_p_proc begin
   if (local_var(LVAR_FF_Status) == 0) then begin
      if (action_being_used == SKILL_REPAIR) then begin
         script_overrides;
         if (is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, -20))) then begin
            if (map_var(FField_MVAR) == 1) then begin
               display_msg(message_str(SCRIPT_EMITER1A, 103));
               if not(is_loading_game) then begin  set_obj_invisible(FField_Ptr);  end
               give_xp(50);
               set_map_var(FField_MVAR, DISABLED);
            end
            else begin
               if not(is_loading_game) then begin  set_obj_visible(FField_Ptr); end
               display_msg(message_str(SCRIPT_EMITER1A, 105));
               set_map_var(FField_MVAR, ENABLED);
            end
         end
         else begin
            display_msg(message_str(SCRIPT_EMITER1A, 104));
         end
      end
   end
end

procedure damage_p_proc begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_TRAPS, 0))) then begin
      set_global_var(GVAR_VATS_ALERT, 1);
      display_msg(message_str(SCRIPT_EMITER1A, 102));
      set_emitter_destroyed
   end
   else begin
      set_map_var(FField_MVAR, DISABLED);
      if not(is_loading_game) then begin  set_obj_invisible(FField_Ptr);  end
      display_msg(message_str(SCRIPT_EMITER1A, 101));
   end
end
