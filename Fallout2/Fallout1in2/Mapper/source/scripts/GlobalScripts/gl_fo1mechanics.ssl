/*

   Adjust Fo2 core mechanics to get them closer to Fo1.

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\updatmap.h"
#include "..\headers\voodoo.h"
#include "..\headers\sfall\main.h"

#include "..\headers\boneyard.h"

/* Standard Script Procedures */
procedure start;

procedure ondeath_handler;
procedure general;
procedure mode_change_handler;
procedure scene_master_destroyed;
procedure scene_vats_destroyed;
procedure night_person;
procedure item_description_handler;
procedure afterhitroll_handler;
procedure useskillon_handler;

#define get_active_hand(slot)  if (active_hand == 0) then slot := INVEN_TYPE_LEFT_HAND; \
                               else slot := INVEN_TYPE_RIGHT_HAND

import variable Neal_urn_ptr;

procedure start begin
   if (game_loaded) then begin
      set_global_script_type(0);
      register_hook_proc(HOOK_GAMEMODECHANGE, mode_change_handler);
      register_hook_proc(HOOK_DESCRIPTIONOBJ, item_description_handler);
      register_hook_proc(HOOK_AFTERHITROLL, afterhitroll_handler);
      //register_hook_proc(HOOK_USESKILLON, useskillon_handler);
   end

   call general;
end

procedure general begin
   // Max skill is 200%
   set_skill_max(200);

   // Max rad resistance is 100%
   set_pc_stat_max(STAT_rad_resist, 100);

   // Changes the PipBoy rest timer from 08:00 to 06:00
   VOODOO_rest_till0600;

   // Disable the "You encounter: ..." message
   VOODOO_disable_YouEncounter_message;
end

procedure mode_change_handler begin
   call scene_master_destroyed;
   call scene_vats_destroyed;
   call night_person;

   // Activate special radiation death if > 1000 rem. See data/enddeath.txt
   set_global_var(GVAR_SPECIAL_RADIATION_DEATH, dude_rads);
end

procedure scene_master_destroyed begin
   if (get_game_mode == WORLDMAP) then begin
      if (global_var(GVAR_MASTER_BLOWN) == 1) and not(cathedral_destroyed) then begin
         set_cathedral_destroyed;

         inc_cathedral_rep(REP_BONUS_BLOWN_UP_MASTER);

         give_exp_points(EXP_MASTER_DESTROYED);
         display_msg(message_str(SCRIPT_GENCHAT, 702));

         mark_map_entrance_state(MAP_CHILDRN1, 0);
         mark_map_entrance_state(MAP_CHILDRN2, 0);
         mark_map_entrance_state(MAP_MSTRLR12, 0);
         mark_map_entrance_state(MAP_MSTRLR34, 0);
         mark_map_entrance_elev_state(MAP_CHILDRN1, 1, 0); // We need this additionally, otherwise the stupid entry point won't disable itself.
         mark_map_entrance_state(MAP_CHILDEAD, 1);

         play_gmovie(CATHEXPLODE_MOVIE);

         if (global_var(GVAR_VATS_BLOWN)) and waterchip_returned then begin
            force_encounter(MAP_V13ENT);
         end
      end
   end
end

procedure scene_vats_destroyed begin
   if (get_game_mode == WORLDMAP) then begin
      if (global_var(GVAR_VATS_BLOWN) == 1) and not(military_base_destoryed) then begin
         set_military_base_destoryed;

         inc_mbase_rep(REP_BONUS_BLOWN_UP_VATS);

         give_exp_points(EXP_VATS_DESTROYED);
         display_msg(message_str(SCRIPT_GENCHAT, 701));

         mark_map_entrance_state(MAP_MBENT, 0);
         mark_map_entrance_state(MAP_MBSTRG12, 0);
         mark_map_entrance_state(MAP_MBVATS12, 0);
         mark_map_entrance_state(MAP_MBDEAD, 1);

         play_gmovie(VATSEXPLODE_MOVIE);

         if (global_var(GVAR_MASTER_BLOWN)) and waterchip_returned then begin
            force_encounter(MAP_V13ENT);
         end
      end
   end
end

procedure night_person begin
   /* Night Person Trait
   As a night-time person, you are more awake when the sun goes down.
   Your Intelligence and Perception are improved at night, but dulled during the day. */
   if (dude_trait(TRAIT_night_person)) then begin
      if (global_var(GVAR_NIGHT_PERSON_ACTIVE) == 0) then
         set_global_var(GVAR_NIGHT_PERSON_ACTIVE, 1);
         mod_skill_points_per_level(2);

      if night and (global_var(GVAR_NIGHT_PERSON_ACTIVE) == 1) then begin
         set_global_var(GVAR_NIGHT_PERSON_ACTIVE, 2);
         set_critter_extra_stat(dude_obj, 1, get_critter_extra_stat(dude_obj, 1) + 2);
         set_critter_extra_stat(dude_obj, 4, get_critter_extra_stat(dude_obj, 4) + 2);
         debug("Night person trait is active!");
      end
      else if not(night) and (global_var(GVAR_NIGHT_PERSON_ACTIVE) == 2) then begin
         set_global_var(GVAR_NIGHT_PERSON_ACTIVE, 1);
         set_critter_extra_stat(dude_obj, 1, get_critter_extra_stat(dude_obj, 1) - 2);
         set_critter_extra_stat(dude_obj, 4, get_critter_extra_stat(dude_obj, 4) - 2);
         debug("Night person trait is not active!");
      end
   end
   // If used Mutate!-perk to remove Night Person, reset everything to default:
   else if (not(dude_trait(TRAIT_night_person)) and (global_var(GVAR_NIGHT_PERSON_ACTIVE) > 0)) then begin
      set_global_var(GVAR_NIGHT_PERSON_ACTIVE, 0);
      mod_skill_points_per_level(0);
      if night then begin
         set_critter_extra_stat(dude_obj, 1, get_critter_extra_stat(dude_obj, 1) - 2);
         set_critter_extra_stat(dude_obj, 4, get_critter_extra_stat(dude_obj, 4) - 2);
      end
      debug("Night person trait is disabled!");
   end
end

procedure item_description_handler begin
   variable
      item := obj_pid(get_sfall_arg),
      description;

   if (item == PID_FARM_PARTS) and get_quest_farm_active then begin
      //if (is_success(roll_vs_skill(dude_obj, SKILL_SCIENCE, 0))) then begin
         description := get_string_pointer(message_str(SCRIPT_FARMPART, 101));
         set_sfall_return(description);
      //end
   end
end

procedure afterhitroll_handler begin
   variable
      willHit := get_sfall_arg,
      attacker := get_sfall_arg,
      target := get_sfall_arg,
      slot, item;

   if (attacker) then begin
      if (attacker == dude_obj) then begin
         get_active_hand(slot);
         item := critter_inven_obj(attacker, slot);
      end else begin
         item := get_right_hand(attacker);
      end

      if (item > 0) then begin
         if (obj_pid(item) == PID_MOLOTOV_COCKTAIL) then begin
            if (obj_type(target) == OBJ_TYPE_SCENERY and willHit > 1) then begin
               set_proto_data(PID_MOLOTOV_COCKTAIL, PROTO_WP_DMG_TYPE, DMG_explosion);
            end else begin
               set_proto_data(PID_MOLOTOV_COCKTAIL, PROTO_WP_DMG_TYPE, DMG_fire);
               set_attack_explosion_radius(2); // grenade radius
               set_attack_is_explosion_fire;
            end
         end
      end
   end
end

procedure useskillon_handler begin
 variable
         critter := get_sfall_arg,
         target := get_sfall_arg,
         skill := get_sfall_arg;

   if (skill == SKILL_STEAL) then begin
      if (obj_type(target)  == OBJ_TYPE_SCENERY and obj_pid(target) == PID_TROPHY) then begin
         set_cursor_mode(0);
         reg_anim_begin();
         if (tile_distance_objs(critter, target) < 5) then
            reg_anim_obj_move_to_obj(critter, target, 0);
         else
            reg_anim_obj_run_to_obj(critter, target, 0);
         reg_anim_animate(critter, ANIM_magic_hands_middle, 0);
         reg_anim_end();

         if (Neal_urn_ptr != 0) then begin
            add_timer_event(Neal_urn_ptr, game_ticks(0), 1);
         end
      end
   end
end
