/*

	Hub - Beth the gun store owner

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\maps\hubdwntn.h"
#include "..\headers\sfall\main.h"

#define NAME                    SCRIPT_HBETH
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure look_at_p_proc;
procedure combat;

procedure Beth00;
procedure Beth01;
procedure Beth02;
procedure Beth02a;
procedure Beth02b;
procedure Beth02c;
procedure Beth03;
procedure Beth03a;
procedure Beth04;
procedure Beth05;
procedure Beth06;
procedure Beth07;
procedure Beth08;
procedure Beth09;
procedure Beth10;
procedure Beth11;
procedure Beth12;
procedure Beth13;
procedure Beth14;
procedure Beth15;
procedure Beth15a;
procedure Beth16;
procedure Beth16a;
procedure Beth17;
procedure Beth17a;
procedure Beth17b;
procedure Beth18;
procedure Beth19;
procedure Beth20;
procedure Beth21;
procedure Beth22;
procedure Beth23;
procedure Beth24;
procedure Beth25;
procedure Beth26;
procedure Beth27;
procedure Beth27a;
procedure Beth28;
procedure Beth29;
procedure Beth30;
procedure Beth31;
procedure Beth32;
procedure Beth33;
procedure Beth34;
procedure Beth35;
procedure Beth35a;
procedure Beth36;
procedure Beth37;
procedure Beth38;
procedure Beth39;
procedure Beth40;
procedure Beth40a;
procedure Beth41;
procedure Beth42;
procedure Beth43;
procedure Beth44;
procedure Beth45;
procedure Beth46;
procedure Beth47;
procedure Beth48;
procedure Beth49;
procedure Beth50;
procedure Beth52;
procedure Beth52a;
procedure Beth53;
procedure Beth54;
procedure Beth55;
procedure Beth56;
procedure Beth57;
procedure Beth58;
procedure Beth59;
procedure Beth60;
procedure Beth61;
procedure Beth62;
procedure Beth63;
procedure Beth64;
procedure Beth65;
procedure Beth66;
procedure Beth67;
procedure Beth68;
procedure Beth69;
procedure BethEnd;
procedure Get_Stuff;
procedure Put_Stuff;

import variable Sid_Ptr;
import variable Beth_Ptr;
import variable Beth_Box_Ptr;

variable tmp_hostile;
variable Only_Once := 1;

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		Beth_Ptr := self_obj;
		set_self_team( TEAM_HUB_FAR_GO_TRADERS );
		set_self_ai( AI_MERCHANT );
	end
end

procedure combat begin
	tmp_hostile := 1;
end

procedure critter_p_proc begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc begin
	dude_look_at_self;
	call Get_Stuff;
	get_reaction
	if ((((GAME_TIME_IN_DAYS) - local_var(16)) >= 1) or (local_var(16) == 0)) then begin
		set_local_var(16, GAME_TIME_IN_DAYS);
		set_local_var(17, 1000 + random(0, 1000));
		self_caps_adjust( local_var(17) );
	end
	else begin
		self_caps_adjust( local_var(17) );
	end
	if (map_var(MVAR_FGT_DISCOUNT) == 1) then begin
		gdialog_set_barter_mod(5);
	end
	else begin
		gdialog_set_barter_mod(-10);
	end
	set_map_var(MVAR_BETH_STATUS, 1);
	if (local_var(11) == 0) then begin
		set_local_var(11, GAME_TIME_IN_HOURS);
	end
	if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		float_msg( self_obj, message_str(NAME, 361), FLOAT_MSG_RED );
	end
	else begin
		if (dude_is_armed) and (local_var(14) == 0) then begin
			call Beth55;
		end
		else if (dude_is_armed) and (local_var(14) == 1) then begin
			call Beth56;
		end
		else if (local_var(4) == 1) then begin
			if (local_var(1) > 1) then begin
				start_dialog_at_node(Beth64);
			end
			else begin
				start_dialog_at_node(Beth65);
			end
		end
		else begin
			start_dialog_at_node(Beth00);
			set_local_var(4, 1);
		end
	end
	set_local_var(11, GAME_TIME_IN_HOURS);
	set_local_var(17, self_caps);
	self_caps_adjust( -1 * local_var(17) );
	call Put_Stuff;
end

procedure destroy_p_proc begin
	inc_good_critter
	move_obj_inven_to_obj(Beth_Box_Ptr, self_obj);
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_HUB, 1 );
	end
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(NAME, 100));
end

procedure Beth00 begin
	gsay_reply( NAME, 101 );
	call Beth01;
end

procedure Beth01 begin
	giq_option( 4, NAME, 102, Beth09, NEUTRAL_REACTION );
	giq_option( 4, NAME, 104, Beth62, GOOD_REACTION );
	giq_option( 4, NAME, 398, Beth68, NEUTRAL_REACTION );
	giq_option( 4, NAME, 105, Beth63, NEUTRAL_REACTION );
	giq_option( 4, NAME, 106, Beth06, NEUTRAL_REACTION );
	giq_option( 4, NAME, 107, BethEnd, NEUTRAL_REACTION );
	giq_option( -3, NAME, 108, Beth04, NEUTRAL_REACTION );
end

procedure Beth02 begin
	if (map_var(MVAR_MISSING_CARAVAN_QUEST_STATUS) == 1) then begin
		giq_option( 4, NAME, 109, Beth36, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_MISSING_CARAVANS_STATUS ) >= 1) then begin
		giq_option( 4, NAME, 110, Beth02a, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_DECKER_KNOWN ) == 1) then begin
		giq_option( 4, NAME, 112, Beth02b, NEUTRAL_REACTION );
	end
	giq_option( 4, NAME, 398, Beth69, NEUTRAL_REACTION );
	giq_option( 4, NAME, 113, Beth23, NEUTRAL_REACTION );
	giq_option( 4, NAME, 114, Beth03a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 115, BethEnd, NEUTRAL_REACTION );
end

procedure Beth02a begin
	if (global_var( GVAR_MISSING_CARAVANS_STATUS ) == 5) then begin
		call Beth37;
	end
	else begin
		call Beth38;
	end
end

procedure Beth02b begin
	if (global_var( GVAR_DECKER_STATUS ) != 0) then begin
		call Beth66;
	end
	else begin
		call Beth14;
	end
end

procedure Beth03 begin
	if (local_var(10) == 1) then begin
		if ((local_var(5) == 0) and (global_var( GVAR_DECKER_STATUS ) == 2)) then begin
			set_local_var(5, 1);
			set_global_var( GVAR_DECKER_KNOWN, 1 );
			gsay_reply( NAME, 123 );
		end
		else if ((local_var(6) == 0) and (global_var( GVAR_DECKER_STATUS ) == 2)) then begin
			set_local_var(5, 1);
			gsay_reply( NAME, 124 );
		end
		else if ((local_var(7) == 0) and (global_var( GVAR_KILL_JAIN ) == 2)) then begin
			set_local_var(5, 1);
			gsay_reply( NAME, 125 );
		end
		else if ((local_var(8) == 0) and (global_var( GVAR_MASTER_BLOWN ) == 1)) then begin
			set_local_var(5, 1);
			gsay_reply( NAME, 126 );
		end
		else if ((local_var(9) == 0) and (global_var( GVAR_VATS_BLOWN ) == 1)) then begin
			set_local_var(5, 1);
			gsay_reply( NAME, 127 );
		end
	end
	else begin
		set_local_var(10, 1);
		if ((local_var(5) == 0) and (global_var( GVAR_DECKER_STATUS ) == 2)) then begin
			set_local_var(5, 1);
			set_global_var( GVAR_DECKER_KNOWN, 1 );
			gsay_reply( NAME, 117 );
		end
		else if ((local_var(6) == 0) and (global_var( GVAR_DECKER_STATUS ) == 2)) then begin
			set_local_var(5, 1);
			gsay_reply( NAME, 118 );
		end
		else if ((local_var(7) == 0) and (global_var( GVAR_KILL_JAIN ) == 2)) then begin
			set_local_var(5, 1);
			gsay_reply( NAME, 119 );
		end
		else if ((local_var(8) == 0) and (global_var( GVAR_MASTER_BLOWN ) == 1)) then begin
			set_local_var(5, 1);
			gsay_reply( NAME, 121 );
		end
		else if ((local_var(9) == 0) and (global_var( GVAR_VATS_BLOWN ) == 1)) then begin
			set_local_var(5, 1);
			gsay_reply( NAME, 122 );
		end
	end
	giq_option( 4, NAME, 128, Beth03a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 129, Beth39, NEUTRAL_REACTION );
	giq_option( 4, NAME, 130, BethEnd, NEUTRAL_REACTION );
end

procedure Beth03a begin
	if ((local_var(5) == 0) and (global_var( GVAR_DECKER_STATUS ) == 2) or ((local_var(6) == 0) and (global_var( GVAR_DECKER_STATUS ) == 2)) or ((local_var(7) == 0) and (global_var( GVAR_KILL_JAIN ) == 2)) or ((local_var(8) == 0) and (global_var( GVAR_MASTER_BLOWN ) == 1)) or ((local_var(9) == 0) and (global_var( GVAR_VATS_BLOWN ) == 1))) then begin
		call Beth03;
	end
	else begin
		call Beth12;
	end
end

procedure Beth04 begin
	gsay_reply( NAME, 131 );
	giq_option( -3, NAME, 132, Beth05, NEUTRAL_REACTION );
	giq_option( -3, NAME, 133, Beth05, NEUTRAL_REACTION );
end

procedure Beth05 begin
	gsay_message( NAME, 134, NEUTRAL_REACTION );
end

procedure Beth06 begin
	gsay_reply( NAME, 135 );
	giq_option( 4, NAME, 136, BethEnd, NEUTRAL_REACTION );
end

procedure Beth07 begin
	gsay_reply( NAME, 137 );
	giq_option( 4, NAME, 138, Beth08, NEUTRAL_REACTION );
	giq_option( 4, NAME, 139, Beth11, NEUTRAL_REACTION );
end

procedure Beth08 begin
	gsay_reply( NAME, 140 );
	call Beth01;
end

procedure Beth09 begin
	gsay_reply( NAME, 141 );
	call Beth02;
end

procedure Beth10 begin
	gsay_reply( NAME, 142 );
	call Beth02;
end

procedure Beth11 begin
	gsay_message( NAME, 143, NEUTRAL_REACTION );
end

procedure Beth12 begin
	gsay_reply( NAME, 144 );
	giq_option( 4, NAME, 145, Beth08, NEUTRAL_REACTION );
	giq_option( 4, NAME, 146, Beth13, NEUTRAL_REACTION );
end

procedure Beth13 begin
	gsay_message( NAME, 147, NEUTRAL_REACTION );
end

procedure Beth14 begin
	gsay_reply( NAME, 148 );
	giq_option( 4, NAME, 149, Beth15, NEUTRAL_REACTION );
	giq_option( 4, NAME, 150, Beth20, NEUTRAL_REACTION );
end

procedure Beth15 begin
	set_global_var( GVAR_DECKER_KNOWN, 1 );
	gsay_reply( NAME, 151 );
	giq_option( 4, NAME, 152, Beth16, NEUTRAL_REACTION );
	if ((map_var(MVAR_DECKER_JOB_STATUS) >= 4) or (map_var(MVAR_DECKER_JOB_STATUS) >= 4)) then begin
		giq_option( 4, NAME, 153, Beth15a, BAD_REACTION );
	end
	giq_option( 4, NAME, 154, BethEnd, NEUTRAL_REACTION );
end

procedure Beth15a begin
	BigDownReact
	call Beth21;
end

procedure Beth16 begin
	set_map_var(MVAR_BETH_TALKED_ABOUT_FRIEND, 1);
	gsay_reply( NAME, 155 );
	if ((map_var(MVAR_DECKER_JOB_STATUS) >= 5) or (map_var(MVAR_DECKER_JOB_STATUS) >= 5)) then begin
		giq_option( 4, NAME, 156, Beth16a, BAD_REACTION );
	end
	giq_option( 4, NAME, 157, Beth17, NEUTRAL_REACTION );
	giq_option( 4, NAME, 158, Beth18, NEUTRAL_REACTION );
	giq_option( 4, NAME, 159, Beth18, NEUTRAL_REACTION );
end

procedure Beth16a begin
	BottomReact
	call Beth22;
end

procedure Beth17 begin
	gsay_reply( NAME, 160 );
	giq_option( 4, NAME, 161, Beth18, NEUTRAL_REACTION );
	giq_option( 4, NAME, 162, Beth17a, BAD_REACTION );
	giq_option( 4, NAME, 163, Beth17b, BAD_REACTION );
end

procedure Beth17a begin
	DownReact
	call Beth19;
end

procedure Beth17b begin
	BigDownReact
	call Beth19;
end

procedure Beth18 begin
	gsay_reply( NAME, 164 );
	call Beth02;
end

procedure Beth19 begin
	gsay_message( NAME, 165, BAD_REACTION );
end

procedure Beth20 begin
	gsay_reply( NAME, 166 );
	call Beth02;
end

procedure Beth21 begin
	gsay_message( NAME, 167, BAD_REACTION );
end

procedure Beth22 begin
	gsay_message( NAME, 168, BAD_REACTION );
end

procedure Beth23 begin
	gsay_reply( NAME, 169 );
	call Beth24;
end

procedure Beth24 begin
	giq_option( 4, NAME, 170, Beth25, NEUTRAL_REACTION );
	giq_option( 4, NAME, 172, Beth30, NEUTRAL_REACTION );
	giq_option( 4, NAME, 173, Beth33, NEUTRAL_REACTION );
	giq_option( 4, NAME, 174, Beth42, NEUTRAL_REACTION );
	giq_option( 4, NAME, 175, BethEnd, NEUTRAL_REACTION );
end

procedure Beth25
begin
	gsay_reply( NAME, 177 );
	giq_option( 4, NAME, 178, Beth27, NEUTRAL_REACTION );
	if (map_var(MVAR_MISSING_CARAVAN_QUEST_STATUS) == 1) then begin
		giq_option( 4, NAME, 179, Beth34, NEUTRAL_REACTION );
	end
	giq_option( 4, NAME, 180, Beth26, NEUTRAL_REACTION );
	giq_option( 4, NAME, 181, BethEnd, NEUTRAL_REACTION );
end

procedure Beth26
begin
	gsay_reply( NAME, 182 );
	call Beth24;
end

procedure Beth27
begin
	gsay_reply( NAME, 183 );
	giq_option( 4, NAME, 184, Beth28, NEUTRAL_REACTION );
	giq_option( 4, NAME, 185, Beth27a, BAD_REACTION );
	giq_option( 4, NAME, 186, Beth26, NEUTRAL_REACTION );
	giq_option( 4, NAME, 187, BethEnd, NEUTRAL_REACTION );
end

procedure Beth27a
begin
	BigDownReact
	call BethEnd;
end

procedure Beth28
begin
	gsay_reply( NAME, 188 );
	giq_option( 4, NAME, 189, Beth29, NEUTRAL_REACTION );
	giq_option( 4, NAME, 190, Beth26, NEUTRAL_REACTION );
	giq_option( 4, NAME, 191, BethEnd, NEUTRAL_REACTION );
end

procedure Beth29
begin
	gsay_reply( NAME, 192 );
	call Beth24;
end

procedure Beth30
begin
	gsay_reply( NAME, 193 );
	giq_option( 4, NAME, 194, Beth32, NEUTRAL_REACTION );
	giq_option( 4, NAME, 195, Beth31, NEUTRAL_REACTION );
	giq_option( 4, NAME, 196, Beth26, NEUTRAL_REACTION );
	giq_option( 4, NAME, 197, BethEnd, NEUTRAL_REACTION );
end

procedure Beth31
begin
	gsay_reply( NAME, 198 );
	giq_option( 4, NAME, 199, Beth32, NEUTRAL_REACTION );
	giq_option( 4, NAME, 200, Beth26, NEUTRAL_REACTION );
	giq_option( 4, NAME, 201, BethEnd, NEUTRAL_REACTION );
end

procedure Beth32
begin
	gsay_reply( NAME, 202 );
	giq_option( 4, NAME, 203, Beth31, NEUTRAL_REACTION );
	giq_option( 4, NAME, 204, Beth26, NEUTRAL_REACTION );
	giq_option( 4, NAME, 205, BethEnd, NEUTRAL_REACTION );
end

procedure Beth33
begin
	gsay_reply( NAME, 206 );
	call Beth24;
end

procedure Beth34
begin
	gsay_reply( NAME, 207 );
	call Beth35;
end

procedure Beth35 begin
	if (map_var(MVAR_MISSING_CARAVAN_QUEST_STATUS) == 1) then begin
		giq_option( 4, NAME, 208, Beth40, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_MISSING_CARAVANS_STATUS ) >= 1) then begin
		giq_option( 4, NAME, 209, Beth46, NEUTRAL_REACTION );
	end
	if (map_var(MVAR_MISSING_CARAVAN_QUEST_STATUS) == 1) then begin
		giq_option( 4, NAME, 212, Beth35a, NEUTRAL_REACTION );
	end
	giq_option( 4, NAME, 213, Beth24, NEUTRAL_REACTION );
	giq_option( 4, NAME, 214, BethEnd, NEUTRAL_REACTION );
end

procedure Beth35a begin
	if dude_wearing_bos_power_armor then begin
		call Beth54;
	end
	else begin
		call Beth53;
	end
end

procedure Beth36 begin
	gsay_reply( NAME, 215 );
	call Beth35;
end

procedure Beth37 begin
	gsay_reply( NAME, 216 );
	call Beth35;
end

procedure Beth38 begin
	gsay_reply( NAME, 217 );
	call Beth35;
end

procedure Beth39 begin
	gsay_reply( NAME, 218 );
	call Beth02;
end

procedure Beth40 begin
	gsay_reply( NAME, 219 );
	giq_option( 4, NAME, 220, Beth43, NEUTRAL_REACTION );
	giq_option( 4, NAME, 221, Beth44, NEUTRAL_REACTION );
	giq_option( 4, NAME, 222, Beth35, NEUTRAL_REACTION );
	giq_option( 4, NAME, 223, Beth23, NEUTRAL_REACTION );
	giq_option( 4, NAME, 224, Beth40a, BAD_REACTION );
	giq_option( 4, NAME, 225, BethEnd, NEUTRAL_REACTION );
end

procedure Beth40a begin
	BigDownReact
	call Beth41;
end

procedure Beth41 begin
	gsay_message( NAME, 226, BAD_REACTION );
end

procedure Beth42 begin
	gsay_reply( NAME, 227 );
	call Beth24;
end

procedure Beth43 begin
	gsay_reply( NAME, 228 );
	giq_option( 4, NAME, 229, Beth44, NEUTRAL_REACTION );
	giq_option( 4, NAME, 230, Beth35, NEUTRAL_REACTION );
	giq_option( 4, NAME, 231, Beth23, NEUTRAL_REACTION );
	giq_option( 4, NAME, 232, BethEnd, NEUTRAL_REACTION );
end

procedure Beth44 begin
	gsay_reply( NAME, 233 );
	giq_option( 4, NAME, 234, Beth44, NEUTRAL_REACTION );
	giq_option( 4, NAME, 235, Beth35, NEUTRAL_REACTION );
	giq_option( 4, NAME, 236, Beth23, NEUTRAL_REACTION );
	giq_option( 4, NAME, 237, Beth45, BAD_REACTION );
	giq_option( 4, NAME, 238, BethEnd, NEUTRAL_REACTION );
end

procedure Beth45 begin
	BigDownReact
	gsay_message( NAME, 239, BAD_REACTION );
end

procedure Beth46 begin
	set_global_var( GVAR_KILL_DEATHCLAW, 1 );
	gsay_reply( NAME, 240 );
	giq_option( 4, NAME, 241, Beth47, NEUTRAL_REACTION );
	giq_option( 4, NAME, 242, Beth49, BAD_REACTION );
	giq_option( 4, NAME, 243, Beth47, NEUTRAL_REACTION );
	giq_option( 4, NAME, 244, Beth50, NEUTRAL_REACTION );
end

procedure Beth47 begin
	set_global_var( GVAR_MISSING_CARAVANS_STATUS, 2 );
	gsay_reply( NAME, 245 );
	giq_option( 4, NAME, 246, Beth48, NEUTRAL_REACTION );
	if (dude_is_male) then begin
		giq_option( 4, NAME, 247, Beth49, BAD_REACTION );
	end
	else begin
		giq_option( 4, NAME, 248, Beth49, BAD_REACTION );
	end
	giq_option( 4, NAME, 249, Beth35, NEUTRAL_REACTION );
	giq_option( 4, NAME, 250, Beth23, NEUTRAL_REACTION );
	giq_option( 4, NAME, 251, BethEnd, NEUTRAL_REACTION );
end

procedure Beth48 begin
	gsay_reply( NAME, 252 );
	giq_option( 4, NAME, 253, Beth35, NEUTRAL_REACTION );
	giq_option( 4, NAME, 254, Beth23, NEUTRAL_REACTION );
	giq_option( 4, NAME, 255, BethEnd, NEUTRAL_REACTION );
end

procedure Beth49 begin
	gsay_message( NAME, 256, BAD_REACTION );
end

procedure Beth50 begin
	set_global_var( GVAR_MISSING_CARAVANS_STATUS, 2 );
	gsay_reply( NAME, 257 );
	giq_option( 4, NAME, 258, Beth35, NEUTRAL_REACTION );
	giq_option( 4, NAME, 259, Beth23, NEUTRAL_REACTION );
	giq_option( 4, NAME, 394, Beth48, NEUTRAL_REACTION );
	giq_option( 4, NAME, 260, BethEnd, NEUTRAL_REACTION );
end

procedure Beth52 begin
	gsay_reply( NAME, 266 );
	giq_option( 4, NAME, 267, Beth35, NEUTRAL_REACTION );
	giq_option( 4, NAME, 268, Beth23, NEUTRAL_REACTION );
	giq_option( 4, NAME, 269, Beth52a, BAD_REACTION );
	giq_option( 4, NAME, 270, BethEnd, NEUTRAL_REACTION );
end

procedure Beth52a begin
	DownReact
	call BethEnd;
end

procedure Beth53 begin
	gsay_reply( NAME, 271 );
	if (global_var( GVAR_QUEST_BROHOOD_1_JOIN_THEM ) == 2) then begin
		giq_option( 4, NAME, 272, Beth57, NEUTRAL_REACTION );
		giq_option( 4, NAME, 273, Beth59, NEUTRAL_REACTION );
	end
	else begin
		if (global_var( GVAR_WORLDMAPLIST_BROTHERHOOD ) == 2) then begin
			giq_option( 4, NAME, 274, Beth58, NEUTRAL_REACTION );
		end
		else begin
			giq_option( 4, NAME, 275, Beth58, NEUTRAL_REACTION );
		end
	end
end

procedure Beth54 begin
	gsay_reply( NAME, 276 );
	if (global_var( GVAR_QUEST_BROHOOD_1_JOIN_THEM ) == 2) then begin
		giq_option( 4, NAME, 277, Beth61, NEUTRAL_REACTION );
	end
	giq_option( 4, NAME, 278, Beth57, NEUTRAL_REACTION );
	giq_option( 4, NAME, 279, Beth58, NEUTRAL_REACTION );
end

procedure Beth55
begin
	set_local_var(14, 1);
	if (dude_is_male) then begin
		float_msg( self_obj, message_str(NAME, 280), FLOAT_MSG_RED );
	end
	else begin
		float_msg( self_obj, message_str(NAME, 281), FLOAT_MSG_RED );
	end
end

procedure Beth56
begin
	float_msg( self_obj, message_str(NAME, 282), FLOAT_MSG_RED );
end

procedure Beth57
begin
	gsay_reply( NAME, 283 );
	call Beth60;
end

procedure Beth58
begin
	gsay_reply( NAME, 284 );
	call Beth60;
end

procedure Beth59
begin
	gsay_reply( NAME, 285 );
	call Beth60;
end

procedure Beth60
begin
	giq_option( 4, NAME, 286, Beth35, NEUTRAL_REACTION );
	giq_option( 4, NAME, 287, Beth23, NEUTRAL_REACTION );
	giq_option( 4, NAME, 288, BethEnd, NEUTRAL_REACTION );
end

procedure Beth61
begin
	gsay_reply( NAME, 289 );
	call Beth60;
end

procedure Beth62
begin
	gsay_message( NAME, random(290, 295), NEUTRAL_REACTION );
	if (map_var(MVAR_FGT_DISCOUNT) == 1) then begin
		gsay_message( NAME, 297, GOOD_REACTION );
		gdialog_mod_barter(5);
		gsay_reply( NAME, 395 );
		giq_option( 4, NAME, 396, BethEnd, NEUTRAL_REACTION );
		giq_option( -3, NAME, 397, BethEnd, NEUTRAL_REACTION );
	end
	else begin
		gdialog_mod_barter(-10);
		gsay_reply( NAME, 395 );
		giq_option( 4, NAME, 396, BethEnd, NEUTRAL_REACTION );
		giq_option( -3, NAME, 397, BethEnd, NEUTRAL_REACTION );
	end
end

procedure Beth63
begin
	gsay_message( NAME, random(300, 305), NEUTRAL_REACTION );
	if (map_var(MVAR_FGT_DISCOUNT) == 1) then begin
		gsay_message( NAME, 297, GOOD_REACTION );
		gdialog_mod_barter(5);
		gsay_reply( NAME, 395 );
		giq_option( 4, NAME, 396, BethEnd, NEUTRAL_REACTION );
		giq_option( -3, NAME, 397, BethEnd, NEUTRAL_REACTION );
	end
	else begin
		gdialog_mod_barter(-10);
		gsay_reply( NAME, 395 );
		giq_option( 4, NAME, 396, BethEnd, NEUTRAL_REACTION );
		giq_option( -3, NAME, 397, BethEnd, NEUTRAL_REACTION );
	end
end

procedure Beth64 begin
	if ((dude_charisma >= 7) and (dude_is_male)) then begin
		if ((((GAME_TIME_IN_HOURS) - local_var(11)) <= 1) and (dude_is_female)) then begin
			gsay_reply( NAME, message_str(NAME, random(311, 314)) + " " + message_str(NAME, 315) );
		end
		else if (((GAME_TIME_IN_HOURS) - local_var(11)) <= 1) then begin
			gsay_reply( NAME, message_str(NAME, random(311, 314)) + " " + message_str(NAME, 316) );
		end
		else if ((((GAME_TIME_IN_HOURS) - local_var(11)) > 1) and (((GAME_TIME_IN_HOURS) - local_var(11)) <= 96)) then begin
			gsay_reply( NAME, message_str(NAME, random(311, 314)) + " " + message_str(NAME, 317) );
		end
		else if ((((GAME_TIME_IN_HOURS) - local_var(11)) > 96) and (((GAME_TIME_IN_HOURS) - local_var(11)) <= 168)) then begin
			gsay_reply( NAME, message_str(NAME, random(311, 314)) + " " + message_str(NAME, 318) );
		end
		else if ((((GAME_TIME_IN_HOURS) - local_var(11)) > 168) and (((GAME_TIME_IN_HOURS) - local_var(11)) <= 336)) then begin
			gsay_reply( NAME, message_str(NAME, random(311, 314)) + " " + message_str(NAME, 319) );
		end
		else if (((GAME_TIME_IN_HOURS) - local_var(11)) > 336) then begin
			gsay_reply( NAME, message_str(NAME, random(311, 314)) + " " + message_str(NAME, 320) );
		end
	end
	else begin
		if ((((GAME_TIME_IN_HOURS) - local_var(11)) <= 1) and (dude_is_female)) then begin
			gsay_reply( NAME, message_str(NAME, random(311, 313)) + " " + message_str(NAME, 315) );
		end
		else if (((GAME_TIME_IN_HOURS) - local_var(11)) <= 1) then begin
			gsay_reply( NAME, message_str(NAME, random(311, 313)) + " " + message_str(NAME, 316) );
		end
		else if ((((GAME_TIME_IN_HOURS) - local_var(11)) > 1) and (((GAME_TIME_IN_HOURS) - local_var(11)) <= 96)) then begin
			gsay_reply( NAME, message_str(NAME, random(311, 313)) + " " + message_str(NAME, 317) );
		end
		else if ((((GAME_TIME_IN_HOURS) - local_var(11)) > 96) and (((GAME_TIME_IN_HOURS) - local_var(11)) <= 168)) then begin
			gsay_reply( NAME, message_str(NAME, random(311, 313)) + " " + message_str(NAME, 318) );
		end
		else if ((((GAME_TIME_IN_HOURS) - local_var(11)) > 168) and (((GAME_TIME_IN_HOURS) - local_var(11)) <= 336)) then begin
			gsay_reply( NAME, message_str(NAME, random(311, 313)) + " " + message_str(NAME, 319) );
		end
		else if (((GAME_TIME_IN_HOURS) - local_var(11)) > 336) then begin
			gsay_reply( NAME, message_str(NAME, random(311, 313)) + " " + message_str(NAME, 320) );
		end
	end
	call Beth01;
end

procedure Beth65 begin
	gsay_reply( NAME, random(322, 329) );
	call Beth01;
end

procedure Beth66 begin
	if (local_var(15) == 0) then begin
		set_local_var(15, 1);
		gsay_reply( NAME, 330 );
	end
	else begin
		gsay_reply( NAME, 331 );
	end
	giq_option( 4, NAME, 332, Beth18, NEUTRAL_REACTION );
	if (local_var(13) == 0) then begin
		giq_option( 4, NAME, 333, Beth67, NEUTRAL_REACTION );
	end
end

procedure Beth67 begin
	variable LVar0 := 0;
	set_local_var(13, 1);
	if (dude_is_male) then begin
		gsay_message( NAME, 334, GOOD_REACTION );
	end
	else begin
		gsay_message( NAME, 335, GOOD_REACTION );
	end
	LVar0 := create_object( PID_STIMPAK, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object( PID_STIMPAK, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object( PID_STIMPAK, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object( PID_STIMPAK, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object( PID_STIMPAK, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object( PID_STIMPAK, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
end

procedure Beth68 begin
	set_global_var( GVAR_DECKER_KNOWN, 1 );
	gsay_reply( NAME, 399 );
	call Beth01;
end

procedure Beth69 begin
	set_global_var( GVAR_DECKER_KNOWN, 1 );
	gsay_reply( NAME, 399 );
	call Beth02;
end

procedure BethEnd begin
end

procedure Get_Stuff begin
   get_barter_inven(Beth_Box_Ptr);
end

procedure Put_Stuff begin
   put_barter_inven(Beth_Box_Ptr);
end

procedure Beth02c begin
	if ((local_var(5) == 0) and (global_var( GVAR_DECKER_STATUS ) == 2) or ((local_var(6) == 0) and (global_var( GVAR_DECKER_STATUS ) == 2)) or ((local_var(7) == 0) and (global_var( GVAR_KILL_JAIN ) == 2)) or ((local_var(8) == 0) and (global_var( GVAR_MASTER_BLOWN ) == 1)) or ((local_var(9) == 0) and (global_var( GVAR_VATS_BLOWN ) == 1))) then begin
		call Beth03;
	end
	else begin
		call Beth07;
	end
end
