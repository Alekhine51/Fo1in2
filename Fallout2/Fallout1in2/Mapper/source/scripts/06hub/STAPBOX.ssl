/*

        Hub, Mrs. Stapleton - Merchant inventory container

        NOTE:
            In vanilla Fo1, Mrs. Stapleton always restocks instantly after initializing the dialog.
            However#1, for simplicity we will only restock after each map enter.
            However#2, money is the exception and follows Fo2 merchant restocking rules.

*/

/* Include Files */
#include "define.h"

#define NAME                    SCRIPT_STAPBOX

#include "command.h"

#define LVAR_RESTOCK_TIME                       (0)
#define LVAR_INIT_INVEN                         (1)

procedure start;
procedure map_enter_p_proc;

import variable Staple_Box_Ptr;

variable Items_List;
variable Item;

procedure start begin
   Staple_Box_Ptr := self_obj;
end

procedure map_enter_p_proc begin
   Staple_Box_Ptr := self_obj;

   if (is_loading_game == false) then begin
      // Restock books:
      Items_List := [ PID_BIG_BOOK_OF_SCIENCE, PID_DEANS_ELECTRONICS, PID_FIRST_AID_BOOK, PID_SCOUT_HANDBOOK, PID_GUNS_AND_BULLETS ];
      foreach (Item in Items_List) begin
         while (self_item_count(Item) < 5) do begin
            add_obj_to_inven(Staple_Box_Ptr, create_object(Item, 0, 0));
         end
      end

      // Restock money:
      if fo1in2_merch_restock_enabled then begin
         if (local_var(LVAR_RESTOCK_TIME) < game_time) then begin
            item_caps_adjust(self_obj, random(250, 500) - self_caps);
            set_local_var(LVAR_RESTOCK_TIME, (random(1, 3) * ONE_GAME_DAY) + game_time);
         end
      end
      else begin
         item_caps_adjust(self_obj, 500 - self_caps);
      end
   end


   /*
   // Fo2-style merchant inventory:
   if fo1in2_merch_restock_enabled then begin
      if (is_loading_game == false) then begin
         if (local_var(LVAR_RESTOCK_TIME) < game_time) then begin
            item_caps_adjust(self_obj, random(250, 500) - self_caps);

            check_restock_item(PID_BIG_BOOK_OF_SCIENCE, 1, 5, 100)
            check_restock_item(PID_DEANS_ELECTRONICS, 1, 5, 100)
            check_restock_item(PID_FIRST_AID_BOOK, 1, 5, 100)
            check_restock_item(PID_SCOUT_HANDBOOK, 1, 5, 100)
            check_restock_item(PID_GUNS_AND_BULLETS, 1, 5, 100)
            //check_restock_item(PID_CHEMISTRY_MANUAL, 1, 5, 100)

            set_local_var(LVAR_RESTOCK_TIME, (random(1, 3) * ONE_GAME_DAY) + game_time);
         end
      end
   end

   // Fo1-style merchant inventory:
   else if (local_var(LVAR_RESTOCK_TIME) == 0) then begin
      set_local_var(LVAR_RESTOCK_TIME, 1);

      if self_caps < 500 then
         item_caps_adjust(self_obj, 500 - self_caps);

      give_pid_qty(self_obj, PID_BIG_BOOK_OF_SCIENCE, 5)
      give_pid_qty(self_obj, PID_DEANS_ELECTRONICS, 5)
      give_pid_qty(self_obj, PID_FIRST_AID_BOOK, 5)
      give_pid_qty(self_obj, PID_SCOUT_HANDBOOK, 5)
      give_pid_qty(self_obj, PID_GUNS_AND_BULLETS, 5)
      //give_pid_qty(self_obj, PID_CHEMISTRY_MANUAL, 5)
   end
   */
end
