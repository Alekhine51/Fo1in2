/*

	Hub - Dan

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_DAN
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure timed_event_p_proc;
procedure damage_p_proc;

procedure Dan00;
procedure Dan01;
procedure Dan02;
procedure Dan03;
procedure Dan04;
procedure Dan05;
procedure Dan06;
procedure Dan07;
procedure Dan08;
procedure Dan09;
procedure Dan10;
procedure Dan11;
procedure Dan12;
procedure Dan13;
procedure Dan14;
procedure Dan15;
procedure Dan16;
procedure Dan17;
procedure Dan18;
procedure Dan19;
procedure Dan20;
procedure Dan21;
procedure Dan22;
procedure Dan23;
procedure Dan24;
procedure Dan25;
procedure Dan26;
procedure Dan27;
procedure Dan28;

procedure DanAtNight;
procedure SendToStart;
procedure SendToStreet;
procedure SendToCattle1;
procedure SendToCattle2;
procedure SendToSleep;
procedure DanEnd;

variable tmp_hostile;
variable Only_Once := 1;
variable SetDayNight;
variable NightCount;
variable Talky;
variable WalkToTalker;
variable Sleeping;

import variable Billy_ptr;
import variable Dan_ptr;

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_DAN_THE_BRAHMIN_MAN );
		set_self_ai( AI_MERCHANT );
		Dan_ptr := self_obj;
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if (morning) then begin
		if (SetDayNight == 0) then begin
			add_timer_event(self_obj, game_ticks(30), 3);
			SetDayNight := 1;
		end
	end
	if (map_var(0) == 1) then begin
		if (WalkToTalker == 0) then begin
			reg_anim_clear( self_obj );
			reg_anim_begin();
			reg_anim_obj_move_to_tile(self_obj, 13891, -1);
			reg_anim_end();
			WalkToTalker := 1;
		end
	end
	if (self_tile == 13891) then begin
		if (map_var(0) == 1) then begin
			if (Talky == 0) then begin
				call Dan27;
				Talky := 1;
				add_timer_event(self_obj, game_ticks(60 * 2), 1);
			end
		end
	end
end

procedure pickup_p_proc
begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_self;
	get_reaction
	if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		call DanAtNight;
	end
	else begin
		if (local_var(4) == 1) then begin
			set_local_var(4, 2);
			if ((map_var(0) == 2) and (local_var(8) == 0)) then begin
				if (local_var(1) > 1) then begin
					start_gdialog(562, self_obj, 4, -1, -1);
					gsay_start;
					call Dan15;
					gsay_end;
					end_dialogue;
				end
				else begin
					call Dan28;
				end
			end
			else begin
				call Dan28;
			end
		end
		else begin
			if (local_var(4) == 2) then begin
				if ((map_var(0) == 2) and (local_var(8) == 0)) then begin
					if (local_var(1) == 1) then begin
						start_gdialog(562, self_obj, 4, -1, -1);
						gsay_start;
						call Dan16;
						gsay_end;
						end_dialogue;
					end
					else begin
						call Dan28;
					end
				end
				else begin
					call Dan28;
				end
			end
			else begin
				start_gdialog(562, self_obj, 4, -1, -1);
				gsay_start;
				call Dan00;
				gsay_end;
				end_dialogue;
				set_local_var(4, 1);
			end
		end
	end
end

procedure destroy_p_proc begin
	set_global_var( GVAR_DAN_HUB_STATUS, 1 );
	rm_timer_event(self_obj);

	inc_good_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(NAME, 100));
end

procedure timed_event_p_proc begin
	if (morning or (day)) then begin
		if (Sleeping == 1) then begin
			reg_anim_clear( self_obj );
			reg_anim_begin();
			reg_anim_obj_move_to_tile(self_obj, 12871, -1);
			reg_anim_end();
			add_timer_event(self_obj, game_ticks(60 * 25), 2);
			Sleeping := 0;
		end
		else begin
			if (fixed_param == 1) then begin
				call SendToStart;
			end
			else begin
				if (fixed_param == 2) then begin
					call SendToStreet;
				end
				else begin
					if (fixed_param == 3) then begin
						call SendToCattle1;
					end
					else begin
						if (fixed_param == 4) then begin
							call SendToCattle2;
						end
					end
				end
			end
		end
	end
	else begin
		call SendToSleep;
		if (fixed_param == 4) then begin
			if (tile_distance_objs(self_obj, dude_obj) <= 10) then begin
				float_msg( self_obj, message_str(NAME, 215), FLOAT_MSG_RED );
			end
		end
		else begin
			if (fixed_param == 5) then begin
				NightCount := 0;
				if (tile_distance_objs(self_obj, dude_obj) <= 10) then begin
					float_msg( self_obj, message_str(NAME, 216), FLOAT_MSG_RED );
					tmp_hostile := 1;
				end
			end
		end
	end
end

procedure damage_p_proc
begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_HUB, 1 );
	end
end

procedure Dan00
begin
	gsay_reply( NAME, 102 );
	giq_option( 5, NAME, 106, Dan11, NEUTRAL_REACTION );
	giq_option( 4, NAME, 107, Dan01, NEUTRAL_REACTION );
	if (map_var(0) == 2) then begin
		giq_option( 4, NAME, 108, Dan14, NEUTRAL_REACTION );
		set_local_var(8, 1);
	end
	giq_option( -3, NAME, 109, Dan02, NEUTRAL_REACTION );
end

procedure Dan01
begin
	gsay_reply( NAME, 110 );
	giq_option( 4, NAME, 111, Dan03, NEUTRAL_REACTION );
	giq_option( 4, NAME, 112, Dan05, NEUTRAL_REACTION );
	giq_option( 5, NAME, 113, Dan11, NEUTRAL_REACTION );
	giq_option( 4, NAME, 114, DanEnd, NEUTRAL_REACTION );
end

procedure Dan02
begin
	gsay_message( NAME, 115, BAD_REACTION );
end

procedure Dan03
begin
	if (dude_is_male) then begin
		gsay_reply( NAME, 118 );
	end
	else begin
		gsay_reply( NAME, 119 );
	end
	giq_option( 4, NAME, 120, Dan04, BAD_REACTION );
	giq_option( 5, NAME, 121, Dan11, NEUTRAL_REACTION );
	giq_option( 4, NAME, 122, DanEnd, NEUTRAL_REACTION );
end

procedure Dan04
begin
	gsay_reply( NAME, 123 );
	giq_option( 4, NAME, 124, Dan06, BAD_REACTION );
	giq_option( 4, NAME, 125, DanEnd, NEUTRAL_REACTION );
end

procedure Dan05
begin
	gsay_reply( NAME, 126 );
	giq_option( 4, NAME, 127, Dan06, BAD_REACTION );
	giq_option( 4, NAME, 128, DanEnd, NEUTRAL_REACTION );
end

procedure Dan06
begin
	set_local_var(5, 1);
	gsay_reply( NAME, 129 );
	giq_option( 4, NAME, 130, Dan07, BAD_REACTION );
	giq_option( 4, NAME, 131, Dan09, NEUTRAL_REACTION );
end

procedure Dan07
begin
	gsay_reply( NAME, 132 );
	giq_option( 4, NAME, 133, Dan10, BAD_REACTION );
	giq_option( 4, NAME, 134, Dan08, NEUTRAL_REACTION );
end

procedure Dan08
begin
	gsay_reply( NAME, 135 );
	giq_option( 4, NAME, 136, Dan09, NEUTRAL_REACTION );
	giq_option( 4, NAME, 137, Dan11, NEUTRAL_REACTION );
end

procedure Dan09
begin
	if (dude_is_male) then begin
		gsay_message( NAME, 138, BAD_REACTION );
	end
	else begin
		gsay_message( NAME, 139, BAD_REACTION );
	end
end

procedure Dan10
begin
	gsay_message( NAME, 141, BAD_REACTION );
	call combat;
end

procedure Dan11
begin
	if (dude_is_male) then begin
		gsay_reply( NAME, 142 );
	end
	else begin
		gsay_reply( NAME, message_str(NAME, 142) + " " + message_str(NAME, 143) );
	end
	giq_option( 7, NAME, 144, Dan12, NEUTRAL_REACTION );
	giq_option( 4, NAME, 145, Dan13, NEUTRAL_REACTION );
	giq_option( 4, NAME, 146, DanEnd, NEUTRAL_REACTION );
end

procedure Dan12
begin
	gsay_reply( NAME, 147 );
	giq_option( 4, NAME, 148, DanEnd, NEUTRAL_REACTION );
	giq_option( 4, NAME, 149, DanEnd, NEUTRAL_REACTION );
	giq_option( 5, NAME, 150, Dan13, NEUTRAL_REACTION );
end

procedure Dan13
begin
	gsay_message( NAME, 151, NEUTRAL_REACTION );
end

procedure Dan14
begin
	gsay_reply( NAME, 152 );
	giq_option( 4, NAME, 153, Dan17, NEUTRAL_REACTION );
	giq_option( 4, NAME, 154, DanEnd, NEUTRAL_REACTION );
end

procedure Dan15
begin
	gsay_reply( NAME, 155 );
	giq_option( 5, NAME, 156, Dan11, NEUTRAL_REACTION );
	giq_option( 4, NAME, 157, Dan01, NEUTRAL_REACTION );
	if (map_var(0) == 2) then begin
		giq_option( 4, NAME, 158, Dan14, NEUTRAL_REACTION );
	end
	giq_option( 4, NAME, 159, DanEnd, NEUTRAL_REACTION );
	giq_option( -3, NAME, 160, Dan02, NEUTRAL_REACTION );
end

procedure Dan16
begin
	gsay_reply( NAME, 161 );
	if (map_var(0) == 2) then begin
		giq_option( 4, NAME, 162, Dan14, NEUTRAL_REACTION );
	end
	giq_option( 4, NAME, 163, DanEnd, NEUTRAL_REACTION );
	giq_option( -3, NAME, 164, Dan02, NEUTRAL_REACTION );
end

procedure Dan17
begin
	gsay_reply( NAME, 168 );
	giq_option( 4, NAME, 169, Dan19, NEUTRAL_REACTION );
	giq_option( 4, NAME, 170, Dan18, NEUTRAL_REACTION );
	giq_option( 4, NAME, 171, DanEnd, NEUTRAL_REACTION );
end

procedure Dan18
begin
	gsay_reply( NAME, 172 );
	giq_option( 5, NAME, 173, Dan19, NEUTRAL_REACTION );
	giq_option( 4, NAME, 174, DanEnd, NEUTRAL_REACTION );
end

procedure Dan19
begin
	gsay_reply( NAME, 175 );
	giq_option( 4, NAME, 176, Dan20, BAD_REACTION );
	giq_option( 4, NAME, 177, DanEnd, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 178, Dan20, BAD_REACTION );
	end
	giq_option( 4, NAME, 179, Dan22, NEUTRAL_REACTION );
	giq_option( 4, NAME, 180, Dan23, NEUTRAL_REACTION );
end

procedure Dan20
begin
	gsay_reply( NAME, 181 );
	giq_option( 4, NAME, 182, Dan21, BAD_REACTION );
	giq_option( 4, NAME, 183, Dan21, BAD_REACTION );
	giq_option( 4, NAME, 184, Dan24, NEUTRAL_REACTION );
	giq_option( 4, NAME, 185, Dan25, NEUTRAL_REACTION );
end

procedure Dan21
begin
	gsay_reply( NAME, 186 );
	giq_option( 4, NAME, 187, DanEnd, NEUTRAL_REACTION );
	giq_option( 4, NAME, 188, DanEnd, NEUTRAL_REACTION );
	giq_option( 4, NAME, 189, DanEnd, NEUTRAL_REACTION );
end

procedure Dan22
begin
	set_local_var(7, 1);
	set_map_var(1, 1);
	gsay_message( NAME, 190, NEUTRAL_REACTION );
end

procedure Dan23
begin
	gsay_message( NAME, 191, NEUTRAL_REACTION );
end

procedure Dan24
begin
	gsay_reply( NAME, 192 );
	giq_option( 4, NAME, 193, DanEnd, BAD_REACTION );
	giq_option( 4, NAME, 194, DanEnd, BAD_REACTION );
	giq_option( 4, NAME, 195, DanEnd, BAD_REACTION );
end

procedure Dan25
begin
	gsay_message( NAME, 196, NEUTRAL_REACTION );
end

procedure Dan26
begin
	if (tile_num(Billy_ptr) != 9858) then begin
		float_msg( self_obj, message_str(NAME, random(197, 199)), FLOAT_MSG_RED );
	end
end

procedure Dan27
begin
	float_msg( self_obj, message_str(NAME, random(200, 203)), FLOAT_MSG_RED );
	set_map_var(0, 2);
end

procedure Dan28
begin
	float_msg( self_obj, message_str(NAME, random(208, 213)), FLOAT_MSG_RED );
end

procedure DanAtNight
begin
	if (NightCount == 0) then begin
		float_msg( self_obj, message_str(NAME, 214), FLOAT_MSG_RED );
		NightCount := 1;
		add_timer_event(self_obj, game_ticks(5), 4);
		add_timer_event(self_obj, game_ticks(10), 5);
	end
end

procedure SendToStart
begin
	reg_anim_clear( self_obj );
	reg_anim_begin();
	reg_anim_obj_move_to_tile(self_obj, 15522, -1);
	reg_anim_end();
	add_timer_event(self_obj, game_ticks(60 * 12), 2);
end

procedure SendToStreet
begin
	reg_anim_clear( self_obj );
	reg_anim_begin();
	reg_anim_obj_move_to_tile(self_obj, 15295, -1);
	reg_anim_end();
	add_timer_event(self_obj, game_ticks(60 * 2), 3);
end

procedure SendToCattle1
begin
	reg_anim_clear( self_obj );
	reg_anim_begin();
	reg_anim_obj_move_to_tile(self_obj, 12871, -1);
	reg_anim_end();
	if (random(1, 10) >= 6) then begin
		add_timer_event(self_obj, game_ticks(60 * 3), 4);
	end
	else begin
		add_timer_event(self_obj, game_ticks(60 * 4), 1);
	end
end

procedure SendToCattle2
begin
	reg_anim_clear( self_obj );
	reg_anim_begin();
	reg_anim_obj_move_to_tile(self_obj, 12871, -1);
	reg_anim_end();
	add_timer_event(self_obj, game_ticks(60 * 4), 1);
end

procedure SendToSleep
begin
	if (Sleeping == 0) then begin
		reg_anim_clear( self_obj );
		reg_anim_begin();
		reg_anim_obj_move_to_tile(self_obj, 14932, -1);
		reg_anim_end();
		SetDayNight := 0;
		Sleeping := 1;
	end
end

procedure DanEnd
begin
end
