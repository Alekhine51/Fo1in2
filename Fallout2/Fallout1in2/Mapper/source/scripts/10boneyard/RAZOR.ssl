/*

   Boneyard - Razor, the leader of the blades

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\maps\laadytum.h"
#include "..\headers\boneyard.h"

#define NAME                    SCRIPT_RAZOR
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure map_update_p_proc;

procedure Razor01;
procedure Razor02;
procedure Razor03;
procedure Razor04;
procedure Razor04a;
procedure Razor05;
procedure Razor06;
procedure Razor07;
procedure Razor08;
procedure Razor09;
procedure Razor10;
procedure Razor11;
procedure Razor12;
procedure Razor13;
procedure Razor14;
procedure Razor15;
procedure Razor16;
procedure Razor17;
procedure Razor18;
procedure Razor19;
procedure Razor20;
procedure Razor21;
procedure Razor22;
procedure Razor22a;
procedure Razor23;
procedure Razor24;
procedure Razor25;
procedure Razor26;
procedure Razor27;
procedure Razor28;
procedure Razor29;
procedure Razor30;
procedure Razor31;
procedure Razor32;
procedure Razor33;
procedure Razor34;
procedure Razor35;
procedure Razor36;
procedure Razor37;
procedure Razor38;
procedure Razor41;
procedure Razor42;
procedure Razor43;
procedure Razor44;
procedure Razor45;
procedure Razor46;
procedure Razor46a;
procedure Razor47;
procedure Razor47a;
procedure Razor48;
procedure RazorFin;
procedure RazorReg;
procedure RazorEnd;
procedure RemoveBlades;
procedure fix00;

import variable RazorPtr;

variable Only_Once := 1;
variable DisplayMessage := 100;

procedure Start begin
   if Only_Once then begin
      set_self_team(TEAM_LA_BLADES);
      set_self_ai(AI_BLADES);
      if (global_var(GVAR_ADYTUM_RAZOR_SOMETHING_1) == 1) then begin
         set_local_var(4, 1);
      end
      Only_Once := 0;
   end
end

procedure look_at_p_proc begin
   script_overrides;
   if (local_var(4) == 1) then begin
      display_msg(mstr(220));
   end
   else begin
      display_msg(mstr(221));
   end
end

procedure description_p_proc begin
   script_overrides;
   if (local_var(4) == 1) then begin
      display_msg(mstr(220));
   end
   else begin
      display_msg(mstr(221));
   end
end

procedure talk_p_proc begin
   dude_look_at_self;

   if (global_var(GVAR_ENEMY_BLADES) == 1) then begin
      float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), FLOAT_MSG_RED);
   end
   else begin
      if ((global_var(GVAR_BLADES_STATUS) == 2) and (local_var(6) == 1)) then begin
         float_msg(self_obj, mstr(random(215, 217)), FLOAT_MSG_NORMAL);
      end
      else begin
         if ((local_var(4) == 1) and (dude_iq < 4)) then begin
            float_msg(self_obj, mstr(222), FLOAT_MSG_NORMAL);
         end
         else begin
            get_reaction
            start_gdialog(278, self_obj, -1, -1, -1);
            gsay_start;
            if (global_var(GVAR_BLADES_STATUS) == 2) then begin
               if (global_var(GVAR_ADYTUM_RAZOR_SOMETHING_0) == 1) then begin
                  if (global_var(GVAR_ADYTUM_RAZOR_SOMETHING_2) == 1) then begin
                     call Razor45;
                  end
                  else begin
                     if (local_var(4) == 0) then begin
                        call Razor42;
                     end
                     else begin
                        call Razor48;
                     end
                  end
               end
               else begin
                  call RazorFin;
               end
               set_local_var(6, 1);
            end
            else begin

               if get_gunrunners_armed_blades then begin
                  call Razor33;
               end
               else if get_task_kill_razor then begin
                  call Razor20;
               end
               else if global_var(GVAR_RECEIVED_HOLODISK_RAZOR) and not(get_gunrunners_armed_dude) then begin
                  call Razor26;
               end
               else if get_zimmermann_turned then begin
                  call Razor30;
               end
               else if (global_var(GVAR_ADYTUM_RAZOR_SOMETHING_2) == 1) then begin
                  call Razor46;
               end
               else if (global_var(GVAR_ZIMMERMAN_STATUS) == 0) then begin
                  call Razor01;
               end
               else if (global_var(GVAR_DUDE_ENEMY_BLADES) == 1) then begin
                  call Razor37;
               end
               else begin
                  call fix00;
               end

            end
            gsay_end;
            end_dialogue;
         end
      end
   end
end

procedure damage_p_proc begin
   if source_obj == dude_obj then begin
      set_global_var(GVAR_ENEMY_BLADES, 1);
   end
end

procedure destroy_p_proc begin
   if source_obj == dude_obj then begin
      inc_good_critter
      set_global_var(GVAR_ENEMY_BLADES, 1);
   end
   set_razor_killed;
   set_blades_quest_completed;
end

procedure critter_p_proc begin
   if (global_var(GVAR_ADYTUM_RAZOR_SOMETHING_1) == 1) then begin
      set_local_var(4, 1);
   end
   if (local_var(5) == 1) then begin
      attack(dude_obj);
      set_local_var(5, 0);
      set_global_var(GVAR_ENEMY_BLADES, 1);
   end
end

procedure pickup_p_proc begin
   set_global_var(GVAR_ENEMY_BLADES, 1);
end

procedure map_update_p_proc begin
   if (RazorPtr == 0) then
      RazorPtr := self_obj;

   if (global_var(GVAR_ADYTUM_RAZOR_SOMETHING_1) == 1) then begin
      set_local_var(4, 1);
   end
end

procedure Razor01 begin
   Reply(100);
   NOption(101, Razor02, 4);
   NOption(102, Razor03, 4);
   NOption(103, RazorEnd, 4);
   NLowOption(104, Razor41);
end

procedure Razor02 begin
   Reply(105);
   gsay_option(NAME, 106, Razor03, 50);
   gsay_option(NAME, 107, Razor04, 50);
   gsay_option(NAME, mstr(108) + dude_name + ".", Razor05, 50);
   gsay_option(NAME, 109, RazorEnd, 50);
   set_local_var(4, 1);
end

procedure Razor03 begin
   Reply(110);
   gsay_option(NAME, 111, Razor06, 50);
   gsay_option(NAME, 112, Razor07, 50);
   gsay_option(NAME, 113, RazorEnd, 50);
end

procedure Razor04 begin
   Reply(114);
   gsay_option(NAME, 115, Razor09, 50);
   gsay_option(NAME, 116, Razor04a, 50);
   gsay_option(NAME, 238, RazorReg, 50);
   gsay_option(NAME, 117, RazorEnd, 50);
end

procedure Razor04a begin
   BottomReact
end

procedure Razor05 begin
   Reply(118);
   gsay_option(NAME, 119, Razor08, 50);
   gsay_option(NAME, 120, Razor08, 50);
   gsay_option(NAME, 121, RazorEnd, 50);
end

procedure Razor06 begin
   Reply(122);
   gsay_option(NAME, 123, Razor09, 50);
   gsay_option(NAME, 124, Razor10, 50);
   gsay_option(NAME, 125, Razor19, 50);
   gsay_option(NAME, 126, RazorEnd, 50);
end

procedure Razor07 begin
   Reply(127);
   gsay_option(NAME, 128, Razor09, 50);
   gsay_option(NAME, 129, Razor19, 50);
   gsay_option(NAME, 130, Razor19, 50);
end

procedure Razor08 begin
   Reply(131);
   gsay_option(NAME, 132, Razor04, 50);
   gsay_option(NAME, 133, Razor03, 50);
end

procedure Razor09 begin
   Reply(134);
   gsay_option(NAME, 135, Razor11, 50);
   gsay_option(NAME, 136, RazorEnd, 50);
   set_arming_blades;
end

procedure Razor10 begin
   Reply(137);
   gsay_option(NAME, 138, Razor12, 50);
   gsay_option(NAME, 139, Razor14, 50);
   gsay_option(NAME, 238, RazorReg, 50);
end

procedure Razor11 begin
   Reply(140);
   gsay_option(NAME, 141, Razor18, 50);
   gsay_option(NAME, 238, RazorReg, 50);
   gsay_option(NAME, 142, RazorEnd, 50);
end

procedure Razor12 begin
   Reply(143);
   gsay_option(NAME, 144, Razor13, 50);
   gsay_option(NAME, 145, RazorEnd, 50);
end

procedure Razor13 begin
   Reply(146);
   gsay_option(NAME, 147, Razor14, 50);
end

procedure Razor14 begin
   Reply(148);
   gsay_option(NAME, 149, Razor15, 50);
   gsay_option(NAME, 150, Razor09, 50);
end

procedure Razor15 begin
   Reply(151);
   gsay_option(NAME, 152, Razor27, 50);
   gsay_option(NAME, 153, Razor17, 50);
end

procedure Razor16 begin
variable holodisk;

   Reply(154);
   gsay_option(NAME, 155, RazorEnd, 50);
   if not(global_var(GVAR_RECEIVED_HOLODISK_RAZOR)) then begin
      set_global_var(GVAR_RECEIVED_HOLODISK_RAZOR, 1);
   end
   set_map_var(1, 1);

   // TODO: Figure out why this was in obj_dude critter_p_proc ....
   set_global_var(GVAR_RECEIVED_HOLODISK_RAZOR, 2);
   holodisk := create_object_sid(PID_REGULATOR_HOLODISK, 0, 0, SCRIPT_REGDISK);
   add_obj_to_inven(dude_obj, holodisk);
   //set_global_var( GVAR_RAZOR_HOLODISK_POINTER, holodisk );
end

procedure Razor17 begin
   Reply(156);
   gsay_option(NAME, 157, RazorEnd, 50);
end

procedure Razor18 begin
   Reply(158);
   gsay_option(NAME, 159, RazorEnd, 50);
   set_arming_blades;
end

procedure Razor19 begin
   Reply(160);
   gsay_option(NAME, 161, RazorEnd, 50);
end

procedure Razor20 begin
   Reply(162);
   NOption(163, Razor21, 4);
   NOption(164, RazorEnd, 4);
   NLowOption(165, Razor41);
end

procedure Razor21 begin
   Reply(166);
   gsay_option(NAME, 167, Razor22, 50);
   gsay_option(NAME, 168, Razor07, 50);
   gsay_option(NAME, 169, RazorEnd, 50);
end

procedure Razor22 begin
   Reply(170);
   gsay_option(NAME, 171, Razor22a, 50);
   gsay_option(NAME, 172, Razor23, 50);
end

procedure Razor22a begin
   set_local_var(5, 1);
end

procedure Razor23 begin
   Reply(173);
   gsay_option(NAME, 174, Razor22a, 50);
   gsay_option(NAME, 175, Razor24, 50);
end

procedure Razor24 begin
   Reply(176);
   gsay_option(NAME, 177, Razor22a, 50);
   gsay_option(NAME, 178, Razor25, 50);
end

procedure Razor25 begin
   Reply(179);
   gsay_option(NAME, 180, Razor13, 50);
end

procedure Razor26 begin
   Reply(181);
   NOption(182, Razor29, 4);
   NLowOption(183, Razor41);
end

procedure Razor27 begin
   Reply(184);
   gsay_option(NAME, 185, Razor28, 50);
   gsay_option(NAME, 238, RazorReg, 50);
   gsay_option(NAME, 186, RazorEnd, 50);
end

procedure Razor28 begin
   Reply(187);
   gsay_option(NAME, 188, Razor16, 50);
   set_arming_blades;
end

procedure Razor29 begin
   NMessage(189);
end

procedure Razor30 begin
   Reply(190);
   NOption(191, Razor31, 4);
   NLowOption(192, Razor41);
end

procedure Razor31 begin
   Reply(193);
   gsay_option(NAME, 194, Razor32, 50);
   gsay_option(NAME, 195, Razor19, 50);
end

procedure Razor32 begin
   NMessage(196);
   set_arming_blades;
end

procedure Razor33 begin
   Reply(197);
   NOption(198, Razor34, 4);
   NOption(199, Razor35, 4);

   if (global_var(GVAR_ZIMMERMAN_STATUS) != 9003) then
      NOption(201, Razor36, 4);

   NLowOption(200, Razor41);
end

procedure Razor34 begin
   gfade_out(1);
   game_time_advance(game_ticks(10 * 60 * 60 * 8));
   set_blades_attacking_alone;
   TopReact
   gfade_in(1);
   NMessage(202);
end

procedure Razor35 begin
   gfade_out(1);
   game_time_advance(game_ticks(ONE_GAME_DAY));
   set_blades_attacking;
   TopReact
   gfade_in(1);
   NMessage(203);
   load_map("laadytum.map", 1);
end

procedure Razor36 begin
   NMessage(204);
   set_blades_attacking_wait;
end

procedure Razor37 begin
   if (dude_is_male) then begin
      Reply(mstr(240) + " " + mstr(205));
   end
   else begin
      Reply(mstr(241) + " " + mstr(205));
   end
   NOption(206, RazorEnd, 4);
   NOption(207, RazorEnd, 4);

   if global_var(GVAR_RECEIVED_HOLODISK_RAZOR) then
      NOption(208, Razor38, 4);

   NOption(209, Razor22a, 4);
   NLowOption(210, Razor41);
end

procedure Razor38 begin
   NMessage(211);
end

procedure Razor41 begin
   NMessage(218);
end

procedure Razor42 begin
   Reply(224);
   NOption(225, Razor43, 4);
   NLowOption(226, Razor41);
end

procedure Razor43 begin
   Reply(227);
   gsay_option(NAME, 228, Razor44, 50);
end

procedure Razor44 begin
   NMessage(229);
   set_global_var(GVAR_PLAYER_REPUTATION, check_general_rep + 2);
   display_msg(message_str(SCRIPT_GENCHAT, 103) + 500 + message_str(SCRIPT_GENCHAT, 104));
   give_exp_points(500);
end

procedure Razor45 begin
   NMessage(230);
   set_global_var(GVAR_PLAYER_REPUTATION, check_general_rep + 2);
   display_msg(message_str(SCRIPT_GENCHAT, 103) + 500 + message_str(SCRIPT_GENCHAT, 104));
   give_exp_points(500);
end

procedure Razor46 begin
   Reply(231);
   gsay_option(NAME, 232, Razor46a, 50);
   gsay_option(NAME, 233, Razor47, 50);
end

procedure Razor46a begin
   NMessage(215);
end

procedure Razor47 begin
   Reply(234);
   gsay_option(NAME, 235, Razor47a, 50);
   gsay_option(NAME, 236, RazorEnd, 50);
end

procedure Razor47a begin
   NMessage(215);
   set_arming_blades;
end

procedure Razor48 begin
   NMessage(237);
   set_global_var(GVAR_PLAYER_REPUTATION, check_general_rep + 2);
   display_msg(message_str(SCRIPT_GENCHAT, 103) + 500 + message_str(SCRIPT_GENCHAT, 104));
   give_exp_points(500);
end

procedure RazorFin begin
   NMessage(223);
end

procedure RazorReg begin
   NMessage(239);
   set_global_var(GVAR_ADYTUM_RAZOR_SOMETHING_2, 1);
end

procedure RazorEnd begin
end

procedure RemoveBlades begin
end

procedure fix00 begin
   NMessage(222);
end
