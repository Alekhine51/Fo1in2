/*

   Boneyard - Super Mutant invaders

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\maps\lafollwr.h"

#define NAME                    SCRIPT_CHDSCOUT
//#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

procedure ChdScout0;
procedure ChdScout1;
procedure ChdScout2;
procedure ChdScout3;
procedure ChdScout4;
procedure ChdScout5;
procedure ChdScout6;
procedure ChdScout7;
procedure ChdScout8;
procedure ChdScout9;
procedure ChdScout10;
procedure ChdScout11;
procedure ChdScout12;
procedure ChdScout13;
procedure ChdScout14;
procedure ChdScout15;
procedure ChdScout16;
procedure ChdScout17;
procedure ChdScout17a;
procedure ChdScout18;
procedure ChdScout19;
procedure ChdScout20;
procedure ChdScout21;
procedure ChdScout22;
procedure ChdScout23;
procedure ChdScout24;
procedure ChdScout25;
procedure ChdScout26;
procedure ChdScout27;
procedure ChdScout28;
procedure ChdScout29;
procedure ChdScout30;
procedure ChdScout31;
procedure ChdScout32;
procedure ChdScout33;
procedure ChdScout34;
procedure ChdScout35;
procedure ChdScoutend;
procedure combat;
procedure to_orfeo;

import variable Orfeo_ptr;

variable tmp_hostile;
variable initial := 0;
variable in_timed_event;
variable weaponPtr;

procedure start begin
   if (not(initial)) then begin
      initial := 1;
      set_self_team(TEAM_CATHEDRAL);
      set_self_ai(AI_BRAINWASHED_CHILDREN);
      self_rotate(random(0, 5));
      if (local_var(1) == 0) then begin
         set_local_var(1, 1);
         weaponPtr := create_object(PID_10MM_SMG, 0, 0);
         add_obj_to_inven(self_obj, weaponPtr);
         wield_obj_critter(self_obj, weaponPtr);
         add_obj_to_inven(self_obj, create_object(PID_10MM_JHP, 0, 0));
      end
   end
end

procedure critter_p_proc begin
   if (global_var(GVAR_ENEMY_FOLL_INVADERS)) then begin
      tmp_hostile := 1;
   end
   else if (tmp_hostile and self_can_see_dude) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if (not(in_timed_event)) then begin
         in_timed_event := 1;
         add_timer_event(self_obj, game_ticks(random(6, 10)), random(1, 3));
      end
      if (self_can_see_dude and (tile_distance_objs(self_obj, dude_obj) < 6)) then begin
         if (local_var(0) == 0) then begin
            dialogue_system_enter;
         end
      end
   end
end

procedure destroy_p_proc begin
   inc_evil_critter
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_FOLL_INVADERS, 1);
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure talk_p_proc begin
   dude_look_at_self;
   if (local_var(0)) then begin
      start_dialog_at_node(ChdScout35);
   end
   else begin
      set_local_var(0, 1);
      start_dialog_at_node(ChdScout0);
   end
end

procedure timed_event_p_proc begin
   if (fixed_param == 1) then
      self_rotate(random(0, 5));
   else
      self_walk_to_tile(tile_num_in_direction(self_tile, random(0, 5), random(1, 3)));
   in_timed_event := 0;
end

procedure ChdScout0 begin
   Reply(101);
   NLowOption(102, ChdScout1);
   NOption(103, ChdScout13, 4);
   NOption(104, ChdScout25, 4);
   NOption(105, ChdScout26, 6);
   NOption(106, ChdScout27, 6);
end

procedure ChdScout1 begin
   Reply(107);
   NLowOption(108, ChdScout2);
   NLowOption(109, combat);
   NLowOption(110, ChdScout9);
end

procedure ChdScout2 begin
   Reply(111);
   NLowOption(112, combat);
   NLowOption(113, ChdScout3);
   NLowOption(114, ChdScout4);
end

procedure ChdScout3 begin
   NMessage(115);
end

procedure ChdScout4 begin
   Reply(116);
   NLowOption(117, ChdScout5);
   NLowOption(118, combat);
   NLowOption(119, ChdScout6);
end

procedure ChdScout5 begin
   NMessage(120);
end

procedure ChdScout6 begin
   Reply(121);
   NLowOption(122, ChdScout7);
   NLowOption(123, ChdScout5);
   NLowOption(124, ChdScout8);
end

procedure ChdScout7 begin
   NMessage(125);
end

procedure ChdScout8 begin
   NMessage(126);
end

procedure ChdScout9 begin
   Reply(127);
   NLowOption(128, ChdScout10);
   NLowOption(129, ChdScout12);
   NLowOption(130, ChdScoutend);
end

procedure ChdScout10 begin
   Reply(131);
   NLowOption(132, ChdScout11);
   NLowOption(133, ChdScoutend);
end

procedure ChdScout11 begin
   NMessage(134);
end

procedure ChdScout12 begin
   Reply(135);
   NLowOption(136, ChdScoutend);
end

procedure ChdScout13 begin
   Reply(137);
   NOption(138, ChdScout14, 4);
   NOption(139, ChdScout15, 4);
   NOption(mstr(140) + dude_name + mstr(141), ChdScout22, 4);
   NOption(142, ChdScout24, 4);
   NOption(143, combat, 4);
end

procedure ChdScout14 begin
   NMessage(144);
   call to_orfeo;
end

procedure ChdScout15 begin
   Reply(145);
   NOption(146, ChdScout16, 4);
   NOption(147, ChdScout17, 4);
end

procedure ChdScout16 begin
   NMessage(148);
   call to_orfeo;
end

procedure ChdScout17 begin
   Reply(149);
   NOption(mstr(150) + dude_name + mstr(151), ChdScout17a, 4);
   NOption(152, ChdScout20, 4);
   NOption(153, combat, 4);
end

procedure ChdScout17a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call ChdScout18;
   end
   else begin
      call ChdScout19;
   end
end

procedure ChdScout18 begin
   NMessage(154);
end

procedure ChdScout19 begin
   NMessage(155);
   call combat;
end

procedure ChdScout20 begin
   Reply(156);
   NOption(mstr(157) + dude_name + mstr(158), ChdScout21, 4);
   NOption(159, combat, 4);
end

procedure ChdScout21 begin
   NMessage(160);
   call ChdScout17a;
end

procedure ChdScout22 begin
   Reply(mstr(161) + dude_name + mstr(162));
   NOption(163, ChdScout23, 4);
   NOption(164, ChdScout23, 4);
   NOption(165, combat, 4);
end

procedure ChdScout23 begin
   NMessage(166);
   call combat;
end

procedure ChdScout24 begin
   NMessage(167);
   call combat;
end

procedure ChdScout25 begin
   Reply(168);
   NOption(169, ChdScout14, 4);
   NOption(170, ChdScout15, 4);
   NOption(mstr(171) + dude_name + mstr(172), ChdScout22, 4);
   NOption(173, ChdScout24, 4);
   NOption(174, combat, 4);
end

procedure ChdScout26 begin
   NMessage(175);
   call combat;
end

procedure ChdScout27 begin
   Reply(176);
   NOption(177, ChdScout28, 6);
   NOption(178, ChdScout29, 6);
   NOption(179, ChdScout30, 6);
   NOption(180, ChdScout34, 6);
end

procedure ChdScout28 begin
   NMessage(181);
end

procedure ChdScout29 begin
   NMessage(182);
end

procedure ChdScout30 begin
   Reply(183);
   NOption(184, ChdScout31, 6);
   NOption(185, ChdScout32, 6);
   NOption(186, combat, 6);
end

procedure ChdScout31 begin
   NMessage(187);
   call to_orfeo;
end

procedure ChdScout32 begin
   Reply(188);
   NOption(189, ChdScout33, 6);
   NOption(190, ChdScout33, 6);
   NOption(191, combat, 6);
end

procedure ChdScout33 begin
   Reply(192);
   NOption(193, ChdScoutend, 6);
   NOption(194, combat, 6);
end

procedure ChdScout34 begin
   NMessage(195);
   call combat;
end

procedure ChdScout35 begin
   NMessage(196);
   call combat;
end

procedure ChdScoutend begin
end

procedure combat begin
   tmp_hostile := 1;
end

procedure to_orfeo begin
   load_map("lafollwr.map", 11);
end
