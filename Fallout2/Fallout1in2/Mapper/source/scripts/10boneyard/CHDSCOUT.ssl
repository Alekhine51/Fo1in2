/*

   Boneyard - Super Mutant invaders

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\maps\lafollwr.h"

#define NAME                    SCRIPT_CHDSCOUT
//#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

procedure ChdScout0;
procedure ChdScout1;
procedure ChdScout2;
procedure ChdScout3;
procedure ChdScout4;
procedure ChdScout5;
procedure ChdScout6;
procedure ChdScout7;
procedure ChdScout8;
procedure ChdScout9;
procedure ChdScout10;
procedure ChdScout11;
procedure ChdScout12;
procedure ChdScout13;
procedure ChdScout14;
procedure ChdScout15;
procedure ChdScout16;
procedure ChdScout17;
procedure ChdScout17a;
procedure ChdScout18;
procedure ChdScout19;
procedure ChdScout20;
procedure ChdScout21;
procedure ChdScout22;
procedure ChdScout23;
procedure ChdScout24;
procedure ChdScout25;
procedure ChdScout26;
procedure ChdScout27;
procedure ChdScout28;
procedure ChdScout29;
procedure ChdScout30;
procedure ChdScout31;
procedure ChdScout32;
procedure ChdScout33;
procedure ChdScout34;
procedure ChdScout35;
procedure ChdScoutend;
procedure combat;
procedure to_orfeo;

import variable Orfeo_ptr;

variable tmp_hostile;
variable initial := 0;
variable in_timed_event;
variable weaponPtr;

procedure start begin
   if (not(initial)) then begin
      initial := 1;
      set_self_team(TEAM_CATHEDRAL);
      set_self_ai(AI_BRAINWASHED_CHILDREN);
      self_rotate(random(0, 5));
      if (local_var(1) == 0) then begin
         set_local_var(1, 1);
         weaponPtr := create_object(PID_10MM_SMG, 0, 0);
         add_obj_to_inven(self_obj, weaponPtr);
         wield_obj_critter(self_obj, weaponPtr);
         add_obj_to_inven(self_obj, create_object(PID_10MM_JHP, 0, 0));
      end
   end
end

procedure critter_p_proc begin
   if (global_var(GVAR_ENEMY_FOLL_INVADERS)) then begin
      tmp_hostile := 1;
   end
   else if (tmp_hostile and self_can_see_dude) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if (not(in_timed_event)) then begin
         in_timed_event := 1;
         add_timer_event(self_obj, game_ticks(random(6, 10)), random(1, 3));
      end
      if (self_can_see_dude and (tile_distance_objs(self_obj, dude_obj) < 6)) then begin
         if (local_var(0) == 0) then begin
            dialogue_system_enter;
         end
      end
   end
end

procedure destroy_p_proc begin
   inc_evil_critter
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_FOLL_INVADERS, 1);
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(message_str(NAME, 100));
end

procedure talk_p_proc begin
   dude_look_at_self;
   if (local_var(0)) then begin
      start_dialog_at_node(ChdScout35);
   end
   else begin
      set_local_var(0, 1);
      start_dialog_at_node(ChdScout0);
   end
end

procedure timed_event_p_proc begin
   if (fixed_param == 1) then
      self_rotate(random(0, 5));
   else
      self_walk_to_tile(tile_num_in_direction(self_tile, random(0, 5), random(1, 3)));
   in_timed_event := 0;
end

procedure ChdScout0 begin
   gsay_reply(NAME, 101);
   giq_option(-3, NAME, 102, ChdScout1, NEUTRAL_REACTION);
   giq_option(4, NAME, 103, ChdScout13, NEUTRAL_REACTION);
   giq_option(4, NAME, 104, ChdScout25, NEUTRAL_REACTION);
   giq_option(6, NAME, 105, ChdScout26, NEUTRAL_REACTION);
   giq_option(6, NAME, 106, ChdScout27, NEUTRAL_REACTION);
end

procedure ChdScout1 begin
   gsay_reply(NAME, 107);
   giq_option(-3, NAME, 108, ChdScout2, NEUTRAL_REACTION);
   giq_option(-3, NAME, 109, combat, NEUTRAL_REACTION);
   giq_option(-3, NAME, 110, ChdScout9, NEUTRAL_REACTION);
end

procedure ChdScout2 begin
   gsay_reply(NAME, 111);
   giq_option(-3, NAME, 112, combat, NEUTRAL_REACTION);
   giq_option(-3, NAME, 113, ChdScout3, NEUTRAL_REACTION);
   giq_option(-3, NAME, 114, ChdScout4, NEUTRAL_REACTION);
end

procedure ChdScout3 begin
   gsay_message(NAME, 115, NEUTRAL_REACTION);
end

procedure ChdScout4 begin
   gsay_reply(NAME, 116);
   giq_option(-3, NAME, 117, ChdScout5, NEUTRAL_REACTION);
   giq_option(-3, NAME, 118, combat, NEUTRAL_REACTION);
   giq_option(-3, NAME, 119, ChdScout6, NEUTRAL_REACTION);
end

procedure ChdScout5 begin
   gsay_message(NAME, 120, NEUTRAL_REACTION);
end

procedure ChdScout6 begin
   gsay_reply(NAME, 121);
   giq_option(-3, NAME, 122, ChdScout7, NEUTRAL_REACTION);
   giq_option(-3, NAME, 123, ChdScout5, NEUTRAL_REACTION);
   giq_option(-3, NAME, 124, ChdScout8, NEUTRAL_REACTION);
end

procedure ChdScout7 begin
   gsay_message(NAME, 125, NEUTRAL_REACTION);
end

procedure ChdScout8 begin
   gsay_message(NAME, 126, NEUTRAL_REACTION);
end

procedure ChdScout9 begin
   gsay_reply(NAME, 127);
   giq_option(-3, NAME, 128, ChdScout10, NEUTRAL_REACTION);
   giq_option(-3, NAME, 129, ChdScout12, NEUTRAL_REACTION);
   giq_option(-3, NAME, 130, ChdScoutend, NEUTRAL_REACTION);
end

procedure ChdScout10 begin
   gsay_reply(NAME, 131);
   giq_option(-3, NAME, 132, ChdScout11, NEUTRAL_REACTION);
   giq_option(-3, NAME, 133, ChdScoutend, NEUTRAL_REACTION);
end

procedure ChdScout11 begin
   gsay_message(NAME, 134, NEUTRAL_REACTION);
end

procedure ChdScout12 begin
   gsay_reply(NAME, 135);
   giq_option(-3, NAME, 136, ChdScoutend, NEUTRAL_REACTION);
end

procedure ChdScout13 begin
   gsay_reply(NAME, 137);
   giq_option(4, NAME, 138, ChdScout14, NEUTRAL_REACTION);
   giq_option(4, NAME, 139, ChdScout15, NEUTRAL_REACTION);
   giq_option(4, NAME, message_str(NAME, 140) + dude_name + message_str(NAME, 141), ChdScout22, NEUTRAL_REACTION);
   giq_option(4, NAME, 142, ChdScout24, NEUTRAL_REACTION);
   giq_option(4, NAME, 143, combat, NEUTRAL_REACTION);
end

procedure ChdScout14 begin
   gsay_message(NAME, 144, NEUTRAL_REACTION);
   call to_orfeo;
end

procedure ChdScout15 begin
   gsay_reply(NAME, 145);
   giq_option(4, NAME, 146, ChdScout16, NEUTRAL_REACTION);
   giq_option(4, NAME, 147, ChdScout17, NEUTRAL_REACTION);
end

procedure ChdScout16 begin
   gsay_message(NAME, 148, NEUTRAL_REACTION);
   call to_orfeo;
end

procedure ChdScout17 begin
   gsay_reply(NAME, 149);
   giq_option(4, NAME, message_str(NAME, 150) + dude_name + message_str(NAME, 151), ChdScout17a, NEUTRAL_REACTION);
   giq_option(4, NAME, 152, ChdScout20, NEUTRAL_REACTION);
   giq_option(4, NAME, 153, combat, NEUTRAL_REACTION);
end

procedure ChdScout17a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call ChdScout18;
   end
   else begin
      call ChdScout19;
   end
end

procedure ChdScout18 begin
   gsay_message(NAME, 154, NEUTRAL_REACTION);
end

procedure ChdScout19 begin
   gsay_message(NAME, 155, NEUTRAL_REACTION);
   call combat;
end

procedure ChdScout20 begin
   gsay_reply(NAME, 156);
   giq_option(4, NAME, message_str(NAME, 157) + dude_name + message_str(NAME, 158), ChdScout21, NEUTRAL_REACTION);
   giq_option(4, NAME, 159, combat, NEUTRAL_REACTION);
end

procedure ChdScout21 begin
   gsay_message(NAME, 160, NEUTRAL_REACTION);
   call ChdScout17a;
end

procedure ChdScout22 begin
   gsay_reply(NAME, message_str(NAME, 161) + dude_name + message_str(NAME, 162));
   giq_option(4, NAME, 163, ChdScout23, NEUTRAL_REACTION);
   giq_option(4, NAME, 164, ChdScout23, NEUTRAL_REACTION);
   giq_option(4, NAME, 165, combat, NEUTRAL_REACTION);
end

procedure ChdScout23 begin
   gsay_message(NAME, 166, NEUTRAL_REACTION);
   call combat;
end

procedure ChdScout24 begin
   gsay_message(NAME, 167, NEUTRAL_REACTION);
   call combat;
end

procedure ChdScout25 begin
   gsay_reply(NAME, 168);
   giq_option(4, NAME, 169, ChdScout14, NEUTRAL_REACTION);
   giq_option(4, NAME, 170, ChdScout15, NEUTRAL_REACTION);
   giq_option(4, NAME, message_str(NAME, 171) + dude_name + message_str(NAME, 172), ChdScout22, NEUTRAL_REACTION);
   giq_option(4, NAME, 173, ChdScout24, NEUTRAL_REACTION);
   giq_option(4, NAME, 174, combat, NEUTRAL_REACTION);
end

procedure ChdScout26 begin
   gsay_message(NAME, 175, NEUTRAL_REACTION);
   call combat;
end

procedure ChdScout27 begin
   gsay_reply(NAME, 176);
   giq_option(6, NAME, 177, ChdScout28, NEUTRAL_REACTION);
   giq_option(6, NAME, 178, ChdScout29, NEUTRAL_REACTION);
   giq_option(6, NAME, 179, ChdScout30, NEUTRAL_REACTION);
   giq_option(6, NAME, 180, ChdScout34, NEUTRAL_REACTION);
end

procedure ChdScout28 begin
   gsay_message(NAME, 181, NEUTRAL_REACTION);
end

procedure ChdScout29 begin
   gsay_message(NAME, 182, NEUTRAL_REACTION);
end

procedure ChdScout30 begin
   gsay_reply(NAME, 183);
   giq_option(6, NAME, 184, ChdScout31, NEUTRAL_REACTION);
   giq_option(6, NAME, 185, ChdScout32, NEUTRAL_REACTION);
   giq_option(6, NAME, 186, combat, NEUTRAL_REACTION);
end

procedure ChdScout31 begin
   gsay_message(NAME, 187, NEUTRAL_REACTION);
   call to_orfeo;
end

procedure ChdScout32 begin
   gsay_reply(NAME, 188);
   giq_option(6, NAME, 189, ChdScout33, NEUTRAL_REACTION);
   giq_option(6, NAME, 190, ChdScout33, NEUTRAL_REACTION);
   giq_option(6, NAME, 191, combat, NEUTRAL_REACTION);
end

procedure ChdScout33 begin
   gsay_reply(NAME, 192);
   giq_option(6, NAME, 193, ChdScoutend, NEUTRAL_REACTION);
   giq_option(6, NAME, 194, combat, NEUTRAL_REACTION);
end

procedure ChdScout34 begin
   gsay_message(NAME, 195, NEUTRAL_REACTION);
   call combat;
end

procedure ChdScout35 begin
   gsay_message(NAME, 196, NEUTRAL_REACTION);
   call combat;
end

procedure ChdScoutend begin
end

procedure combat begin
   tmp_hostile := 1;
end

procedure to_orfeo begin
   load_map("lafollwr.map", 11);
end
