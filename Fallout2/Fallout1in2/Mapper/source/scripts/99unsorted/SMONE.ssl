#include "define.h"
#include "command.h"
#include "modreact.h"

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;

procedure goto00;
procedure goto01;
procedure goto02;
procedure goto03;

procedure zamin;
procedure combat;

import variable patient;
import variable lets_go;

variable my_tile;
variable lesson_ptr;
variable tmp_hostile;
variable Only_Once := 1;
variable ARMED;
variable PICK;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_NECROPOLIS_MUTANT);
      set_self_ai(AI_SUPER_MUTANT_AGGRESSIVE);
   end
end

procedure timed_event_p_proc begin
   if (tmp_hostile < 1) then begin
      lesson_ptr := lesson_ptr + 1;
      set_local_var(1, lesson_ptr);
      call goto00;
   end
end

procedure combat begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   my_tile := self_tile;
   if (my_tile == 12098) then begin
      move_to(self_obj, 7000, 0);
   end
   else begin
      if (tile_distance(my_tile, dude_tile) < 12) then begin
         if (local_var(2) != 1) then begin
            set_local_var(2, 1);
            lesson_ptr := 0;
            add_timer_event(self_obj, game_ticks(1), 0);
         end
      end
   end
   if (self_can_see_dude) then begin
      call zamin;
      if ((ARMED == 1) or not(DISGUISED)) then begin
         call combat;
      end
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   dude_look_at_self;
   call zamin;
   if ((ARMED == 1) or not(DISGUISED)) then begin
      call combat;
   end
end

procedure destroy_p_proc begin
   inc_evil_critter
end

procedure look_at_p_proc begin
   script_overrides;
end

procedure zamin begin
   ARMED := 0;
   if (dude_is_armed) then
      ARMED := 1;
   coc_disguise_check;
end

procedure goto00 begin
   PICK := lesson_ptr;
   if (PICK == 1) then
      float_msg(self_obj, message_str(SCRIPT_SMONE, 101), FLOAT_MSG_RED);
   else if (PICK == 2) then
      float_msg(patient, message_str(SCRIPT_SMONE, 102), FLOAT_MSG_YELLOW);
   else if (PICK == 3) then
      float_msg(self_obj, message_str(SCRIPT_SMONE, 103), FLOAT_MSG_RED);
   else if (PICK == 4) then
      call goto01;
   else if (PICK == 5) then
      call goto02;
   else if (PICK == 6) then
      float_msg(patient, message_str(SCRIPT_SMONE, 108), FLOAT_MSG_YELLOW);
   else if (PICK == 7) then
      float_msg(self_obj, message_str(SCRIPT_SMONE, 109), FLOAT_MSG_RED);
   else if (PICK == 8) then
      float_msg(patient, message_str(SCRIPT_SMONE, 110), FLOAT_MSG_YELLOW);
   else if (PICK == 9) then
      call goto03;
   add_timer_event(self_obj, game_ticks(3), 1);
end

procedure goto01 begin
   if (dude_is_male) then
      float_msg(patient, message_str(SCRIPT_SMONE, 104), FLOAT_MSG_YELLOW);
   else
      float_msg(patient, message_str(SCRIPT_SMONE, 105), FLOAT_MSG_YELLOW);
end

procedure goto02 begin
   if (dude_is_male) then
      float_msg(self_obj, message_str(SCRIPT_SMONE, 106), FLOAT_MSG_RED);
   else
      float_msg(self_obj, message_str(SCRIPT_SMONE, 107), FLOAT_MSG_RED);
end

procedure goto03 begin
   lets_go := 1;
   self_walk_to_tile(12098);
end
