/*

   Encounter - Lance, the traveler

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\shadysands.h"

#define NAME                    SCRIPT_LANCE

#include "..\headers\command.h"
#include "..\headers\modreact.h"
#include "..\headers\updatmap.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;

procedure Lance00;
procedure Lance00a;
procedure Lance01;
procedure Lance02;
procedure Lance03;
procedure Lance04;
procedure Lance04a;
procedure Lance05;
procedure Lance06;
procedure Lance07;
procedure Lance08;
procedure Lance09;
procedure Lance10;
procedure Lance11;
procedure Lance12;
procedure Lance13;
procedure Lance14;
procedure Lance15;
procedure Lance16;
procedure Lance17;
procedure Lance18;
procedure Lance19;
procedure Lance19a;
procedure Lance20;
procedure Lance21;
procedure Lance22;
procedure Lance23;
procedure Lance24;
procedure Lance25;
procedure Lance26;
procedure Lance27;
procedure Lance28;
procedure Lance29;
procedure Lance30;
procedure Lance31;
procedure Lance31a;
procedure Lance32;
procedure Lance33;
procedure Lance34;
procedure Lance35;
procedure Lance36;
procedure Lance37;
procedure Lance38;
procedure Lance39;
procedure Lance40;
procedure Lance41;
procedure Lance42;
procedure Lance43;
procedure Lance44;
procedure Lance45;
procedure Lance46;
procedure Lance47;
procedure Lance48;
procedure Lance49;
procedure Lance50;
procedure Lance51;
procedure Lance52;
procedure LanceCombat;
procedure LanceEnd;
procedure LanceLoot;

variable initial := 0;
variable go_to_Shady;
variable go_to_Raiders;

procedure start begin
   if not(initial) then begin
      initial := 1;
      set_self_team(TEAM_SHADY_SANDS);
      set_self_ai(AI_GUARD);
   end
end

procedure look_at_p_proc begin
   script_overrides;
   if ((global_var(GVAR_LANCE_STATUS) bwand 1) != 0) then
      display_msg(mstr(101));
   else
      display_msg(mstr(100));
end

procedure critter_p_proc begin
   if ((global_var(GVAR_LANCE_STATUS) bwand 2) != 0) then begin
      attack(dude_obj);
   end
end

procedure destroy_p_proc begin
   inc_good_critter
   set_global_var(GVAR_LANCE_STATUS, global_var(GVAR_LANCE_STATUS) bwor 4);
   set_global_var(GVAR_LANCE_DEAD_ALREADY_SEEN, 1);
end

procedure pickup_p_proc begin
   set_global_var(GVAR_LANCE_STATUS, global_var(GVAR_LANCE_STATUS) bwor 2);
end

procedure talk_p_proc begin
   dude_look_at_self;
   get_reaction
   if (shady_invaded) then begin
      if ((global_var(GVAR_LANCE_STATUS) bwand 1) != 0) then
         call Lance52;
      else
         start_dialog_at_node(Lance49);
   end
   else if ((global_var(GVAR_LANCE_STATUS) bwand 1) != 0) then begin
      if (local_var(1) == 1) then
         call Lance02;
      else
         start_dialog_at_node(Lance03);
   end
   else if (global_var(GVAR_ENEMY_SHADY_SANDS) or (check_general_rep < -30) or (has_rep_berserker) or has_rep_childkiller) then begin
      if (tandi_quest_completed and radscorp_quest_completed) then
         start_dialog_at_node(Lance00);
      else
         call Lance01;
   end
   else if (global_var(GVAR_WORLDMAPLIST_SHADY_SANDS) < 2) then begin
      if (local_var(1) >= 2) then
         start_dialog_at_node(Lance04);
      else
         call Lance05;
   end
   else begin
      if (local_var(1) >= 2) then
         start_dialog_at_node(Lance07);
      else
         start_dialog_at_node(Lance06);
    end

   if (go_to_Shady) then begin
      gfade_out(1);
      advance_time_travel_to_shady;
   end
   else if (go_to_Raiders) then begin
      gfade_out(1);
      advance_time_travel_to_raiders;
   end
end

procedure Lance00 begin
   BottomReact
   set_global_var(GVAR_LANCE_STATUS, global_var(GVAR_LANCE_STATUS) bwor 1);
   gsay_reply(NAME, 102);
   giq_option(4, NAME, 103, Lance00a, BAD_REACTION);
   giq_option(4, NAME, 104, Lance10, NEUTRAL_REACTION);
   giq_option(4, NAME, 105, Lance11, NEUTRAL_REACTION);
   giq_option(4, NAME, 106, Lance12, NEUTRAL_REACTION);
   giq_option(-3, NAME, 107, Lance13, NEUTRAL_REACTION);
end

procedure Lance00a begin
   if ((dude_strength > 7) or dude_item_count(PID_PLASMA_RIFLE) or dude_item_count(PID_LASER_RIFLE) or dude_item_count(PID_ROCKET_LAUNCHER) or dude_item_count(PID_MINIGUN)) then begin
      call Lance08;
   end
   else begin
      call Lance09;
   end
end

procedure Lance01 begin
   BottomReact
   float_msg(self_obj, message_str(NAME, 108), FLOAT_MSG_NORMAL);
   set_global_var(GVAR_LANCE_STATUS, global_var(GVAR_LANCE_STATUS) bwor 2);
end

procedure Lance02 begin
   float_msg(self_obj, message_str(NAME, 109), FLOAT_MSG_NORMAL);
end

procedure Lance03 begin
   gsay_reply(NAME, 110);
   if ((global_var(GVAR_QUEST_VAULT13_4_WATERCHIP) == 1) and (dude_item_count(PID_WATER_CHIP) == 0)) then
      giq_option(4, NAME, 111, Lance14, NEUTRAL_REACTION);
   if (tandi_is_kidnapped and tandi_quest_active) then
      giq_option(4, NAME, 112, Lance15, NEUTRAL_REACTION);
   if tandi_quest_completed then
      giq_option(4, NAME, 113, Lance16, NEUTRAL_REACTION);
   giq_option(4, NAME, 114, Lance17, NEUTRAL_REACTION);
   giq_option(-3, NAME, 115, Lance18, NEUTRAL_REACTION);
end

procedure Lance04 begin
   set_global_var(GVAR_LANCE_STATUS, global_var(GVAR_LANCE_STATUS) bwor 1);
   gsay_reply(NAME, 116);
   if ((global_var(GVAR_QUEST_VAULT13_4_WATERCHIP) == 1) and (dude_item_count(PID_WATER_CHIP) == 0)) then
      giq_option(4, NAME, 111, Lance14, NEUTRAL_REACTION);
   giq_option(4, NAME, 118, Lance04a, NEUTRAL_REACTION);
   giq_option(4, NAME, 119, Lance22, NEUTRAL_REACTION);
   giq_option(4, NAME, 120, Lance23, NEUTRAL_REACTION);
   giq_option(-3, NAME, 121, Lance24, NEUTRAL_REACTION);
end

procedure Lance04a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call Lance19;
   end
   else begin
      call Lance20;
   end
end

procedure Lance05 begin
   float_msg(self_obj, message_str(NAME, 122), FLOAT_MSG_NORMAL);
end

procedure Lance06 begin
   gsay_reply(NAME, message_str(NAME, 123) + dude_name + message_str(NAME, 124));
   giq_option(4, NAME, 125, Lance25, NEUTRAL_REACTION);
   giq_option(4, NAME, 113, Lance16, NEUTRAL_REACTION);
   giq_option(4, NAME, 127, Lance26, NEUTRAL_REACTION);
   giq_option(4, NAME, 128, Lance28, NEUTRAL_REACTION);
   giq_option(-3, NAME, 121, Lance18, BAD_REACTION);
end

procedure Lance07 begin
   set_global_var(GVAR_LANCE_STATUS, global_var(GVAR_LANCE_STATUS) bwor 1);
   gsay_reply(NAME, message_str(NAME, 123) + dude_name + message_str(NAME, 130));
   giq_option(4, NAME, 131, Lance29, NEUTRAL_REACTION);
   giq_option(4, NAME, 113, Lance16, NEUTRAL_REACTION);
   if ((global_var(GVAR_QUEST_VAULT13_4_WATERCHIP) == 1) and (dude_item_count(PID_WATER_CHIP) == 0)) then
      giq_option(4, NAME, 111, Lance14, NEUTRAL_REACTION);
   giq_option(4, NAME, 132, Lance00a, BAD_REACTION);
   giq_option(4, NAME, 133, Lance30, NEUTRAL_REACTION);
   giq_option(-3, NAME, 121, Lance18, NEUTRAL_REACTION);
end

procedure Lance08 begin
   gsay_reply(NAME, 134);
   BOption(g_more, LanceLoot, 1);
end

procedure Lance09 begin
   gsay_message(NAME, 135, BAD_REACTION);
   set_global_var(GVAR_LANCE_STATUS, global_var(GVAR_LANCE_STATUS) bwor 2);
end

procedure Lance10 begin
   gsay_reply(NAME, 126);
   giq_option(4, NAME, 136, Lance00a, BAD_REACTION);
   giq_option(4, NAME, 137, Lance31, NEUTRAL_REACTION);
   giq_option(4, NAME, 105, Lance11, NEUTRAL_REACTION);
   giq_option(4, NAME, 106, Lance12, NEUTRAL_REACTION);
   giq_option(4, NAME, 138, LanceCombat, BAD_REACTION);
end

procedure Lance11 begin
   BottomReact
   gsay_message(NAME, 139, BAD_REACTION);
end

procedure Lance12 begin
   gsay_message(NAME, 140, BAD_REACTION);
end

procedure Lance13 begin
   gsay_message(NAME, 141, NEUTRAL_REACTION);
end

procedure Lance14 begin
   gsay_reply(NAME, 142);
   giq_option(4, NAME, 143, Lance14, NEUTRAL_REACTION);
   if (tandi_quest_active and tandi_is_kidnapped) then
      giq_option(4, NAME, 112, Lance15, NEUTRAL_REACTION);
   if tandi_quest_completed then
      giq_option(4, NAME, 113, Lance16, NEUTRAL_REACTION);
   giq_option(4, NAME, 114, Lance17, NEUTRAL_REACTION);
   if radscorp_quest_completed then
      giq_option(4, NAME, 144, Lance32, NEUTRAL_REACTION);
end

procedure Lance15 begin
   gsay_reply(NAME, 145);

   if not(car_in_any_encounter) then begin
      giq_option(4, NAME, 146, Lance33, NEUTRAL_REACTION);
      giq_option(4, NAME, 147, Lance34, NEUTRAL_REACTION);
   end

   giq_option(4, NAME, 148, Lance35, NEUTRAL_REACTION);
   giq_option(4, NAME, 149, Lance36, NEUTRAL_REACTION);
end

procedure Lance16 begin
   gsay_reply(NAME, 150);
   giq_option(4, NAME, 151, Lance37, NEUTRAL_REACTION);
   giq_option(4, NAME, 152, Lance38, NEUTRAL_REACTION);
   giq_option(4, NAME, 144, Lance32, NEUTRAL_REACTION);
   giq_option(4, NAME, 153, Lance39, NEUTRAL_REACTION);
end

procedure Lance17 begin
   gsay_reply(NAME, 154);
   if ((global_var(GVAR_QUEST_VAULT13_4_WATERCHIP) == 1) and (dude_item_count(PID_WATER_CHIP) == 0)) then
      giq_option(4, NAME, 111, Lance14, NEUTRAL_REACTION);
   if (tandi_quest_active and tandi_is_kidnapped) then
      giq_option(4, NAME, 112, Lance15, NEUTRAL_REACTION);
   if tandi_quest_completed then
      giq_option(4, NAME, 113, Lance16, NEUTRAL_REACTION);
   giq_option(4, NAME, 155, Lance17, NEUTRAL_REACTION);
   giq_option(4, NAME, 156, Lance36, NEUTRAL_REACTION);
end

procedure Lance18 begin
   gsay_message(NAME, 157, BAD_REACTION);
end

procedure Lance19 begin
   gsay_reply(NAME, 158);
   giq_option(4, NAME, 159, Lance19a, NEUTRAL_REACTION);
   giq_option(4, NAME, 160, Lance42, NEUTRAL_REACTION);
   if ((global_var(GVAR_QUEST_VAULT13_4_WATERCHIP) == 1) and (dude_item_count(PID_WATER_CHIP) == 0)) then
      giq_option(4, NAME, 161, Lance43, NEUTRAL_REACTION);
   giq_option(4, NAME, 162, Lance48, NEUTRAL_REACTION);
end

procedure Lance19a begin
   if (dude_charisma > 6) then begin
      call Lance40;
   end
   else begin
      call Lance41;
   end
end

procedure Lance20 begin
   BottomReact
   gsay_message(NAME, 163, BAD_REACTION);
end

procedure Lance21 begin
   BottomReact
   gsay_message(NAME, 164, BAD_REACTION);
end

procedure Lance22 begin
   if (global_var(GVAR_WORLDMAPLIST_JUNKTOWN) < 1) then
      set_global_var(GVAR_WORLDMAPLIST_JUNKTOWN, 1);
   mark_on_map(AREA_JUNKTOWN)

   gsay_message(NAME, 165, NEUTRAL_REACTION);
end

procedure Lance23 begin
   BottomReact
   gsay_message(NAME, 166, BAD_REACTION);
end

procedure Lance24 begin
   gsay_message(NAME, 167, BAD_REACTION);
end

procedure Lance25 begin
   gsay_reply(NAME, 168);
   giq_option(4, NAME, 169, Lance44, NEUTRAL_REACTION);
   giq_option(4, NAME, 170, LanceCombat, BAD_REACTION);
   giq_option(4, NAME, 171, Lance28, NEUTRAL_REACTION);
   giq_option(4, NAME, 172, Lance31, NEUTRAL_REACTION);
end

procedure Lance26 begin
   gsay_reply(NAME, 173);
   giq_option(4, NAME, 169, Lance44, NEUTRAL_REACTION);
   giq_option(4, NAME, 170, Lance45, BAD_REACTION);
   giq_option(4, NAME, 171, Lance28, NEUTRAL_REACTION);
   giq_option(4, NAME, 172, Lance31, NEUTRAL_REACTION);
end

procedure Lance27 begin
   BottomReact
   gsay_reply(NAME, 174);
   BOption(g_more, LanceLoot, 1);
end

procedure Lance28 begin
   gsay_message(NAME, 175, NEUTRAL_REACTION);
end

procedure Lance29 begin
   gsay_reply(NAME, 176);
   giq_option(4, NAME, 177, Lance46, NEUTRAL_REACTION);
   giq_option(4, NAME, 178, Lance47, NEUTRAL_REACTION);
end

procedure Lance30 begin
   gsay_reply(NAME, 179);
   NOption(g_more, Lance29, 1);
end

procedure Lance31 begin
   gsay_reply(NAME, 180);
   BOption(g_more, Lance31a, 1);
end

procedure Lance31a begin
   gsay_message(NAME, 181, NEUTRAL_REACTION);
end

procedure Lance32 begin
   gsay_reply(NAME, 182);
   if ((global_var(GVAR_QUEST_VAULT13_4_WATERCHIP) == 1) and (dude_item_count(PID_WATER_CHIP) == 0)) then
      giq_option(4, NAME, 161, Lance43, NEUTRAL_REACTION);
   if (tandi_quest_active and tandi_is_kidnapped) then
      giq_option(4, NAME, 112, Lance15, NEUTRAL_REACTION);
   if tandi_quest_completed then
      giq_option(4, NAME, 113, Lance16, NEUTRAL_REACTION);
   giq_option(4, NAME, 114, Lance17, NEUTRAL_REACTION);
   giq_option(4, NAME, 183, Lance36, NEUTRAL_REACTION);
end

procedure Lance33 begin
   gsay_message(NAME, 184, NEUTRAL_REACTION);
   go_to_Shady := 1;
end

procedure Lance34 begin
   gsay_message(NAME, 185, NEUTRAL_REACTION);
   go_to_Raiders := 1;
end

procedure Lance35 begin
   gsay_message(NAME, 186, NEUTRAL_REACTION);
end

procedure Lance36 begin
   gsay_message(NAME, 187, NEUTRAL_REACTION);
end

procedure Lance37 begin
   gsay_message(NAME, 188, NEUTRAL_REACTION);
   call LanceLoot;
end

procedure Lance38 begin
   gsay_message(NAME, 189, NEUTRAL_REACTION);
end

procedure Lance39 begin
   gsay_message(NAME, 190, GOOD_REACTION);
end

procedure Lance40 begin
   gsay_message(NAME, 191, NEUTRAL_REACTION);
   go_to_Shady := 1;
end

procedure Lance41 begin
   gsay_message(NAME, 192, NEUTRAL_REACTION);
end

procedure Lance42 begin
   gsay_message(NAME, 193, NEUTRAL_REACTION);
end

procedure Lance43 begin
   gsay_reply(NAME, 194);
   NOption(g_more, Lance36, 1);
end

procedure Lance44 begin
   gsay_message(NAME, 195, NEUTRAL_REACTION);
end

procedure Lance45 begin
   BottomReact
   gsay_message(NAME, 196, BAD_REACTION);
end

procedure Lance46 begin
   gsay_message(NAME, 197, NEUTRAL_REACTION);
   go_to_Shady := 1;
end

procedure Lance47 begin
   gsay_message(NAME, 198, NEUTRAL_REACTION);
end

procedure Lance48 begin
   gsay_message(NAME, 199, NEUTRAL_REACTION);
end

procedure Lance49 begin
   set_global_var(GVAR_LANCE_STATUS, global_var(GVAR_LANCE_STATUS) bwor 1);

   gsay_reply(NAME, 200);
   giq_option(4, NAME, 201, Lance50, NEUTRAL_REACTION);
   giq_option(4, NAME, 202, Lance51, NEUTRAL_REACTION);
   giq_option(4, NAME, 203, Lance50, NEUTRAL_REACTION);
   giq_option(4, NAME, 204, Lance51, NEUTRAL_REACTION);
   giq_option(-3, NAME, 205, Lance51, NEUTRAL_REACTION);
end

procedure Lance50 begin
   gsay_message(NAME, 206, NEUTRAL_REACTION);
end

procedure Lance51 begin
   gsay_message(NAME, 207, NEUTRAL_REACTION);
end

procedure Lance52 begin
   float_msg(self_obj, message_str(NAME, 208), FLOAT_MSG_NORMAL);
end

procedure LanceCombat begin
   set_global_var(GVAR_LANCE_STATUS, global_var(GVAR_LANCE_STATUS) bwor 2);
end

procedure LanceEnd begin
end

procedure LanceLoot begin
   inven_unwield(self_obj);
   move_obj_inven_to_obj(self_obj, dude_obj);
end
