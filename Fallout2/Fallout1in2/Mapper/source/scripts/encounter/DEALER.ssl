/*

   Special encounter - car dealer

*/

/* Include Files */
#include "define.h"

#define NAME                    SCRIPT_DEALER

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure destroy_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;

procedure Dealer00;
procedure Dealer01;
procedure Dealer02;
procedure Dealer03;
procedure Dealer04;
procedure Dealer05;
procedure Dealer06;
procedure Dealer07;
procedure Dealer08;
procedure DealerEnd;

variable initial := 0;
variable said_hi;

procedure start begin
   if (initial == 0) then begin
      variable LVar0;
      LVar0 := create_object(PID_BOTTLE_CAPS, 0, 0);
      add_mult_objs_to_inven(self_obj, LVar0, random(50, 100));
      set_self_team(TEAM_24);
      set_global_var(GVAR_WATER_THIEF_2, 0);
      initial := 1;
   end
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure talk_p_proc begin
   dude_look_at_self;
   if (global_var(GVAR_WATER_THIEF_2) == 1) then begin
      float_msg(self_obj, message_str(NAME, random(127, 130)), FLOAT_MSG_NORMAL);
   end
   else begin
      start_gdialog(657, self_obj, 4, -1, -1);
      gsay_start;
      call Dealer00;
      gsay_end;
      end_dialogue;
   end
end

procedure critter_p_proc begin
   if (not(said_hi) and (tile_distance_objs(self_obj, dude_obj) <= 6)) then begin
      float_msg(self_obj, message_str(NAME, 131), FLOAT_MSG_NORMAL);
      said_hi := 1;
   end
end

procedure Dealer00 begin
   set_global_var(GVAR_WATER_THIEF_2, 1);
   gsay_reply(NAME, 100);
   giq_option(4, NAME, 101, Dealer02, NEUTRAL_REACTION);
   giq_option(4, NAME, 102, DealerEnd, NEUTRAL_REACTION);
   giq_option(-3, NAME, 103, Dealer01, NEUTRAL_REACTION);
end

procedure Dealer01 begin
   gsay_message(NAME, 104, NEUTRAL_REACTION);
end

procedure Dealer02 begin
   if (dude_is_male) then begin
      gsay_reply(NAME, 105);
   end
   else begin
      gsay_reply(NAME, 106);
   end
   giq_option(4, NAME, 107, Dealer03, NEUTRAL_REACTION);
   giq_option(4, NAME, 108, DealerEnd, NEUTRAL_REACTION);
end

procedure Dealer03 begin
   gsay_reply(NAME, 109);
   giq_option(4, NAME, 110, Dealer04, NEUTRAL_REACTION);
   giq_option(4, NAME, 111, Dealer08, BAD_REACTION);
   giq_option(4, NAME, 112, DealerEnd, NEUTRAL_REACTION);
end

procedure Dealer04 begin
   if (dude_is_male) then begin
      gsay_reply(NAME, 113);
   end
   else begin
      gsay_reply(NAME, 114);
   end
   giq_option(4, NAME, 115, Dealer05, NEUTRAL_REACTION);
   giq_option(4, NAME, 116, Dealer08, BAD_REACTION);
   giq_option(4, NAME, 112, DealerEnd, NEUTRAL_REACTION);
end

procedure Dealer05 begin
   gsay_reply(NAME, 117);
   giq_option(4, NAME, 118, Dealer06, NEUTRAL_REACTION);
   giq_option(4, NAME, 119, Dealer08, BAD_REACTION);
   giq_option(4, NAME, 120, DealerEnd, NEUTRAL_REACTION);
end

procedure Dealer06 begin
   gsay_reply(NAME, 121);
   giq_option(4, NAME, 122, Dealer07, GOOD_REACTION);
   giq_option(4, NAME, 123, Dealer08, BAD_REACTION);
   giq_option(4, NAME, 124, DealerEnd, NEUTRAL_REACTION);
end

procedure Dealer07 begin
   gsay_message(NAME, 125, GOOD_REACTION);
end

procedure Dealer08 begin
   gsay_message(NAME, 126, BAD_REACTION);
end

procedure DealerEnd begin
end
