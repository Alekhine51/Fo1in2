/*

   Junktown - Neal's Urn

*/
#include "..\headers\define.h"
#include "..\headers\maps\junkcsno.h"

#define NAME                    SCRIPT_TROPHY

#include "..\headers\command.h"
#include "..\headers\sfall\main.h"

procedure start;
procedure description_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;

procedure steal_urn;

import variable Neal_urn_ptr;

variable item;

procedure start begin
   Neal_urn_ptr := self_obj;
end

procedure map_enter_p_proc begin
end

procedure description_p_proc begin
   script_overrides;

   if (global_var(GVAR_URN_STOLEN) == 0) then
      display_msg(message_str(NAME, 100));
   else
      display_msg(message_str(NAME, 200));
end

procedure use_p_proc begin
   script_overrides;
   if (global_var(GVAR_URN_STOLEN) == 0) then begin
      if ((game_time_hour >= 410) and (game_time_hour <= 1200)) then begin
         script_overrides;
         set_global_var(GVAR_URN_STOLEN, 1);

         item := create_object(PID_URN, 0, 0);
         add_obj_to_inven(source_obj, item);

         display_msg(mstr(101));
         self_stand;
      end
      else begin
         display_msg(mstr(103));
      end
   end
end

procedure use_obj_on_p_proc begin
   if (obj_pid(obj_being_used_with) == PID_URN) then begin
      script_overrides;

      set_global_var(GVAR_URN_STOLEN, 0);
      set_map_var(MVAR_caught_stealing_urn, 0);

      self_set_frame(0);

      rm_obj_from_inven(source_obj, obj_being_used_with);
      destroy_object(obj_being_used_with);
   end
end

procedure use_skill_on_p_proc begin
   // Science and Repair skill is a workaround, because in Fo2 the stealing skill can not be used on scenery.
   if (action_being_used == SKILL_STEAL) /*or (action_being_used == SKILL_SCIENCE) or (action_being_used == SKILL_REPAIR) or (action_being_used == SKILL_LOCKPICK)*/ then begin
      call steal_urn;
   end
end

procedure timed_event_p_proc begin
   // called via gl_fo1mechanics.ssl
   if (fixed_param == 1) then begin
      call steal_urn;
   end
end

procedure steal_urn begin
   if (global_var(GVAR_URN_STOLEN) == 0) then begin
      script_overrides;
      set_global_var(GVAR_URN_STOLEN, 1);

      item := create_object(PID_URN, 0, 0);
      add_obj_to_inven(source_obj, item);

      if (is_success(roll_vs_skill(dude_obj, SKILL_STEAL, 0))) then begin
         display_msg(mstr(101));
      end
      else begin
         display_msg(mstr(102));
         set_map_var(MVAR_caught_stealing_urn, 1);
      end

      reg_anim_clear(self_obj);
      self_stand;
   end
end

