/*

   Scrapheap - Fo1 demo location

*/

#include "define.h"
#include "command.h"
#include "updatmap.h"

procedure start;

export variable Is_Fool;
export variable Is_Crypt;
export variable Broken_Gen;
export variable Hiding_Bush;
export variable Use_Fridge;
export variable Use_Generator;
export variable Dog_Is_Angry := 1;
export variable Phil_Approaches;
export variable Growling;
export variable Smartass;
export variable Smartass2;
export variable Know_Fools;
export variable Know_Crypts;
export variable Know_Power;
export variable Rock_Invite;
export variable Skippy_Talk;
export variable Crypt_Pointer;
export variable Fool_Pointer;
export variable Phrax_Pointer;
export variable Rock_Pointer;
export variable Fool_Taunt;
export variable Crypt_Taunt;
export variable Scouted_Crypts;
export variable Scouted_Fools;
export variable Mad_Cow;
export variable Fool_counter := 4;
export variable Crypt_counter := 8;

variable new_obj;
variable Time;

procedure Invasion;

procedure start begin
end

procedure map_enter_p_proc begin
   Lighting;

   /*
   new_obj := create_object(PID_10MM_SMG, 0, 0);
   add_obj_to_inven(dude_obj, new_obj);
   new_obj := create_object(PID_LEATHER_ARMOR, 0, 0);
   add_obj_to_inven(dude_obj, new_obj);
   new_obj := create_object(PID_10MM_AP, 0, 0);
   add_obj_to_inven(dude_obj, new_obj);
   new_obj := create_object(PID_10MM_AP, 0, 0);
   add_obj_to_inven(dude_obj, new_obj);
   new_obj := create_object(PID_STIMPAK, 0, 0);
   add_obj_to_inven(dude_obj, new_obj);
   new_obj := create_object(PID_STIMPAK, 0, 0);
   add_obj_to_inven(dude_obj, new_obj);
   new_obj := create_object(PID_FLARE, 0, 0);
   add_obj_to_inven(dude_obj, new_obj);
   */

   override_map_start(106, 136, 0, 5);
end

procedure map_update_p_proc begin
   Lighting;
   if (Broken_Gen) then begin
      add_timer_event(dude_obj, game_ticks(30), 1);
   end
   else if ((Fool_counter <= 1) and (Crypt_counter <= 1)) then begin
      add_timer_event(dude_obj, game_ticks(30), 2);
   end
end

procedure Invasion begin
end
