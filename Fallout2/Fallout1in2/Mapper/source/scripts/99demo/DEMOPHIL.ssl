/*

   Scrapheap - Phil, near the dog

*/

/* Include Files */
#include "define.h"
#include "scrapheap.h"

#define NAME                    SCRIPT_DEMOPHIL
#define TOWN_REP_VAR            (GVAR_TOWN_REP_SCRAPHEAP)

#include "command.h"
#include "modreact.h"

procedure start;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure run_away;
procedure go_forward;

procedure Phil00;
procedure Phil01;
procedure Phil02;
procedure Phil03;
procedure Phil04;
procedure Phil05;
procedure Phil06;
procedure Phil07;
procedure Phil08;
procedure Phil09;
procedure PhilEnd;

variable known;
variable tmp_hostile;

variable armed;
variable initial :=  0;
variable GVar0;
variable GVar1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5;
variable GVar6;
variable GVar7;
variable GVar8;
variable GVar9;
variable GVar10;
variable GVar11;

import variable dog_is_angry;
import variable Phil_approaches;
import variable growling;
import variable smartass;
import variable smartass2;

procedure start begin
	if not(initial) then begin
      set_self_team(TEAM_RADSCORPIONS );
		add_timer_event(self_obj, game_ticks(10), 1);
		initial :=  1;
	end
end

procedure look_at_p_proc begin
	script_overrides;
	if (known) then begin
		display_msg(message_str(NAME, 100));
	end
	else begin
		display_msg(message_str(NAME, 101));
	end
end

procedure description_p_proc begin
	script_overrides;
	if (known) then begin
		display_msg(message_str(NAME, 100));
	end
	else begin
		display_msg(message_str(NAME, 101));
	end
end

procedure critter_p_proc begin
	if (growling) then begin
		call run_away;
	end
	if (smartass) then begin
		add_timer_event(self_obj, game_ticks(2), 2);
		smartass := 0;
	end
	if (not(dog_is_angry)) then begin
		self_walk_to_tile( 15686 );
	end
end

procedure pickup_p_proc begin
   attack(dude_obj);
end

procedure timed_event_p_proc begin
	if (fixed_param == 2) then begin
		float_msg(self_obj, message_str(NAME, 102), 0);
	end
	else if (dog_is_angry) then begin
      call go_forward;
	end
end

procedure talk_p_proc begin
	dude_look_at_self;
	if (global_var( GVAR_DOGMEAT_HIRELING_STATUS )) then begin
		call Phil01;
	end
	else begin
		if (not(dog_is_angry)) then begin
			call Phil09;
		end
		else begin
			if (dude_is_armed) then begin
				call Phil00;
			end
			else begin
				if (not(known)) then begin
					start_gdialog(376, self_obj, 4, -1, -1);
					gsay_start;
					call Phil02;
					gsay_end;
					end_dialogue;
				end
				else begin
					call Phil08;
				end
			end
		end
	end
end

procedure run_away begin
	self_run_to_tile( 16892 );
	growling := 0;
	add_timer_event(self_obj, game_ticks(random(10, 30)), 1);
end

procedure go_forward begin
	Phil_approaches := 1;
	self_walk_to_tile( 16886 );
end

procedure Phil00 begin
	float_msg(self_obj, message_str(NAME, 103), 0);
end

procedure Phil01 begin
	float_msg(self_obj, message_str(NAME, 104), 0);
end

procedure Phil02 begin
	variable LVar0 := 0;
	known := 1;
	if (dude_is_male) then begin
		LVar0 := message_str(NAME, 105);
	end
	else begin
		LVar0 := message_str(NAME, 106);
	end
	gsay_reply(376, LVar0 + message_str(NAME, 107));
	giq_option( 4, NAME, 108, Phil04, NEUTRAL_REACTION );
	giq_option( 4, NAME, 109, PhilEnd, NEUTRAL_REACTION );
	giq_option( 6, NAME, 110, Phil05, NEUTRAL_REACTION );
	giq_option( -3, NAME, 111, Phil03, NEUTRAL_REACTION );
end

procedure Phil03 begin
	gsay_message(376, 112, 50);
end

procedure Phil04 begin
	gsay_reply(376, 113);
	giq_option( 4, NAME, 114, PhilEnd, NEUTRAL_REACTION );
	giq_option( 4, NAME, 115, Phil05, NEUTRAL_REACTION );
end

procedure Phil05 begin
	gsay_reply(376, 116);
	giq_option( 4, NAME, 117, PhilEnd, NEUTRAL_REACTION );
	giq_option( 5, NAME, 118, Phil06, NEUTRAL_REACTION );
	giq_option( 6, NAME, 119, Phil07, NEUTRAL_REACTION );
end

procedure Phil06 begin
	gsay_message(376, 120, 50);
	gsay_reply(376, 121);
	Goodbyes;
	giq_option( 7, NAME, 122, Phil07, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MODREACT, exit_line, PhilEnd, NEUTRAL_REACTION );
end

procedure Phil07 begin
	gsay_message(376, 123, 50);
	gsay_reply(376, 124);
	giq_option( 4, NAME, 125, PhilEnd, NEUTRAL_REACTION );
end

procedure Phil08 begin
	float_msg(self_obj, message_str(NAME, 126), 0);
end

procedure Phil09 begin
	float_msg(self_obj, message_str(NAME, 127), 0);
end

procedure PhilEnd begin
end

procedure destroy_p_proc begin
end
