/*

   Scrapheap - Skippy, fools gang member

*/

/* Include Files */
#include "define.h"
#include "scrapheap.h"

#define NAME                    SCRIPT_SKIPPY
#define TOWN_REP_VAR            (GVAR_TOWN_REP_SCRAPHEAP)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure talk_p_proc;
procedure critter_p_proc;

procedure Skippy00;
procedure Skippy01;
procedure Skippy02;
procedure Skippy03;
procedure Skippy04;
procedure Skippy04a;
procedure Skippy05;
procedure Skippy06;
procedure Skippy07;
procedure Skippy08;
procedure Skippy09;
procedure Skippy10;
procedure Skippy11;
procedure Start_War;
procedure SkippyEnd;
procedure SkippyCombat;
procedure get_cutters;

import variable known;
variable initial := 0;
import variable Skippy_cutters;
import variable Only_Once;

import variable Fool_Counter;
import variable Crypt_Counter;

import variable Skippy_talk;

import variable is_crypt;
import variable is_fool;
import variable broken_gen;
import variable Fool_Pointer;
import variable Crypt_Pointer;
import variable Phrax_Pointer;
import variable Rock_Pointer;

import variable I_Am_A_Fool;
import variable I_Am_A_Crypt;

import variable Fool_Taunt;
import variable Crypt_Taunt;

variable GVar0;
variable GVar1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5 := 1;
variable GVar6;
variable GVar7 := 50;
variable GVar8 := 2;
variable GVar9;
variable GVar10;
variable GVar11;
variable GVar12;

procedure start begin
	if (is_fool) then begin
      set_self_team(TEAM_PLAYER);
	end
	else begin
      set_self_team(TEAM_SHADY_SANDS);
	end
	if (not(GVar2)) then begin
		GVar3 := create_object(PID_MULTI_TOOL, 0, 0);
		add_obj_to_inven(self_obj, GVar3);
		GVar2 := 1;
	end
end

procedure look_at_p_proc begin
	script_overrides;
	if (GVar0) then begin
		display_msg(mstr(100));
	end
	else begin
		display_msg(mstr(101));
	end
   if (self_item_count(obj_pid(GVar3))) then begin
		display_msg(mstr(102));
	end
end

procedure description_p_proc begin
	script_overrides;
	if (GVar0) then begin
		display_msg(mstr(100));
	end
	else begin
		display_msg(mstr(101));
	end
   if (self_item_count(obj_pid(GVar3))) then begin
		display_msg(mstr(102));
	end
end

procedure pickup_p_proc begin
   call Skippy10;
end

procedure timed_event_p_proc begin
   call Start_War;
end

procedure destroy_p_proc begin
   Fool_Counter := Fool_Counter - 1;
end

procedure talk_p_proc begin
	dude_look_at_self;
	start_gdialog(413, self_obj, 4, -1, -1);
	gsay_start;
	if (is_crypt) then begin
		call Skippy07;
	end
	else begin
		if (is_fool) then begin
			call Skippy08;
		end
		else begin
		   if (self_item_count(obj_pid(GVar3))) then begin
				call Skippy00;
			end
			else begin
				call Skippy09;
			end
		end
	end
	gsay_end;
	end_dialogue;
end

procedure Skippy00 begin
	sayReply(0, mstr(105));
	if (dude_iq >= 4) then begin
		sayOption(mstr(106), Skippy01);
	end
	if (dude_iq >= 4) then begin
		sayOption(mstr(107), Skippy06);
	end
	if (dude_iq >= 4) then begin
		sayOption(mstr(108), Skippy04);
	end
end

procedure Skippy01 begin
	sayReply(0, mstr(109));
	if (dude_iq >= 4) then begin
		sayOption(mstr(110), Skippy02);
	end
	if (dude_iq >= 4) then begin
		sayOption(mstr(111), Skippy03);
	end
end

procedure Skippy02 begin
	sayReply(0, mstr(112));
	if (dude_iq >= 0) then begin
		sayOption(mstr(104), SkippyCombat);
	end
	if (dude_iq >= 0) then begin
		sayOption("", SkippyCombat);
	end
end

procedure Skippy03 begin
	sayReply(0, mstr(113));
	if (dude_iq >= 4) then begin
		sayOption(mstr(114), Skippy04);
	end
	if (dude_iq >= 0) then begin
		sayOption("", Skippy04);
	end
end

procedure Skippy04 begin
	sayReply(0, mstr(115));
	if (dude_iq >= 4) then begin
		sayOption(mstr(116), Skippy04a);
	end
	if (dude_iq >= 0) then begin
		sayOption("", Skippy04a);
	end
end

procedure Skippy04a begin
	if (is_success(do_check(dude_obj, STAT_ch, 0))) then begin
		call Skippy05;
	end
	else begin
		call Skippy06;
	end
end

procedure Skippy05 begin
	sayReply(0, mstr(117));
	if (dude_iq >= 0) then begin
		sayOption(mstr(104), get_cutters);
	end
	if (dude_iq >= 0) then begin
		sayOption("", get_cutters);
	end
end

procedure Skippy06 begin
	sayReply(0, mstr(118));
	if (dude_iq >= 0) then begin
		sayOption(mstr(104), SkippyCombat);
	end
	if (dude_iq >= 0) then begin
		sayOption("", SkippyCombat);
	end
end

procedure Skippy07 begin
	sayReply(0, mstr(119));
	if (dude_iq >= 0) then begin
		sayOption(mstr(104), SkippyEnd);
	end
	if (dude_iq >= 0) then begin
		sayOption("", SkippyEnd);
	end
end

procedure Skippy08 begin
	sayReply(0, mstr(120));
	if (dude_iq >= 0) then begin
		sayOption(mstr(104), SkippyEnd);
	end
	if (dude_iq >= 0) then begin
		sayOption("", SkippyEnd);
	end
end

procedure Skippy09 begin
	sayReply(0, mstr(121));
	if (dude_iq >= 0) then begin
		sayOption(mstr(104), SkippyEnd);
	end
	if (dude_iq >= 0) then begin
		sayOption("", SkippyEnd);
	end
end

procedure Skippy10 begin
	float_msg(0, mstr(122), FLOAT_MSG_NORMAL);
	call SkippyCombat;
end

procedure Skippy11 begin
	float_msg(0, mstr(125), FLOAT_MSG_NORMAL);
	self_walk_to_tile(tile_num_in_direction(dude_tile, 0, 1));
	GVar1 := 1;
end

procedure critter_p_proc begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	LVar0 := (self_obj == Fool_Pointer) or (self_obj == Crypt_Pointer) or (self_obj == Phrax_Pointer) or (self_obj == Rock_Pointer);
	if (GVar5 and Crypt_Taunt) then begin
		Crypt_Taunt := 0;
		if (random(1, 5) == 1) then begin
			float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(100, 113)), FLOAT_MSG_SEQUENTIAL);
		end
	end
	else begin
		if (GVar6 and Fool_Taunt) then begin
			Fool_Taunt := 0;
			if (random(1, 5) == 1) then begin
				float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(200, 218)), FLOAT_MSG_SEQUENTIAL);
			end
		end
		else begin
			if (get_demo_gangwar_active and (self_tile != 20725)) then begin
				self_walk_to_tile(20725);
			end
			else begin
				if (self_tile == 20725) then begin
					add_timer_event(self_obj, game_ticks(2), 1);
				end
				else begin
					if (broken_gen and (self_tile != 27504)) then begin
						if ((self_obj == Phrax_Pointer) and (GVar12 == 0)) then begin
							GVar12 := 1;
							float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, 300), FLOAT_MSG_RED);
						end
						set_demo_gangwar_completed;
						self_walk_to_tile(27504);
					end
					else begin
						if ((self_tile == 27504) and get_demo_gangwar_completed) then begin
							if not(is_loading_game) then set_self_invisible;
							if (GVar5) then begin
								Fool_Counter := Fool_Counter - 1;
							end
							else begin
								Crypt_Counter := Crypt_Counter - 1;
							end
						end
						else begin
							if (GVar1) then begin
								GVar1 := 0;
								attack(dude_obj);
							end
							else begin
								if (not(LVar0)) then begin
									if (random(0, 21) == 1) then begin
										LVar1 := tile_num_in_direction(self_tile, random(0, 5), 2);
										self_walk_to_tile(LVar1);
									end
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure Start_War begin
	if (fixed_param == 1) then begin
		set_demo_gangwar_inactive;
		if (GVar5) then begin
			Fool_Taunt := 1;
			float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(100, 115)), FLOAT_MSG_SEQUENTIAL);
		end
		else begin
			Crypt_Taunt := 1;
			float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(200, 218)), FLOAT_MSG_SEQUENTIAL);
		end
		add_timer_event(self_obj, 4, 2);
	end
	else begin
		if (fixed_param == 2) then begin
			if (GVar5) then begin
				attack(Crypt_Pointer);
			end
			else begin
				attack(Fool_Pointer);
			end
		end
	end
end

procedure SkippyEnd begin
end

procedure SkippyCombat begin
	GVar1 := 1;
end

procedure get_cutters begin
	rm_obj_from_inven(self_obj, GVar3);
	add_obj_to_inven(dude_obj, GVar3);
end
