/*

   Scrapheap - Lenny, at the brahmin stable

*/

/* Include Files */
#include "define.h"
#include "scrapheap.h"

#define NAME                    SCRIPT_LENNY
#define TOWN_REP_VAR            (GVAR_TOWN_REP_SCRAPHEAP)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure talk_p_proc;

procedure Lenny00;
procedure Lenny01;
procedure Lenny02;
procedure Lenny03;
procedure Lenny04;
procedure Lenny04a;
procedure Lenny04b;
procedure Lenny05;
procedure Lenny06;
procedure Lenny06a;
procedure Lenny07;
procedure Lenny08;
procedure Lenny09;
procedure Lenny10;
procedure Lenny11;
procedure Lenny12;
procedure Lenny13;
procedure Lenny14;
procedure Lenny15;
procedure Lenny16;
procedure Lenny17;
procedure Lenny18;
procedure Lenny19;
procedure LennyEnd;
procedure LennyCombat;

variable known;
variable tmp_hostile;
variable Only_Once := 1;

import variable know_fools;
import variable know_crypts;
import variable know_power;

variable tmp_reaction_level := 2;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_4);
   end
end

procedure look_at_p_proc begin
   script_overrides;
   if (known) then begin
      display_msg(mstr(100));
   end
   else begin
      display_msg(mstr(101));
   end
end

procedure description_p_proc begin
   script_overrides;
   if (known) then begin
      display_msg(mstr(100));
   end
   else begin
      display_msg(mstr(101));
   end
end

procedure pickup_p_proc begin
   attack(dude_obj);
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
end

procedure talk_p_proc begin
   dude_look_at_self;
   start_gdialog(406, self_obj, 4, -1, -1);
   gsay_start;
   if (tmp_reaction_level < 2) then begin
      call Lenny14;
   end
   else begin
      if (known) then begin
         call Lenny09;
      end
      else begin
         call Lenny01;
      end
   end
   gsay_end;
   end_dialogue;
end

procedure Lenny00 begin
   known := 1;
   sayReply(0, mstr(104));
   if (dude_iq >= 0) then begin
      sayOption(mstr(103), LennyCombat);
   end
end

procedure Lenny01 begin
   sayReply(0, mstr(105));
   if (dude_iq >= 4) then begin
      sayOption(mstr(106), Lenny15);
   end
   if (dude_iq >= 4) then begin
      sayOption(mstr(107), Lenny03);
   end
   if (dude_iq >= 4) then begin
      sayOption(mstr(108), Lenny02);
   end
end

procedure Lenny02 begin
   sayReply(0, mstr(109));
   if (dude_iq >= 4) then begin
      sayOption(mstr(107), Lenny03);
   end
   sayOption("", Lenny03);
end

procedure Lenny03 begin
   sayReply(0, mstr(110));
   if (dude_iq >= 4) then begin
      sayOption(mstr(111), Lenny08);
   end
   if (dude_iq >= 4) then begin
      sayOption(mstr(112), Lenny04);
   end
end

procedure Lenny04 begin
   sayReply(0, mstr(113));
   if (dude_iq >= 4) then begin
      sayOption(mstr(114), Lenny04a);
   end
   if (dude_iq >= 4) then begin
      sayOption(mstr(115), Lenny04b);
   end
   if (dude_iq >= 4) then begin
      sayOption(mstr(116), Lenny06);
   end
end

procedure Lenny04a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call Lenny05;
   end
   else begin
      call Lenny06;
   end
end

procedure Lenny04b begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 20))) then begin
      call Lenny07;
   end
   else begin
      call Lenny06;
   end
end

procedure Lenny05 begin
   sayReply(0, mstr(117));
   if (dude_iq >= 0) then begin
      sayOption(mstr(118), LennyEnd);
   end
   sayOption("", LennyEnd);
end

procedure Lenny06 begin
   sayReply(0, mstr(119));
   if (dude_iq >= 4) then begin
      sayOption(mstr(120), Lenny06a);
   end
   sayOption("", Lenny06a);
end

procedure Lenny06a begin
   tmp_reaction_level := 1;
   LevelToReact
end

procedure Lenny07 begin
   sayReply(0, mstr(121));
   if (dude_iq >= 4) then begin
      sayOption(mstr(122), LennyEnd);
   end
   sayOption("", LennyEnd);
end

procedure Lenny08 begin
   sayReply(0, mstr(123));
   if (dude_iq >= 4) then begin
      sayOption(mstr(122), LennyEnd);
   end
   sayOption("", LennyEnd);
end

procedure Lenny09 begin
   sayReply(0, mstr(124));
   if (know_fools) then begin
      if (dude_iq >= 4) then begin
         sayOption(mstr(125), Lenny10);
      end
   end
   if (know_crypts) then begin
      if (dude_iq >= 4) then begin
         sayOption(mstr(126), Lenny11);
      end
   end
   if (know_power) then begin
      if (dude_iq >= 4) then begin
         sayOption(mstr(127), Lenny12);
      end
   end
   if (dude_iq >= 4) then begin
      sayOption(mstr(128), LennyEnd);
   end
   sayOption("", LennyEnd);
end

procedure Lenny10 begin
   sayReply(0, mstr(129));
   if (dude_iq >= 4) then begin
      sayOption(mstr(130), LennyEnd);
   end
   if (know_crypts) then begin
      if (dude_iq >= 4) then begin
         sayOption(mstr(126), Lenny11);
      end
   end
   if (know_power) then begin
      if (dude_iq >= 4) then begin
         sayOption(mstr(127), Lenny12);
      end
   end
   sayOption("", LennyEnd);
end

procedure Lenny11 begin
   sayReply(0, mstr(131));
   if (dude_iq >= 4) then begin
      sayOption(mstr(130), LennyEnd);
   end
   if (dude_iq >= 4) then begin
      sayOption(mstr(132), Lenny13);
   end
   if (know_fools) then begin
      if (dude_iq >= 4) then begin
         sayOption(mstr(125), Lenny10);
      end
   end
   if (know_power) then begin
      if (dude_iq >= 4) then begin
         sayOption(mstr(127), Lenny12);
      end
   end
end

procedure Lenny12 begin
   sayReply(0, mstr(133));
   if (dude_iq >= 4) then begin
      sayOption(mstr(130), LennyEnd);
   end
   if (know_fools) then begin
      if (dude_iq >= 4) then begin
         sayOption(mstr(125), Lenny10);
      end
   end
   if (know_crypts) then begin
      if (dude_iq >= 4) then begin
         sayOption(mstr(126), Lenny11);
      end
   end
   sayOption("", LennyEnd);
end

procedure Lenny13 begin
   sayReply(0, mstr(134));
   if (dude_iq >= 4) then begin
      sayOption(mstr(130), LennyEnd);
   end
   if (know_fools) then begin
      if (dude_iq >= 4) then begin
         sayOption(mstr(125), Lenny10);
      end
   end
   if (know_crypts) then begin
      if (dude_iq >= 4) then begin
         sayOption(mstr(126), Lenny11);
      end
   end
   if (know_power) then begin
      if (dude_iq >= 4) then begin
         sayOption(mstr(127), Lenny12);
      end
   end
   sayOption("", LennyEnd);
end

procedure Lenny14 begin
   sayReply(0, mstr(135));
   if (dude_iq >= 0) then begin
      sayOption(mstr(103), LennyEnd);
   end
   if (dude_iq >= 0) then begin
      sayOption("", LennyEnd);
   end
   sayOption("", LennyEnd);
end

procedure Lenny15 begin
   sayReply(0, mstr(136));
   if (dude_iq >= 4) then begin
      sayOption(mstr(137), Lenny16);
   end
   if (dude_iq >= 4) then begin
      sayOption(mstr(138), Lenny17);
   end
end

procedure Lenny16 begin
   sayReply(0, mstr(139));
   if (dude_iq >= 4) then begin
      sayOption(mstr(140), Lenny03);
   end
   if (dude_iq >= 4) then begin
      sayOption(mstr(141), Lenny18);
   end
end

procedure Lenny17 begin
   sayReply(0, mstr(142));
   if (dude_iq >= 4) then begin
      sayOption(mstr(130), LennyEnd);
   end
   if (dude_iq >= 4) then begin
      sayOption(mstr(143), Lenny03);
   end
end

procedure Lenny18 begin
   sayReply(0, mstr(144));
   if (dude_iq >= 4) then begin
      sayOption(mstr(145), Lenny03);
   end
   if (dude_iq >= 4) then begin
      sayOption(mstr(146), Lenny19);
   end
end

procedure Lenny19 begin
   sayReply(0, mstr(147));
   if (dude_iq >= 4) then begin
      sayOption(mstr(103), LennyCombat);
   end
   sayOption("", LennyCombat);
end

procedure LennyEnd begin
end

procedure LennyCombat begin
   tmp_hostile := 1;
end
