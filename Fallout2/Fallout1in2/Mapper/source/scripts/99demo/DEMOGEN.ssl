/*

   Scrapheap - Generator

*/

/* Include Files */
#include "define.h"
#include "scrapheap.h"
#include "maps/junkdemo.h"

#define NAME                    SCRIPT_DEMOGEN

#include "command.h"

/* Standard Script Procedures */
procedure start;

variable Science_Check;
variable Repair_Check;

import variable Broken_Gen;

procedure start begin
end

procedure look_at_p_proc begin
	script_overrides;
	if (Broken_Gen) then begin
		display_msg(mstr(100));
	end
	else begin
		display_msg(mstr(101));
	end
end

procedure description_p_proc begin
	script_overrides;
	if (Broken_Gen) then begin
		display_msg(mstr(100));
	end
	else begin
		display_msg(mstr(101));
	end
end

procedure use_obj_on_p_proc begin
	script_overrides;
	if ((obj_pid(obj_being_used_with) == PID_MULTI_TOOL) and not(Broken_Gen)) then begin
		Broken_Gen := 1;
		give_exp_points(250);
		display_msg(mstr(102));
	end
	else begin
		if (obj_being_used_with == 75) then begin
			display_msg(mstr(103));
		end
		else begin
			display_msg(mstr(104));
		end
	end
end

procedure use_skill_on_p_proc begin
	script_overrides;
	if (action_being_used == SKILL_SCIENCE) then begin
   	if not(Broken_Gen) then begin
   		if (Science_Check) then begin
   			display_msg(mstr(105));
   		end
   		else begin
   			if (is_success(roll_vs_skill(dude_obj, SKILL_SCIENCE, 30))) then begin
   				set_global_var(GVAR_ARADESH_NICER_ROBES_GFX, 1);
   				display_msg(mstr(106));
   			end
   			else begin
   				display_msg(mstr(107));
   			end
   		end
   		Science_Check := 1;
   		set_map_var(MVAR_Use_Generator, map_var(MVAR_Use_Generator) + 1);
   	end
   	else begin
   		if (Science_Check) then begin
   			display_msg(mstr(108));
   		end
   		else begin
   			if (is_success(roll_vs_skill(dude_obj, SKILL_SCIENCE, 0))) then begin
   				display_msg(mstr(109));
   			end
   			else begin
   				display_msg(mstr(110));
   			end
   		end
   		Science_Check := 1;
   		set_map_var(MVAR_Use_Generator, map_var(MVAR_Use_Generator) + 1);
   	end
	end
	else if (action_being_used == SKILL_REPAIR) then begin
   	if not(Broken_Gen) then begin
   		if (Repair_Check) then begin
   			display_msg(mstr(111));
   		end
   		if (is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 0))) then begin
   			display_msg(mstr(112));
   		end
   		else begin
   			display_msg(mstr(113));
   		end
   		Science_Check := 1;
   		set_map_var(MVAR_Use_Generator, map_var(MVAR_Use_Generator) + 1);
   	end
   	else begin
   		if (Repair_Check) then begin
   			display_msg(mstr(114));
   		end
   		else begin
   			if (is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 0))) then begin
   				display_msg(mstr(115));
   			end
   			else begin
   				display_msg(mstr(116));
   			end
   		end
   		add_timer_event(self_obj, game_ticks(5), 1);
   		Science_Check := 1;
   		set_map_var(MVAR_Use_Generator, map_var(MVAR_Use_Generator) + 1);
   	end
	end
   else begin
		display_msg(mstr(117));
		set_map_var(MVAR_Use_Generator, map_var(MVAR_Use_Generator) + 1);
	end
end

procedure timed_event_p_proc begin
   signal_end_game;
end

procedure use_p_proc begin
	if (not(Broken_Gen)) then begin
		display_msg(mstr(118));
	end
	else begin
		display_msg(mstr(119));
	end
	set_map_var(MVAR_Use_Generator, map_var(MVAR_Use_Generator) + 1);
end
