/*

	Cathedral - Zark

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_ZARK
#define TOWN_REP_VAR            (GVAR_TOWN_REP_CATHEDRAL)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure talk_p_proc;

procedure zark00;
procedure zark00a;
procedure zark00b;
procedure zark00c;
procedure zark01;
procedure zark01a;
procedure zark02;
procedure zark02a;
procedure zark03;
procedure zark03a;
procedure zark04;
procedure zark04a;
procedure zark04b;
procedure zark05;
procedure zark05a;
procedure zark06;
procedure zark06a;
procedure zark06b;
procedure zark07;
procedure zark07a;
procedure zark08;
procedure zark08a;
procedure zark09;
procedure zark10;
procedure zark11;
procedure zark12;
procedure zark13;
procedure zark14;
procedure zark14a;
procedure zark15;
procedure zark15a;
procedure zark15c;
procedure zark16;
procedure zark17;
procedure zark18;
procedure zark19;
procedure zark19a;
procedure zark20;
procedure zark21;
procedure zark22;
procedure zark23;
procedure zark24;
procedure zark25;
procedure zark26;
procedure zark27;
procedure zark28;
procedure zark28a;
procedure zark28b;
procedure zark29;
procedure zark30;
procedure zark31;
procedure zark31a;
procedure zark31b;
procedure zark32;
procedure zark33;
procedure zark34;
procedure zark35;
procedure zark36;
procedure zark37;
procedure zark38;
procedure zark38a;
procedure zark38b;
procedure zark38c;
procedure zark39;
procedure zark39a;
procedure zark39b;
procedure zark40;
procedure zark40a;
procedure zark41;
procedure zark41a;
procedure zark41b;
procedure zark41c;
procedure zark42;
procedure zark43;
procedure zark44;
procedure zark44a;
procedure zark44b;
procedure zark45;
procedure zark46;
procedure zark47;
procedure zark47a;
procedure zark48;
procedure zark49;
procedure zarkdone;
procedure zarkend;
procedure zarkcombat;

procedure weapon_check;

variable tmp_hostile;
variable armed;
variable GENDER;
variable LASHERKNOWN;
variable Only_Once := 1;

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_CATHEDRAL );
		set_self_ai( AI_CHILDREN_TRUE );
	end
	if (script_action == talk_proc) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
		call talk_p_proc;
	end
	else begin
		if ((script_action == look_at_proc) or (script_action == description_proc)) then begin// 21 is look_at, 3 is description (Binoculars)   //NEED TO FIX THIS, DUPLICATE DESCRIPTIONS IS BULLSHIT. --Sduibek
			script_overrides;
			display_msg(message_str(NAME, 100));
		end
		else begin
			if (script_action == pickup_proc) then begin//<---caught stealing! (pickup_p_proc)
				tmp_hostile := 1;
			end
			else begin
				if (script_action == destroy_proc) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
					inc_inv_evil_crit
				end
				else begin
					if (script_action == critter_proc) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
						if (tmp_hostile) then begin
							tmp_hostile := 0;
							attack(dude_obj);
						end
					end
				end
			end
		end
	end
end

procedure talk_p_proc begin
	dude_look_at_self;
	call weapon_check;
	start_dialog( self_obj, 4 );
	gsay_start;
	if dude_wearing_coc_robe then begin
		if (local_var(4) == 0) then begin
			if (armed == 1) then begin
				call zark14;
			end
			else begin
				call zark01;
			end
		end
		else begin
			set_local_var(4, 1);
			call zark13;
		end
	end
	else begin
		set_local_var(4, 1);
		if (global_var( GVAR_CATHEDRAL_ENEMY ) == 1) then begin
			call zark00;
		end
		else begin
			if (armed == 1) then begin
				if (has_rep_champion or (check_general_rep > 50)) then begin
					call zark02;
				end
				else begin
					if (has_rep_childkiller or (has_rep_berserker) or (check_general_rep < -50)) then begin
						call zark45;
					end
					else begin
						call zark03;
					end
				end
			end
			else begin
				if (has_rep_champion or (check_general_rep > 50)) then begin
					call zark02;
				end
				else begin
					if (has_rep_childkiller or (has_rep_berserker) or (check_general_rep < -50)) then begin
						call zark45;
					end
					else begin
						call zark04;
					end
				end
			end
		end
	end
	gsay_end;
	end_dialogue;
end

procedure zark00
begin
	if (GENDER == 0) then begin
		gsay_reply( NAME, 101 );
	end
	else begin
		gsay_reply( NAME, 102 );
	end
	giq_option( 4, NAME, 103, zark00a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 104, zark00b, NEUTRAL_REACTION );
	giq_option( 4, NAME, 105, zark11, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 106, zark00c, NEUTRAL_REACTION );
	end
	giq_option( -3, NAME, 107, zark11, NEUTRAL_REACTION );
end

procedure zark00a
begin
	if (dude_strength > 7) then begin
		call zark10;
	end
	else begin
		call zark11;
	end
end

procedure zark00b
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark10;
	end
	else begin
		call zark11;
	end
end

procedure zark00c
begin
	if (dude_strength > 7) then begin
		call zark12;
	end
	else begin
		call zark11;
	end
end

procedure zark01
begin
	gsay_reply( NAME, 108 );
	giq_option( 7, NAME, 109, zark01a, NEUTRAL_REACTION );
	giq_option( 7, NAME, 110, zark39, NEUTRAL_REACTION );
	giq_option( 4, NAME, 111, zark46, NEUTRAL_REACTION );
	giq_option( 4, NAME, 112, zark08, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 113, zark12, NEUTRAL_REACTION );
	end
	giq_option( -3, NAME, 114, zark18, NEUTRAL_REACTION );
end

procedure zark01a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark38;
	end
	else begin
		call zark26;
	end
end

procedure zark02
begin
	gsay_reply( NAME, 115 );
	giq_option( 7, NAME, 116, zark02a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 117, zark25, NEUTRAL_REACTION );
	giq_option( 4, NAME, 118, zark31, NEUTRAL_REACTION );
	giq_option( 4, NAME, 119, zark46, NEUTRAL_REACTION );
	if (global_var( GVAR_ALCOHOL_ADDICT ) == 1) then begin
		giq_option( 4, NAME, 120, zark30, NEUTRAL_REACTION );
	end
	giq_option( -3, NAME, 121, zark35, NEUTRAL_REACTION );
end

procedure zark02a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark19;
	end
	else begin
		call zark26;
	end
end

procedure zark03
begin
	gsay_reply( NAME, 122 );
	giq_option( 7, NAME, 123, zark03a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 124, zark18, NEUTRAL_REACTION );
	giq_option( 4, NAME, 125, zark26, NEUTRAL_REACTION );
	giq_option( 4, NAME, 126, zark17, NEUTRAL_REACTION );
	giq_option( -3, NAME, 127, zark18, NEUTRAL_REACTION );
end

procedure zark03a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark06;
	end
	else begin
		call zark11;
	end
end

procedure zark04
begin
	gsay_reply( NAME, 128 );
	giq_option( 7, NAME, 129, zark04a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 130, zark26, NEUTRAL_REACTION );
	giq_option( 4, NAME, 131, zark04b, NEUTRAL_REACTION );
	giq_option( -3, NAME, 132, zark18, NEUTRAL_REACTION );
end

procedure zark04a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark05;
	end
	else begin
		call zark11;
	end
end

procedure zark04b
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark31;
	end
	else begin
		call zark26;
	end
end

procedure zark05
begin
	set_global_var( GVAR_MORPHEUS_KNOWN, 1 );
	LASHERKNOWN := 1;
	gsay_reply( NAME, 133 );
	giq_option( 7, NAME, 134, zark05a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 135, zark31, NEUTRAL_REACTION );
	giq_option( 4, NAME, 136, zark07, NEUTRAL_REACTION );
end

procedure zark05a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark23;
	end
	else begin
		call zark26;
	end
end

procedure zark06
begin
	gsay_reply( NAME, 137 );
	giq_option( 7, NAME, 138, zark06a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 139, zark06b, NEUTRAL_REACTION );
	giq_option( 4, NAME, 140, zark20, NEUTRAL_REACTION );
	giq_option( 4, NAME, 141, zark46, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 142, zark11, NEUTRAL_REACTION );
	end
end

procedure zark06a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark19;
	end
	else begin
		call zark26;
	end
end

procedure zark06b
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark19;
	end
	else begin
		call zark11;
	end
end

procedure zark07
begin
	LASHERKNOWN := 1;
	gsay_reply( NAME, 143 );
	if (global_var( GVAR_MORPHEUS_KNOWN ) == 1) then begin
		giq_option( 7, NAME, 144, zark07a, NEUTRAL_REACTION );
	end
	giq_option( 4, NAME, 145, zark33, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 146, zark36, NEUTRAL_REACTION );
	end
end

procedure zark07a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark26;
	end
	else begin
		call zark26;
	end
end

procedure zark08
begin
	set_global_var( GVAR_MORPHEUS_KNOWN, 1 );
	gsay_reply( NAME, 147 );
	giq_option( 7, NAME, 148, zark08a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 149, zark49, NEUTRAL_REACTION );
	giq_option( 4, NAME, 150, zark31, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 151, zark18, NEUTRAL_REACTION );
	end
end

procedure zark08a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark09;
	end
	else begin
		call zark18;
	end
end

procedure zark09
begin
	gsay_reply( NAME, 152 );
	giq_option( 7, NAME, 153, zark31, NEUTRAL_REACTION );
	giq_option( 4, NAME, 154, zark47, NEUTRAL_REACTION );
	giq_option( 4, NAME, 155, zark29, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 156, zark12, NEUTRAL_REACTION );
	end
end

procedure zark10
begin
	gsay_message( NAME, 157, NEUTRAL_REACTION );
end

procedure zark11
begin
	gsay_message( NAME, 158, NEUTRAL_REACTION );
	call zarkcombat;
end

procedure zark12
begin
	if (GENDER == 0) then begin
		gsay_reply( NAME, 159 );
	end
	else begin
		gsay_reply( NAME, 160 );
	end
	giq_option( 4, NAME, 161, zark21, NEUTRAL_REACTION );
	giq_option( 4, NAME, 162, zark11, NEUTRAL_REACTION );
end

procedure zark13
begin
	gsay_message( NAME, 163, NEUTRAL_REACTION );
end

procedure zark14
begin
	gsay_reply( NAME, 164 );
	giq_option( 7, NAME, 165, zark14a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 166, zark18, NEUTRAL_REACTION );
	giq_option( 4, NAME, 167, zark16, NEUTRAL_REACTION );
	giq_option( 4, NAME, 168, zark17, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 169, zark16, NEUTRAL_REACTION );
	end
	giq_option( -3, NAME, 170, zark18, NEUTRAL_REACTION );
end

procedure zark14a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark15;
	end
	else begin
		call zark16;
	end
end

procedure zark15
begin
	gsay_reply( NAME, 171 );
	giq_option( 7, NAME, 172, zark15a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 173, zark15a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 174, zark20, NEUTRAL_REACTION );
	giq_option( 4, NAME, 175, zark46, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 176, zark15c, NEUTRAL_REACTION );
	end
end

procedure zark15a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark19;
	end
	else begin
		call zark16;
	end
end

procedure zark15c
begin
	if (dude_strength < 7) then begin
		call zark21;
	end
	else begin
		call zark22;
	end
end

procedure zark16
begin
	gsay_message( NAME, 177, NEUTRAL_REACTION );
end

procedure zark17
begin
	gsay_message( NAME, 178, BAD_REACTION );
	call zarkcombat;
end

procedure zark18
begin
	gsay_message( NAME, 179, NEUTRAL_REACTION );
end

procedure zark19
begin
	gsay_reply( NAME, 180 );
	giq_option( 4, NAME, 181, zark19a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 182, zark24, NEUTRAL_REACTION );
	giq_option( 4, NAME, 183, zark25, NEUTRAL_REACTION );
	giq_option( 4, NAME, 184, zark24, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 185, zark18, NEUTRAL_REACTION );
	end
end

procedure zark19a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark23;
	end
	else begin
		call zark26;
	end
end

procedure zark20
begin
	set_global_var( GVAR_MORPHEUS_KNOWN, 1 );
	gsay_reply( NAME, 186 );
	giq_option( 7, NAME, 187, zark26, NEUTRAL_REACTION );
	giq_option( 4, NAME, 188, zark27, NEUTRAL_REACTION );
	giq_option( 4, NAME, 189, zark28, NEUTRAL_REACTION );
	giq_option( 4, NAME, 190, zark29, NEUTRAL_REACTION );
	if (global_var( GVAR_ALCOHOL_ADDICT ) == 1) then begin
		giq_option( 4, NAME, 191, zark30, NEUTRAL_REACTION );
	end
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 192, zark21, NEUTRAL_REACTION );
	end
end

procedure zark21
begin
	gsay_reply( NAME, 193 );
end

procedure zark22
begin
	gsay_reply( NAME, 194 );
	giq_option( 4, NAME, 195, zark19, NEUTRAL_REACTION );
	giq_option( 4, NAME, 196, zark20, NEUTRAL_REACTION );
	giq_option( 4, NAME, 197, zark31, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 198, zark21, NEUTRAL_REACTION );
	end
end

procedure zark23
begin
	gsay_message( NAME, 199, NEUTRAL_REACTION );
end

procedure zark24
begin
	gsay_message( NAME, 200, NEUTRAL_REACTION );
end

procedure zark25
begin
	gsay_message( NAME, 201, NEUTRAL_REACTION );
end

procedure zark26
begin
	gsay_message( NAME, 202, NEUTRAL_REACTION );
end

procedure zark27
begin
	gsay_reply( NAME, 203 );
	giq_option( 7, NAME, 204, zark32, NEUTRAL_REACTION );
	giq_option( 4, NAME, 205, zark33, NEUTRAL_REACTION );
	giq_option( 4, NAME, 206, zark34, NEUTRAL_REACTION );
	giq_option( 4, NAME, 207, zark35, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 208, zark21, NEUTRAL_REACTION );
	end
end

procedure zark28
begin
	LASHERKNOWN := 1;
	gsay_reply( NAME, 209 );
	if (global_var( GVAR_MORPHEUS_KNOWN ) == 1) then begin
		giq_option( 7, NAME, 210, zark28a, NEUTRAL_REACTION );
	end
	else begin
		giq_option( 7, NAME, 211, zark28a, NEUTRAL_REACTION );
	end
	giq_option( 4, NAME, 212, zark33, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 213, zark36, NEUTRAL_REACTION );
	end
end

procedure zark28a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark26;
	end
	else begin
		call zark26;
	end
end

procedure zark28b
begin
end

procedure zark29
begin
	gsay_message( NAME, 214, NEUTRAL_REACTION );
end

procedure zark30
begin
	gsay_reply( NAME, 215 );
	giq_option( 4, NAME, 216, zark37, NEUTRAL_REACTION );
	giq_option( 4, NAME, 217, zark37, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 218, zark21, NEUTRAL_REACTION );
	end
end

procedure zark31
begin
	set_global_var( GVAR_MORPHEUS_KNOWN, 1 );
	gsay_reply( NAME, 219 );
	giq_option( 7, NAME, 220, zark31a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 221, zark31b, NEUTRAL_REACTION );
	giq_option( 4, NAME, 222, zark28, NEUTRAL_REACTION );
	giq_option( 4, NAME, 223, zark29, NEUTRAL_REACTION );
	if (global_var( GVAR_ALCOHOL_ADDICT ) == 1) then begin
		giq_option( 4, NAME, 224, zark30, NEUTRAL_REACTION );
	end
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 225, zark21, NEUTRAL_REACTION );
	end
end

procedure zark31a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark23;
	end
	else begin
		call zark26;
	end
end

procedure zark31b
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark27;
	end
	else begin
		call zark26;
	end
end

procedure zark32
begin
	gsay_message( NAME, 226, NEUTRAL_REACTION );
end

procedure zark33
begin
	gsay_message( NAME, 227, NEUTRAL_REACTION );
end

procedure zark34
begin
	set_global_var( GVAR_MORPHEUS_KNOWN, 1 );
	gsay_message( NAME, 228, NEUTRAL_REACTION );
end

procedure zark35
begin
	gsay_message( NAME, 229, NEUTRAL_REACTION );
end

procedure zark36
begin
	gsay_message( NAME, 230, NEUTRAL_REACTION );
end

procedure zark37
begin
	LASHERKNOWN := 1;
	gsay_message( NAME, 231, NEUTRAL_REACTION );
end

procedure zark38
begin
	gsay_reply( NAME, 232 );
	giq_option( 7, NAME, 233, zark38a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 234, zark38b, NEUTRAL_REACTION );
	giq_option( 4, NAME, 235, zark20, NEUTRAL_REACTION );
	giq_option( 4, NAME, 236, zark11, NEUTRAL_REACTION );
	if (global_var( GVAR_ALCOHOL_ADDICT ) == 1) then begin
		giq_option( 4, NAME, 237, zark30, NEUTRAL_REACTION );
	end
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 238, zark38c, NEUTRAL_REACTION );
	end
end

procedure zark38a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark19;
	end
	else begin
		call zark16;
	end
end

procedure zark38b
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark19;
	end
	else begin
		call zark26;
	end
end

procedure zark38c
begin
	if (dude_strength < 7) then begin
		call zark21;
	end
	else begin
		call zark22;
	end
end

procedure zark39
begin
	gsay_reply( NAME, 239 );
	giq_option( 7, NAME, 240, zark39a, NEUTRAL_REACTION );
	giq_option( 7, NAME, 241, zark39b, NEUTRAL_REACTION );
	giq_option( 4, NAME, 242, zark40, NEUTRAL_REACTION );
	giq_option( 4, NAME, 243, zark29, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 244, zark18, NEUTRAL_REACTION );
	end
end

procedure zark39a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark38;
	end
	else begin
		call zark26;
	end
end

procedure zark39b
begin
	if dude_wearing_coc_robe then begin
		call zark16;
	end
	else begin
		call zark25;
	end
end

procedure zark40
begin
	gsay_reply( NAME, 245 );
	giq_option( 7, NAME, 246, zark40a, NEUTRAL_REACTION );
	giq_option( 7, NAME, 247, zark41, NEUTRAL_REACTION );
	giq_option( 4, NAME, 248, zark42, NEUTRAL_REACTION );
	giq_option( 4, NAME, 249, zark43, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 250, zark42, NEUTRAL_REACTION );
	end
end

procedure zark40a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark19;
	end
	else begin
		call zark26;
	end
end

procedure zark41
begin
	gsay_reply( NAME, 251 );
	giq_option( 7, NAME, 252, zark25, NEUTRAL_REACTION );
	if (GENDER != 0) then begin
		giq_option( 7, NAME, 253, zark41a, NEUTRAL_REACTION );
	end
	else begin
		giq_option( 7, NAME, 254, zark41a, NEUTRAL_REACTION );
	end
	giq_option( 4, NAME, 255, zark41b, NEUTRAL_REACTION );
	giq_option( 4, NAME, 256, zark47, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, NAME, 257, zarkcombat, NEUTRAL_REACTION );
	end
end

procedure zark41a
begin
	if dude_wearing_coc_robe then begin
		call zark42;
	end
	else begin
		call zark45;
	end
end

procedure zark41b
begin
	if dude_wearing_coc_robe then begin
		call zark42;
	end
	else begin
		call zark45;
	end
end

procedure zark41c
begin
	call zarkcombat;
end

procedure zark42
begin
	gsay_message( NAME, 258, NEUTRAL_REACTION );
end

procedure zark43
begin
	gsay_message( NAME, 259, NEUTRAL_REACTION );
end

procedure zark44
begin
	gsay_reply( NAME, 260 );
	giq_option( 7, NAME, 261, zark44a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 262, zark44b, NEUTRAL_REACTION );
	giq_option( 4, NAME, 263, zark31, NEUTRAL_REACTION );
	giq_option( 4, NAME, 264, zark46, NEUTRAL_REACTION );
	if (global_var( GVAR_ALCOHOL_ADDICT ) == 1) then begin
		giq_option( 4, NAME, 265, zark30, NEUTRAL_REACTION );
	end
end

procedure zark44a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark19;
	end
	else begin
		call zark16;
	end
end

procedure zark44b
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark19;
	end
	else begin
		call zark26;
	end
end

procedure zark45
begin
	if (GENDER == 0) then begin
		gsay_message( NAME, 266, NEUTRAL_REACTION );
	end
	else begin
		gsay_message( NAME, 267, NEUTRAL_REACTION );
	end
end

procedure zark46
begin
	gsay_message( NAME, 268, NEUTRAL_REACTION );
end

procedure zark47
begin
	gsay_reply( NAME, 269 );
	giq_option( 7, NAME, 270, zark47a, NEUTRAL_REACTION );
	giq_option( 4, NAME, 271, zark48, NEUTRAL_REACTION );
	giq_option( 4, NAME, 272, zarkend, NEUTRAL_REACTION );
	giq_option( 4, NAME, 273, zarkcombat, NEUTRAL_REACTION );
end

procedure zark47a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call zark26;
	end
	else begin
		call zark26;
	end
end

procedure zark48
begin
	gsay_message( NAME, 274, NEUTRAL_REACTION );
	call zarkcombat;
end

procedure zark49
begin
	gsay_message( NAME, 275, NEUTRAL_REACTION );
end

procedure zarkdone
begin
	gsay_option( NAME, 276, zarkend, 50 );
end

procedure zarkend
begin
end

procedure zarkcombat
begin
	set_global_var( GVAR_CATHEDRAL_ENEMY, 1 );
	tmp_hostile := 1;
end

procedure weapon_check
begin

	if (dude_is_armed) then begin
		armed := 1;
	end
	else begin
		armed := 0;
	end
end
