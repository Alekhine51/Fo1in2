/*

   Cathedral - Mad Scientist

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_MADSCI
#define TOWN_REP_VAR            (GVAR_TOWN_REP_CATHEDRAL)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;

procedure dialog_end;
procedure madsci00;
procedure madsci00a;
procedure madsci00b;
procedure madsci01;
procedure madsci01a;
procedure madsci02;
procedure madsci02a;
procedure madsci02b;
procedure madsci03;
procedure madsci03a;
procedure madsci03b;
procedure madsci04;
procedure madsci04a;
procedure madsci05;
procedure madsci06;
procedure madsci07;
procedure madsci08;
procedure madsci09;
procedure madsci09a;
procedure madsci09b;
procedure madsci09c;
procedure madsci10;
procedure madsci10a;
procedure madsci10b;
procedure madsci11;
procedure madsci12;
procedure madsci12a;
procedure madsci12b;
procedure madsci12c;
procedure madsci13;
procedure madsci13a;
procedure madsci13b;
procedure madsci14;
procedure madsci14a;

variable tmp_hostile;
variable Only_Once := 1;
variable home_tile;
variable sleep_tile;

procedure madscinull;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_NECROPOLIS_MUTANT);
      set_self_ai(AI_CHILDREN_TRUE);
      home_tile := self_tile;
      if (home_tile == 22093) then begin
         sleep_tile := 21881;
      end
      else begin
         if (home_tile == 22704) then begin
            sleep_tile := 22281;
         end
         else begin
            sleep_tile := 22083;
         end
      end
   end
end

procedure combat
begin
   tmp_hostile := 1;
end

procedure critter_p_proc
begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if (day) then begin
         if (local_var(6)) then begin
            set_local_var(6, 0);
            self_walk_to_tile(home_tile);
         end
         else begin
            if (self_tile != home_tile) then begin
               self_walk_to_tile(home_tile);
            end
         end
      end
      else begin
         if (local_var(6)) then begin
            if (self_tile != sleep_tile) then begin
               self_walk_to_tile(sleep_tile);
            end
         end
         else begin
            set_local_var(6, 1);
            self_walk_to_tile(sleep_tile);
         end
      end
   end
end

procedure pickup_p_proc
begin
   if (source_obj == dude_obj) then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc
begin
   dude_look_at_self;
   if (self_tile == sleep_tile) then begin
      float_msg(self_obj, mstr(303), FLOAT_MSG_RED);
   end
   else begin
      get_reaction
      start_gdialog(679, self_obj, 4, -1, -1);
      gsay_start;
      if dude_wearing_coc_robe then begin
         if (local_var(5) == 1) then begin
            call madsci01;
         end
         else begin
            call madsci00;
         end
         set_local_var(5, 1);
      end
      else begin
         if (local_var(4) == 1) then begin
            call madsci01;
         end
         else begin
            call madsci12;
         end
         set_local_var(4, 1);
      end
      gsay_end;
      end_dialogue;
   end
end

procedure destroy_p_proc begin
   inc_inv_evil_crit
end

procedure look_at_p_proc
begin
   script_overrides;
   if (self_tile == sleep_tile) then begin
      display_msg(mstr(300));
   end
   else begin
      display_msg(mstr(100));
   end
end

procedure dialog_end
begin
end

procedure madsci00
begin
   if (dude_is_male) then begin
      Reply(101);
   end
   else begin
      Reply(102);
   end
   giq_option(7, NAME, 103, madsci00a, NEUTRAL_REACTION);
   giq_option(4, NAME, 104, madsci04, NEUTRAL_REACTION);
   if (has_rep_berserker) then begin
      giq_option(4, NAME, 105, madsci00b, NEUTRAL_REACTION);
   end
   giq_option(-3, NAME, 106, madsci06, NEUTRAL_REACTION);
end

procedure madsci00a
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call madsci02;
   end
   else begin
      call madsci09;
   end
end

procedure madsci00b
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -10))) then begin
      call madsci03;
   end
   else begin
      call madsci08;
   end
end

procedure madsci01
begin
   Reply(107);
   giq_option(4, NAME, 108, madsci01a, NEUTRAL_REACTION);
   giq_option(4, NAME, 109, madsci02, NEUTRAL_REACTION);
   if (has_rep_berserker) then begin
      giq_option(4, NAME, 110, combat, BAD_REACTION);
   end
   giq_option(-3, NAME, 111, madsci06, NEUTRAL_REACTION);
end

procedure madsci01a
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -10))) then begin
      call madsci03;
   end
   else begin
      call madsci09;
   end
end

procedure madsci02
begin
   Reply(112);
   giq_option(7, NAME, 113, madsci07, NEUTRAL_REACTION);
   giq_option(4, NAME, 114, madsci02a, NEUTRAL_REACTION);
   giq_option(4, NAME, 115, madsci02b, NEUTRAL_REACTION);
   giq_option(4, NAME, 116, madsci14, NEUTRAL_REACTION);
end

procedure madsci02a
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call madsci07;
   end
   else begin
      call madsci09;
   end
end

procedure madsci02b
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call madsci04;
   end
   else begin
      call madsci06;
   end
end

procedure madsci03
begin
   if (dude_is_male) then begin
      Reply(117);
   end
   else begin
      Reply(118);
   end
   giq_option(4, NAME, 103, madsci03a, NEUTRAL_REACTION);
   giq_option(4, NAME, 104, madsci04, NEUTRAL_REACTION);
   if (has_rep_berserker) then begin
      giq_option(4, NAME, 119, madsci03b, NEUTRAL_REACTION);
   end
end

procedure madsci03a
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call madsci02;
   end
   else begin
      call madsci06;
   end
end

procedure madsci03b
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -10))) then begin
      call madsci09;
   end
   else begin
      call madsci08;
   end
end

procedure madsci04
begin
   Reply(120);
   giq_option(4, NAME, 121, madsci04a, NEUTRAL_REACTION);
   giq_option(4, NAME, 122, madsci05, NEUTRAL_REACTION);
   if (has_rep_berserker) then begin
      giq_option(4, NAME, 123, combat, BAD_REACTION);
   end
end

procedure madsci04a
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call madsci09;
   end
   else begin
      call madsci08;
   end
end

procedure madsci05
begin
   Reply(124);
   giq_option(4, NAME, 125, dialog_end, NEUTRAL_REACTION);
   giq_option(4, NAME, 126, madsci09, NEUTRAL_REACTION);
   if (has_rep_berserker) then begin
      giq_option(4, NAME, 127, combat, BAD_REACTION);
   end
end

procedure madsci06
begin
   NMessage(128);
end

procedure madsci07
begin
   Reply(129);
   giq_option(4, NAME, 130, madsci05, NEUTRAL_REACTION);
   giq_option(4, NAME, 131, dialog_end, NEUTRAL_REACTION);
   if (has_rep_berserker) then begin
      giq_option(4, NAME, 132, combat, BAD_REACTION);
   end
end

procedure madsci08
begin
   NMessage(133);
end

procedure madsci09
begin
   Reply(134);
   giq_option(4, NAME, 135, madsci09a, NEUTRAL_REACTION);
   giq_option(4, NAME, 136, madsci09b, BAD_REACTION);
   giq_option(4, NAME, 137, madsci09c, BAD_REACTION);
   if (has_rep_berserker) then begin
      giq_option(4, NAME, 138, combat, BAD_REACTION);
   end
end

procedure madsci09a
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -5))) then begin
      call madsci06;
   end
   else begin
      call madsci08;
   end
end

procedure madsci09b
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
      call madsci10;
   end
   else begin
      call madsci11;
   end
end

procedure madsci09c
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -10))) then begin
      call madsci10;
   end
   else begin
      call madsci11;
   end
end

procedure madsci10
begin
   if (dude_is_male) then begin
      Reply(117);
   end
   else begin
      Reply(118);
   end
   giq_option(4, NAME, 139, madsci10a, NEUTRAL_REACTION);
   giq_option(4, NAME, 140, dialog_end, NEUTRAL_REACTION);
   if (has_rep_berserker) then begin
      giq_option(4, NAME, 119, madsci10b, NEUTRAL_REACTION);
   end
end

procedure madsci10a
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call madsci02;
   end
   else begin
      call madsci06;
   end
end

procedure madsci10b
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
      call madsci06;
   end
   else begin
      call madsci08;
   end
end

procedure madsci11
begin
   BMessage(141);
   call combat;
end

procedure madsci12
begin
   Reply(142);
   giq_option(4, NAME, 143, madsci12a, NEUTRAL_REACTION);
   giq_option(4, NAME, 144, madsci12b, BAD_REACTION);
   giq_option(4, NAME, 145, madsci12c, NEUTRAL_REACTION);
   giq_option(4, NAME, 146, combat, NEUTRAL_REACTION);
end

procedure madsci12a
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
      call madsci03;
   end
   else begin
      call madsci09;
   end
end

procedure madsci12b
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -25))) then begin
      call madsci10;
   end
   else begin
      call madsci11;
   end
end

procedure madsci12c
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -15))) then begin
      call madsci13;
   end
   else begin
      call madsci08;
   end
end

procedure madsci13
begin
   Reply(147);
   giq_option(4, NAME, 148, madsci02, NEUTRAL_REACTION);
   giq_option(4, NAME, 144, madsci13a, BAD_REACTION);
   giq_option(4, NAME, 149, madsci13b, NEUTRAL_REACTION);
end

procedure madsci13a
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -25))) then begin
      call madsci10;
   end
   else begin
      call madsci11;
   end
end

procedure madsci13b
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
      call madsci10;
   end
   else begin
      call madsci08;
   end
end

procedure madsci14
begin
   Reply(150);
   giq_option(4, NAME, 151, madsci14a, NEUTRAL_REACTION);
   giq_option(4, NAME, 122, madsci05, NEUTRAL_REACTION);
   if (has_rep_berserker) then begin
      giq_option(4, NAME, 123, combat, NEUTRAL_REACTION);
   end
end

procedure madsci14a
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call madsci09;
   end
   else begin
      call madsci08;
   end
end



procedure madscinull
begin
end
