#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\GlobalScripts\gl_fo1mechanics.ssl"







#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"



 

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\global.h"



 






 
 
 

 







 










 







 





 




















 
















 






 





 











 









 


 


 










 
































 


























































































































 
 
 
 
 
 




























 
 
 
 
 
 


























































































































 




































 
















































































































































































































































 


















 







 

 






 


 

























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 6 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\itempid.h"








































































































































































 
 

 
 
 

 




















































































































































































































 

















































































































































 

























 





 






 









































#line 7 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\scripts.h"




































































































































































































































































































































































































































































































































































































































































































































































































































































































 









































































































 













 



 











































#line 8 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\teams.h"















 





















 































 






#line 9 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"

 
#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\aipacket.h"


























































































































































#line 11 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\exppoint.h"




















































































































































 








 



 








 



 

















 












 





 










 




 






 







 



















 



 




#line 12 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\scenepid.h"

















variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;

 
 



















 




 


 



 



 





 








 





 





 







 





 






 







 


 







 


 



 







 










 













 







 




 





 






 





 


 



 



 



 


 









 



 






































































 







 



















 



 





 




 



 

























































































































 


















 














 













 
 



















 


















 























 




















 

















 










 


 



#line 13 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\maps.h"

























































































































































































































































































































































 



























































































variable get_wm_distance;




































#line 14 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\animcomd.h"






















 













 




















 
















 


 










 













 


 














#line 15 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\critpid.h"










































































 






































































































































 















































































































































 
 



#line 16 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\artfid.h"








 

































 






































































 

 











 













#line 17 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\party.h"












variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;






 
 








 







 










 








































































 









 

variable PartyHealingItem;



























































































































 
































































































 


 
 





 





  


  



  



















































 





















 























 














 

  
















 











 






 





























































procedure checkPartyMembersNearDoor begin
   if ((party_member_obj((16777292)) != 0)) then begin if (tile_distance_objs(self_obj, party_member_obj((16777292))) <= (5)) then begin return 1; end end
   if ((party_member_obj((16777426)) != 0)) then begin if (tile_distance_objs(self_obj, party_member_obj((16777426))) <= (5)) then begin return 1; end end
   if ((party_member_obj((16777338)) != 0)) then begin if (tile_distance_objs(self_obj, party_member_obj((16777338))) <= (5)) then begin return 1; end end
   if ((party_member_obj((16777518)) != 0)) then begin if (tile_distance_objs(self_obj, party_member_obj((16777518))) <= (5)) then begin return 1; end end
   if ((party_member_obj((16777279)) != 0)) then begin if (tile_distance_objs(self_obj, party_member_obj((16777279))) <= (5)) then begin return 1; end end
   if ((party_member_obj((16777529)) != 0)) then begin if (tile_distance_objs(self_obj, party_member_obj((16777529))) <= (5)) then begin return 1; end end
   return 0;
end


#line 18 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"

 

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\fo1.h"









#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\debug.h"



#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\global.h"
#line 4159 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\global.h"
#line 4 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\debug.h"






#line 10 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\fo1.h"





 


































































































 



 






 































variable tma_data_array;
variable tma_gvar_array;











 



 
 
 








 
 






 
 











































































 


























 
















variable Use_Stealth_Boy;



















 








































procedure flee_dude begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    while(LVar1 < 5) do begin
        if (tile_distance(tile_num(dude_obj), tile_num_in_direction(tile_num(self_obj), LVar1, 3)) > LVar2) then begin
            LVar0 := tile_num_in_direction(tile_num(self_obj), LVar1, 3);
            LVar2 := tile_distance(tile_num(dude_obj), LVar0);
        end
        LVar1 := LVar1 + 1;
    end
    animate_move_obj_to_tile(self_obj, LVar0, 1);
end

variable knock_down_sound;












































                                    






variable DISGUISED;
variable COC_TRESPASSING;

































 








 



variable tmp_merch_box;
variable merch_slot_1;
variable merch_slot_1_flags;
variable merch_slot_2;
variable merch_slot_2_flags;
variable merch_slot_armor;
variable merch_slot_armor_flags;



































#line 21 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\..\headers\sd3.h"



 











#line 22 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"


 

























 
 
 





 






 

 


 

 
 
 

 


 




 
 
 
 
 










 

















 
 

 
 

 
 

 
 
 
 

 
 

























 












    







 





 
 
 
 

 

 




































 
















 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 















































 






 













 




 
 

 
 








 
 
 


 























 
 


 




 









 
 

 
 



















 
 

 










 
 

 




 








 








 
 














































 
































   












 
 



























 










 



 




































 






















































 




 
 


 





 






 
 
 


 
 
















 


 






 




 



 






 



 






 






 
















































































#line 909 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\define.h"
































#line 8 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\GlobalScripts\gl_fo1mechanics.ssl"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\command.h"







 










 
 
#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\reppoint.h"
































 
 



 

 









 














#line 74 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\reppoint.h"




















































































































#line 214 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\reppoint.h"

























#line 263 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\reppoint.h"

















 







 







































 

















 















 







 






 









 






 




 


























 











































 




 


 






 




 







 








 



 






 




 



 



 







 







 





























 

















 


 











 










 































 




 


 


 






























 















 


 








 





 





 


























#line 21 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\command.h"










variable global_temp;






















































































































 
 





 
 
 
variable dest_tile;
variable step_tile;



 

























 
 
 
 



 
 
 




























































 
 
 













 
 
 





























 
 
 


 
 
 









 
 
 





 
 
 

 
 
 





 
 
 













 
 
 





 
 
 





 
 
 







 
 
 







 
 
 






 
 
 








 
 
 





 

 



















































































 





















































 
























                                 










 

 













   








variable in_dialog;
variable forced_node;























variable tmp_rotation;
























































 


 









































 




 




 




 











 



















































variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;



















































































































































































   
procedure give_item(variable critter, variable pidList) begin
   variable pid, qty;
   foreach (pid: qty in pidList) begin
      restock_obj := create_object_sid(pid,0,0,-1); add_mult_objs_to_inven(critter, restock_obj, (qty));
   end
end




 




 





 


























 
















 
 









 



 



 


 


 


 


 


 















#line 9 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\GlobalScripts\gl_fo1mechanics.ssl"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\updatmap.h"







 
 




































 

























































































 



































 



































































































#line 10 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\GlobalScripts\gl_fo1mechanics.ssl"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\voodoo.h"



#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall\sfall.rotators.h"



 

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall\sfall.h"
 






















 













































 




 




 









 






 





















 




 





 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 


 






















































 


































 




 


























































































#line 6 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall\sfall.rotators.h"


#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall\sfall.rotators.voodoo.h"



 

variable r_call_offset_result;





























































































































































































#line 8 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall\sfall.rotators.h"


 







 
 


 


 
 

 








 


 
 
 











 



#line 4 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\voodoo.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\voodoo_lib.h"
 
#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall\lib.math.h"












procedure unsigned_comp(variable a, variable b) begin
   if ((a bwxor b) == 0) then return 0;  
   if (b == 0) then return 1;
   return 1 if (a / b) else -1;
end





procedure max(variable x, variable y) begin
   if (x > y) then return x;
   return y;
end

procedure min(variable x, variable y) begin
   if (x < y) then return x;
   return y;
end

















procedure cap_number(variable num, variable min, variable max) begin
   if (num > max) then num := max;
   else if (num < min) then num := min;
   return num;
end




#line 2 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\voodoo_lib.h"


procedure VOODOO_CalculateRel32(variable from, variable to) begin
  return (to - from - 5);
end

procedure VOODOO_WriteRelAddress(variable at, variable address)
begin
  variable addr, byte1, byte2, byte3, byte4;
  addr := VOODOO_CalculateRel32(at, address);
  byte4 := (addr bwand 0xFF000000) / 0x1000000;
  byte3 := (addr bwand 0x00FF0000) / 0x10000;
  byte2 := (addr bwand 0x0000FF00) / 0x100;
  byte1 := (addr bwand 0x000000FF);
  write_byte(at+1, byte1);
  write_byte(at+2, byte2);
  write_byte(at+3, byte3);
  write_byte(at+4, byte4);
end

procedure VOODOO_MakeCall(variable address, variable func)
begin
  write_byte(address, 0xE8);
  call VOODOO_WriteRelAddress(address, func);
end

procedure VOODOO_MakeJump(variable address, variable func)
begin
  write_byte(address, 0xE9);
  call VOODOO_WriteRelAddress(address, func);
end

procedure VOODOO_WriteNop(variable address, variable length:=1)
begin
  variable i;
   
  length := cap_number(length, 1, 15);
  for(i := 0; i < length-1; i++) begin
   write_byte(address+i, 0x66);
  end
  write_byte(address+length-1, 0x90);
end

 
procedure VOODOO_BlockCall(variable address, variable length:=5)
begin
   call VOODOO_WriteNop(address, cap_number(length, 5, 15));
end

 
procedure VOODOO_call_offset_r0(variable address)
begin
   call VOODOO_MakeJump(0x00410004, address);
   return call_offset_r0(0x00410004);
end

 
procedure VOODOO_SafeWrite8(variable address, variable value)
begin
    
   call_offset_v2(0x480f0d, address, (value bwand 0xFF));
end

procedure VOODOO_SafeWrite16(variable address, variable value)
begin
    
   call_offset_v2(0x480f2f, address, (value bwand 0xFFFF));
end

procedure VOODOO_SafeWrite32(variable address, variable value)
begin
    
   call_offset_v2(0x480f52, address, value);
end
#line 5 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\voodoo.h"









 



 






 



 
 















 
 













































































































 
 

































































 
 


































 



 
 










 


 


 


 
 
 
 
 
 


















 
 
 
 
 
 
 
 
 
 
 





 







#line 11 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\GlobalScripts\gl_fo1mechanics.ssl"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall/main.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall\sfall.h"
 






















 













































 




 




 









 






 





















 




 





 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 


 






















































 


































 




 


























































































#line 2 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall/main.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall\define_lite.h"




#line 911 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall\define_lite.h"
#line 3 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall/main.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall\define_extra.h"







































































































 






 


 










 









 













 


















 



















 



 







 




 


















 


























 




















 

































 
















 






 







 








 







 






 









 







 









 

 





 













































#line 4 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall/main.h"


#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall\lib.arrays.h"

















#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall\sfall.h"
 






















 













































 




 




 









 






 





















 




 





 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 


 






















































 


































 




 


























































































#line 18 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall\lib.arrays.h"





 
procedure map_contains_key(variable arrayMap, variable key);

 
procedure array_push(variable array, variable item);

 
procedure array_pop(variable array);

 
procedure array_keys(variable array);

 
procedure array_values(variable array);

 
 
 
procedure array_slice(variable array, variable index, variable count);

 
 
procedure array_cut(variable array, variable index, variable count);

 
procedure array_diff(variable arr1, variable arr2);

 
procedure copy_array(variable src, variable srcPos, variable dest, variable dstPos, variable size);

 
procedure clone_array(variable array);

 
procedure arrays_equal(variable arr1, variable arr2);

 
procedure array_max(variable arr);

 
procedure array_min(variable arr);

 
procedure array_sum(variable arr);

 
procedure array_random_value(variable arr);








procedure array_fill(variable arr, variable pos, variable count, variable value);




procedure array_append(variable arr1, variable arr2);

procedure get_empty_array_index(variable array);





procedure add_array_set(variable array, variable item);
procedure remove_array_set(variable array, variable item);























procedure add_array_block(variable arr, variable blocksize);




procedure remove_array_block(variable arr, variable blocksize, variable index);




procedure debug_array_str(variable arr);







 
procedure load_create_array(variable name, variable size);
 
procedure get_saved_array_new(variable name, variable size);
 
 
procedure save_collection(variable name, variable arr);
 
procedure load_collection(variable name);
 
 
 




 


 



procedure map_contains_key(variable arrayMap, variable key) begin
   variable i;
   for (i := 0; i < len_array(arrayMap); i++) begin
      if (array_key(arrayMap, i) == key) then return true;
   end
   return false;
end




procedure get_empty_array_index(variable array) begin
   variable zero := false;
   variable i := 0;
   while i < len_array(array) and not(zero) do begin
      if (array[i] == 0) then begin
         zero := true;  
      end else begin
         i++;
      end
   end
   return i;
end

 
procedure array_push(variable array, variable item) begin
   variable n;
   n := len_array(array);
   resize_array(array, n + 1);
   set_array(array, n, item);
   return array;
end

 
procedure array_pop(variable array) begin
   variable n, ret;
   n := len_array(array) - 1;
   if (n >= 0) then begin
      ret := get_array(array, n);
      resize_array(array, n);
      return ret;
   end
   return 0;
end

procedure array_keys(variable array) begin
   variable tmp, i, len;
   len := len_array(array);
   tmp := (temp_array(len, 0));
   i := 0;
   while (i < len) do begin
      set_array(tmp, i, array_key(array, i));
      i++;
   end
   return tmp;
end

procedure array_values(variable array) begin
   variable v, tmp, i, len;
   len := len_array(array);
   tmp := (temp_array(len, 0));
   i := 0;
   while (i < len) do begin
      set_array(tmp, i, get_array(array, array_key(array, i)));
      i++;
   end
   return tmp;
end

procedure array_slice(variable array, variable index, variable count) begin
   variable tmp, i, n;
   n := len_array(array);
   if (n <= 0) then return (temp_array(0, 0));
   if (index < 0) then
      index := n + index;
   if (count < 0) then
      count := n - index + count;
   else if (index + count > n) then
      count := n - index;
   tmp := (temp_array(count, 0));
   for (i := 0; i < count; i++) begin
      tmp[i] := array[index + i];
   end
   return tmp;
end

procedure array_cut(variable array, variable index, variable count) begin
   variable i, n;
   n := len_array(array);
   if (n <= 0) then return;
   if (index < 0) then
      index := n + index;
   if (count < 0) then
      count := n - index + count;
   else if (index + count > n) then
      count := n - index;
   for (i := index; i < (n - count); i++) begin
      array[i] := array[i + count];
   end
   resize_array(array, n - count);
   return array;
end

procedure array_diff(variable arr1, variable arr2) begin
   variable i, v, isMap;
   isMap := (array_key(arr1, -1) == 1);
   foreach (v in arr2) begin
      i := scan_array(arr1, v);
      if (i != -1) then begin
         if (isMap) then
            set_array(arr1, i, 0);
         else
            call array_cut(arr1, i, 1);
      end
   end
   return arr1;
end




procedure copy_array(variable src, variable srcPos, variable dest, variable dstPos, variable size) begin
  variable i := 0;
  if (srcPos + size > len_array(src)) then size := len_array(src) - srcPos;  
  while (i < size) do begin
    dest[dstPos + i] := src[srcPos + i];
    i++;
  end
end

 
procedure clone_array(variable array) begin
   variable new, k, v;
   if ((array_key(array, -1) == 1)) then
      new := (temp_array(-1, 0));
   else
      new := (temp_array(len_array(array), 0));
   foreach k: v in array begin
      new[k] := v;
   end
   return new;
end

procedure arrays_equal(variable arr1, variable arr2) begin
   variable n, i, k1, k2;
   if ((array_key(arr1, -1) == 1) != (array_key(arr2, -1) == 1)) then
      return false;
   n := len_array(arr1);
   if (n != len_array(arr2)) then
      return false;
   i := 0;
   while (i < n) do begin
      k1 := array_key(arr1, i);
      k2 := array_key(arr2, i);
      if (k1 != k2) then
         return false;
      if (get_array(arr1, k1) != get_array(arr2, k2)) then
         return false;
      i++;
   end
   return true;
end

 
procedure array_max(variable arr) begin
   variable v, max;
   max := 0;
   foreach v in arr begin
      if (max == 0 or v > max) then
         max := v;
   end
   return max;
end

 
procedure array_min(variable arr) begin
   variable v, min;
   min := 0;
   foreach v in arr begin
      if (min == 0 or v < min) then
         min := v;
   end
   return min;
end

 
procedure array_sum(variable arr) begin
   variable v, sum;
   sum := 0;
   foreach v in arr begin
      sum += v;
   end
   return sum;
end

procedure array_random_value(variable arr) begin
   return get_array(arr, array_key(arr, random(0, len_array(arr) - 1)));
end


procedure add_array_set(variable array, variable item) begin
   variable i := 0;
   variable len;
   variable exist := false;
   variable zero := false;
   len := len_array(array);

    
   while i < len and not(zero) do begin
      if (array[i] == 0) then begin
         zero := true;  
         i--;
      end else if (array[i] == item) then exist := true;
      i++;
   end
   if not(exist) then begin
       
      if (i == len) then begin
         resize_array(array, len + (10));
      end
      set_array(array, i, item);
   end
end

procedure remove_array_set(variable array, variable item) begin
   variable i := 0;
   variable len;
   variable found_at := -1;
   variable zero := false;

   len := len_array(array);
    
   while (i < len and not(zero)) do begin
      if (array[i] == 0) then begin
         zero := true;  
         i--;
      end else if (array[i] == item) then found_at := i;
      i++;
   end
   if (found_at != -1) then begin
      array[found_at] := array[i - 1];
      array[i - 1] := 0;
   end
end

 
procedure array_map_func(variable arr, variable callback) begin
   variable k, v, i;
   foreach (k: v in arr)
      arr[k] := callback(v);
   return arr;
end








procedure add_array_block(variable arr, variable blocksize) begin
   variable begin
      index := 0;
      zero := false;
      tile;
      elev;
   end
    
   index := 0;
   while index < len_array(arr) and not(zero) do begin
      if (get_array(arr, index) == (-1)) then begin
          
         zero := true;  
      end else begin
         index += blocksize;
      end
   end
   if (index == len_array(arr)) then begin
      resize_array(arr, index + blocksize);
   end
   set_array(arr, index, index);
   return index;
end






procedure remove_array_block(variable arr, variable blocksize, variable index) begin
   variable len;
   len := len_array(arr);
   if (index + blocksize == len) then begin
       
      resize_array(arr, len - blocksize);
   end else begin
       
      set_array(arr, index, (-1));
       
      call array_fill(arr, index + 1, blocksize - 1, 0);
   end
end

procedure array_fill(variable arr, variable pos, variable count, variable value) begin
   variable i := 0;
   if (count == -1 or (pos + count > len_array(arr))) then count := len_array(arr) - pos;  
   while (i < count) do begin
      arr[pos + i] := value;
      i++;
   end
   return arr;
end

procedure array_append(variable arr1, variable arr2) begin
   variable arr1_len;
   if ((array_key(arr1, -1) == 1)) then begin
      variable k, v;
      foreach (k: v in arr2) begin
         arr1[k] := v;
      end
   end else begin
      arr1_len := len_array(arr1);
      resize_array(arr1, arr1_len + len_array(arr2));
      call copy_array(arr2, 0, arr1, arr1_len, len_array(arr2));
   end
   return arr1;
end

procedure load_create_array(variable name, variable size) begin
   variable arr;
   arr := load_array(name);
   if (arr == 0) then begin
      arr := create_array(size, 0);
      save_array(name, arr);
   end
   return arr;
end

procedure get_saved_array_new(variable name, variable size) begin
   variable arr;
   arr := load_array(name);
   if (arr) then
      free_array(arr);
   arr := create_array(size, 0);
   save_array(name, arr);
   return arr;
end



procedure save_collection(variable name, variable arr) begin
   variable k, v, keys, oldKeys;
   keys := array_keys(arr);
   oldKeys := load_array(name);
   if (oldKeys) then begin  
      call array_diff(oldKeys, keys);
      foreach (k in oldKeys)
         free_array(load_array(""+name+"."+k));
   end
   save_array(name, keys);
   foreach (k: v in arr) begin
      save_array(""+name+"."+k, v);
   end
end

procedure load_collection(variable name) begin
   variable k, v, keys, arr;
   keys := load_array(name);
   if (keys) then begin
      arr := (create_array(-1, 0));  
      foreach k in keys begin
         set_array(arr, k, load_array(""+name+"."+k));
      end
      return arr;
   end
   return 0;
end



















































procedure debug_array_str(variable arr) begin
   variable i := 0, k, s, len;
   len := len_array(arr);
   if ((array_key(arr, -1) == 1)) then begin   
      s := "Map("+len+"): {";
      while i < len do begin
         k := array_key(arr, i);
         s += k + ": "+ get_array(arr, k);
         if i < (len - 1) then s += ", ";
         i++;
      end
      if (strlen(s) > 254) then s := substr(s, 0, 251) + "...";
      s += "}";
   end else begin   
      s := "List("+len+"): [";
      while i < len do begin
         s += arr[i];
         if i < (len - 1) then s += ", ";
         i++;
      end
      if (strlen(s) > 254) then s := substr(s, 0, 251) + "...";
      s += "]";
   end
   return s;
end

procedure _PURGE_all_saved_arrays begin
   variable saved, key;
   saved := (load_array("...all_arrays..."));
   foreach (key in saved)
      free_array(load_array(key));
end



#line 6 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall/main.h"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall\lib.strings.h"

















procedure string_pos(variable str, variable subst) begin
   variable lst, n;
   lst := string_split(str, subst);
   if (len_array(lst) < 2) then
      return -1;
   return strlen(lst[0]);
end




procedure string_join(variable array, variable join) begin
   variable str, i, len;
   str := "";
   len := len_array(array);
   if (len > 0) then begin
      str := array[0];
      for (i:=1; i<len; i++) begin
         str += join + array[i];
      end
   end
   return str;
end









procedure sprintf2(variable str, variable arg1, variable arg2) begin
   variable split, len, i, j, arg;
   split := string_split(str, "%");
   len := len_array(split);
   str := "";
   if (len > 0) then begin
      str := split[0];
      j := 0;
      for (i := 1; i < len; i++) begin
         if (split[i] == "") then begin
            if (i < len - 1) then begin
               str += "%" + split[i+1];
               i++;
            end
         end else begin
            if (j == 0) then
               arg := arg1;
            else if (j == 1) then
               arg := arg2;
            else
               arg := 0;

            str += sprintf("%" + split[i], arg);
            j++;
         end
      end
   end
   return str;
end




procedure sprintf_array(variable str, variable args) begin
   variable split, len, i, j;
   split := string_split(str, "%");
   len := len_array(split);
   str := "";
   if (len > 0) then begin
      str := split[0];
      j := 0;
      for (i := 1; i < len; i++) begin
         if (split[i] == "") then begin
            if (i < len - 1) then begin
               str += "%" + split[i+1];
               i++;
            end
         end else begin
            str += sprintf("%" + split[i], args[j]);
            j++;
         end
      end
   end
   return str;
end
















procedure string_get_tokens(variable str, variable delim) begin
   variable lst, line, token, maxlen, len, count;
   count := 1;
   maxlen := 4;
   token := tokenize(str, 0, delim);
    
       
      line := token;
      while (line != str) do begin
         count += 1;
         len := strlen(token);
         if (len > maxlen) then
            maxlen := len;
         token := tokenize(str, line, delim);
         if (token != 0) then
            line += delim + token;
      end
    

   return count;
end

procedure string_repeat(variable str, variable count) begin
   variable out := "", i := 0;
   while (i < count) do begin
      out += str;
      i++;
   end
   return out;
end





procedure string_split_safe(variable str, variable split) begin
   variable lst;
   str += split;
   lst := string_split(str, split);
   resize_array(lst, len_array(lst) - 1);
   return lst;
end





procedure string_split_ints(variable str, variable split) begin
   variable i := 0;
   variable list;
   list := string_split(str, split);
   while (i < len_array(list)) do begin
      list[i] := atoi(list[i]);
      i++;
   end
   return list;
end




































procedure parse_str_list(variable str, variable list) begin
variable token, rest, line, result, n; line := tokenize(str, 0, '%'); result := line; while line != str do begin token := tokenize(str, line, '%'); line += "%" + token; if token == "" then result += "%"; else begin
      n := atoi(token) - 1;
      if (n >= 0 and n < len_array(list)) then result += list[n];
end rest := tokenize(str, line, '%'); if (rest != 0) then begin line += "%" + rest; result += rest; end end return result;
end

procedure parse_str_2(variable str, variable x1, variable x2) begin
variable token, rest, line, result, n; line := tokenize(str, 0, '%'); result := line; while line != str do begin token := tokenize(str, line, '%'); line += "%" + token; if token == "" then result += "%"; else begin
      n := atoi(token);
      if (n == 1) then result += x1;
      else if (n == 2) then result += x2;
end rest := tokenize(str, line, '%'); if (rest != 0) then begin line += "%" + rest; result += rest; end end return result;
end

procedure parse_str_4(variable str, variable x1, variable x2, variable x3, variable x4) begin
variable token, rest, line, result, n; line := tokenize(str, 0, '%'); result := line; while line != str do begin token := tokenize(str, line, '%'); line += "%" + token; if token == "" then result += "%"; else begin
      n := atoi(token);
      if (n == 1) then result += x1;
      else if (n == 2) then result += x2;
      else if (n == 3) then result += x3;
      else if (n == 4) then result += x4;
end rest := tokenize(str, line, '%'); if (rest != 0) then begin line += "%" + rest; result += rest; end end return result;
end






#line 7 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall/main.h"

 

variable ini := "sfall-mods.ini";
variable translationIni;

 
procedure GetIniConfig(variable section, variable key, variable def, variable inifile) begin
   variable val := get_ini_setting(inifile + "|" + section + "|" + key);
   if val == -1 then val := def;
   return val;
end

 
procedure GetIniConfigStr(variable section, variable key, variable def, variable inifile) begin
   variable val := get_ini_string(inifile + "|" + section + "|" + key);
   if val == -1 or val == "" then val := def;
   return val;
end

 
procedure GetConfig(variable section, variable key, variable def) begin
   variable val := get_ini_setting(ini + "|" + section + "|" + key);
   if val == -1 then val := def;
   return val;
end

 
procedure GetConfigStr(variable section, variable key, variable def) begin
   variable val := get_ini_string(ini + "|" + section + "|" + key);
   if val == -1 or val == "" then val := def;
   return val;
end

 
procedure GetConfigList(variable section, variable key) begin
   variable val := get_ini_string(ini + "|" + section + "|" + key);
   if val == -1 or val == "" then return [];

   return string_split(val, ",");
end

 
procedure GetConfigListInt(variable section, variable key) begin
   variable arr, i, item;

   arr := GetConfigList(section, key);
   for (i := 0; i < len_array(arr); i++) begin
      arr[i] := atoi(arr[i]);
   end
   return arr;
end

 
procedure Translate(variable id, variable def) begin
   variable str := get_ini_string(translationIni + "|Sfall|" + id);
   if not str or (strlen(str) == 0) then begin
      str := def;
   end
   return str;
end

procedure InitConfigs begin
   translationIni := GetIniConfigStr("Main", "TranslationsINI", "Translations.ini", "ddraw.ini");
end
#line 12 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\GlobalScripts\gl_fo1mechanics.ssl"

#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall/sfall.rotators.h"
#line 58 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\sfall/sfall.rotators.h"
#line 13 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\GlobalScripts\gl_fo1mechanics.ssl"


#line 1 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\headers\boneyard.h"













 







 



 
 
 






 















 
 










 



 



 



 



 










 












 
 
















 











#line 15 "C:\Users\Markus\Documents\GitHub\Fo1in2\Fallout2\Fallout1in2\Mapper\source\scripts\GlobalScripts\gl_fo1mechanics.ssl"



procedure start;

procedure warning;
procedure general;
procedure mode_change_handler;
procedure scene_master_destroyed;
procedure scene_vats_destroyed;
procedure night_person;
procedure item_description_handler;
procedure afterhitroll_handler;
procedure useanimobj_handler;
procedure useskillon_handler;
procedure useobjon_handler;

procedure steal_urn;




import variable Neal_urn_ptr;

procedure start begin
   if (game_loaded) then begin
      set_global_script_type(0);
      register_hook_proc((31), mode_change_handler);
      register_hook_proc((34), item_description_handler);
      register_hook_proc((1), afterhitroll_handler);
      register_hook_proc((35), useskillon_handler);
      register_hook_proc((8), useobjon_handler);
       

      if not((read_byte(0x410003) == 0xF4 and sfall_func1("metarule_exist", "rotators"))) then
         call warning in 1;
   end

   call general;
end

procedure warning begin
   create_message_window("Warning:\nCustom ddraw.dll detected\nSome features will be disabled!");
end

procedure general begin
   variable dummy;

    
   set_skill_max(200);

    
   set_pc_stat_max((31), 100);

    
   write_byte(0x4995f3, 0x06);

    
   write_int( 0x4C1011, 0x90909090); write_byte(0x4C1015, 0x90); write_int( 0x4C1042, 0x90909090); write_byte(0x4C1046, 0x90);

    
   write_byte(0x444d10, 0x7a);

    
   begin write_int (0x4c3735, 0xfbd83ae9); write_byte (0x4c3739, 0xff); write_short(0x480f74, 0x4d75); write_short(0x480f76, 0xec83); write_byte (0x480f78, 0x04); write_int (0x480f79, 0x002404c6); write_int (0x480f7d, 0x0c244c8b); write_byte (0x480f81, 0x49); write_short(0x480f82, 0xf983); write_byte (0x480f84, 0x03); write_short(0x480f85, 0x3974); write_short(0x480f87, 0xf983); write_byte (0x480f89, 0x07); write_short(0x480f8a, 0x3474); write_short(0x480f8c, 0xf983); write_byte (0x480f8e, 0x0b); write_short(0x480f8f, 0x2f74); write_short(0x480f91, 0xf983); write_byte (0x480f93, 0x0f); write_short(0x480f94, 0x2a74); write_short(0x480f96, 0xed31); write_int (0x480f98, 0x0c244c89); write_short(0x480f9c, 0x026a); write_int (0x480f9e, 0x1024448b); write_short(0x480fa2, 0xf189); write_short(0x480fa4, 0xfb89); write_byte (0x480fa6, 0x56); write_short(0x480fa7, 0xea89); write_byte (0x480fa9, 0x45); write_int (0x480faa, 0x042485e8); write_byte (0x480fae, 0x00); write_short(0x480faf, 0xfd83); write_byte (0x480fb1, 0x07); write_short(0x480fb2, 0xe87c); write_short(0x480fb4, 0x048b); write_byte (0x480fb6, 0x24); write_byte (0x480fb7, 0x40); write_short(0x480fb8, 0xf883); write_byte (0x480fba, 0x02); write_short(0x480fbb, 0x0489); write_byte (0x480fbd, 0x24); write_short(0x480fbe, 0xbd7c); write_short(0x480fc0, 0xc483); write_byte (0x480fc2, 0x04); write_short(0x480fc3, 0xc483); write_byte (0x480fc5, 0x0c); write_int (0x480fc6, 0x04276fe9); write_byte (0x480fca, 0x00); end noop;

    
    
    
    
    
    
   display_msg("debug");
   begin write_byte (0x480f0d, 0x52); write_byte (0x480f0e, 0x50); write_short(0x480f0f, 0xec83); write_byte (0x480f11, 0x04); write_byte (0x480f12, 0x54); write_short(0x480f13, 0x406a); write_short(0x480f15, 0x016a); write_byte (0x480f17, 0x50); write_int (0x480f18, 0x1815ff2e); write_short(0x480f1c, 0x6c02); write_byte (0x480f1e, 0x00); write_short(0x480f1f, 0xc483); write_byte (0x480f21, 0x04); write_int (0x480f22, 0x0424448b); write_int (0x480f26, 0x0024548b); write_short(0x480f2a, 0x0288); write_byte (0x480f2c, 0x58); write_byte (0x480f2d, 0x5a); write_byte (0x480f2e, 0xc3); write_byte (0x480f2f, 0x52); write_byte (0x480f30, 0x50); write_short(0x480f31, 0xec83); write_byte (0x480f33, 0x04); write_byte (0x480f34, 0x54); write_short(0x480f35, 0x406a); write_short(0x480f37, 0x026a); write_byte (0x480f39, 0x50); write_int (0x480f3a, 0x1815ff2e); write_short(0x480f3e, 0x6c02); write_byte (0x480f40, 0x00); write_short(0x480f41, 0xc483); write_byte (0x480f43, 0x04); write_int (0x480f44, 0x0424448b); write_int (0x480f48, 0x0024548b); write_short(0x480f4c, 0x8966); write_byte (0x480f4e, 0x02); write_byte (0x480f4f, 0x58); write_byte (0x480f50, 0x5a); write_byte (0x480f51, 0xc3); write_byte (0x480f52, 0x52); write_byte (0x480f53, 0x50); write_short(0x480f54, 0xec83); write_byte (0x480f56, 0x04); write_byte (0x480f57, 0x54); write_short(0x480f58, 0x406a); write_short(0x480f5a, 0x046a); write_byte (0x480f5c, 0x50); write_int (0x480f5d, 0x1815ff2e); write_short(0x480f61, 0x6c02); write_byte (0x480f63, 0x00); write_short(0x480f64, 0xc483); write_byte (0x480f66, 0x04); write_int (0x480f67, 0x0424448b); write_int (0x480f6b, 0x0024548b); write_short(0x480f6f, 0x0289); write_byte (0x480f71, 0x58); write_byte (0x480f72, 0x5a); write_byte (0x480f73, 0xc3); end noop;
   call VOODOO_SafeWrite8(0x00410004, 0xff);
   call VOODOO_SafeWrite16(0x00410009, 0x9090);
   call VOODOO_SafeWrite32(0x00410017, 0x66666666);
end

procedure mode_change_handler begin
   call scene_master_destroyed;
   call scene_vats_destroyed;
   call night_person;

    
   set_global_var((491), get_critter_stat(dude_obj,(37)));
end

procedure scene_master_destroyed begin
   if (get_game_mode == (0x1)) then begin
      if (global_var((1018)) == 1) and not((global_var((1316)) > 0)) then begin
         set_global_var( (1316), 1); set_global_var((409),2);

         set_global_var((5012),global_var((5012))+(-100));

         give_exp_points((10000)); display_msg(message_str((66),10) + ((10000) + (((10000) / 100 * 5) * has_trait((0),dude_obj,(50)))) + message_str((766),702));

         metarule3(104,(17),0,-1);
         metarule3(104,(18),0,-1);
         metarule3(104,(33),0,-1);
         metarule3(104,(34),0,-1);
         metarule3(104,(17),0,1);  
         metarule3(104,(47),1,-1);

         play_gmovie(4);

         if (global_var((1017))) and (global_var((1101)) >= 2) then begin
            force_encounter_with_flags((35), (0x10));
         end
      end
   end
end

procedure scene_vats_destroyed begin
   if (get_game_mode == (0x1)) then begin
      if (global_var((1017)) == 1) and not((global_var((1180)) > 0)) then begin
         set_global_var((1180), 1); set_global_var((409),1);

         set_global_var((5009),global_var((5009))+(-100));

         give_exp_points((10000)); display_msg(message_str((66),10) + ((10000) + (((10000) / 100 * 5) * has_trait((0),dude_obj,(50)))) + message_str((766),701));

         metarule3(104,(30),0,-1);
         metarule3(104,(31),0,-1);
         metarule3(104,(32),0,-1);
         metarule3(104,(48),1,-1);

         play_gmovie(3);

         if (global_var((1018))) and (global_var((1101)) >= 2) then begin
            force_encounter_with_flags((35), (0x10));
         end
      end
   end
end

procedure night_person begin
   


   if (has_trait((2),dude_obj,(13))) then begin
      if (global_var((4988)) == 0) then
         set_global_var((4988), 1);
         mod_skill_points_per_level(2);

      if ((game_time_hour >= 1900) or (game_time_hour < 600)) and (global_var((4988)) == 1) then begin
         set_global_var((4988), 2);
         set_critter_extra_stat(dude_obj, (1), get_critter_extra_stat(dude_obj, (1)) + 2);
         set_critter_extra_stat(dude_obj, (4), get_critter_extra_stat(dude_obj, (4)) + 2);
         if (global_var((1325)) == 1) then display_msg("Night person trait is active!");
      end
      else if not(((game_time_hour >= 1900) or (game_time_hour < 600))) and (global_var((4988)) == 2) then begin
         set_global_var((4988), 1);
         set_critter_extra_stat(dude_obj, (1), get_critter_extra_stat(dude_obj, (1)) - 2);
         set_critter_extra_stat(dude_obj, (4), get_critter_extra_stat(dude_obj, (4)) - 2);
         if (global_var((1325)) == 1) then display_msg("Night person trait is not active!");
      end
   end
    
   else if (not(has_trait((2),dude_obj,(13))) and (global_var((4988)) > 0)) then begin
      set_global_var((4988), 0);
      mod_skill_points_per_level(0);
      if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
         set_critter_extra_stat(dude_obj, (1), get_critter_extra_stat(dude_obj, (1)) - 2);
         set_critter_extra_stat(dude_obj, (4), get_critter_extra_stat(dude_obj, (4)) - 2);
      end
      if (global_var((1325)) == 1) then display_msg("Night person trait is disabled!");
   end
end

procedure item_description_handler begin
   variable
      item := obj_pid(get_sfall_arg),
      description;

   if (item == (535)) and (global_var((1138)) == 1) then begin
       
         description := sfall_func1("get_string_pointer", message_str((681), 101));
         set_sfall_return(description);
       
   end
end

procedure afterhitroll_handler begin
   variable
      willHit := get_sfall_arg,
      attacker := get_sfall_arg,
      target := get_sfall_arg,
      slot, item;

   if (attacker) then begin
      if (attacker == dude_obj) then begin
         if (active_hand == 0) then slot := (2); else slot := (1);
         item := critter_inven_obj(attacker, slot);
      end else begin
         item := critter_inven_obj(attacker,(1));
      end

      if (item > 0) then begin
         if (obj_pid(item) == (159)) then begin
            if (obj_type(target) == (2) and willHit > 1) then begin
               set_proto_data((159), (48), 6);
            end else begin
               set_proto_data((159), (48), 2);
               metarule2_explosions(3, 2, 0);  
               metarule2_explosions(4, 2, 0);
            end
         end
      end
   end
end

procedure useanimobj_handler begin
   variable
      critter := get_sfall_arg,
      target := get_sfall_arg,
      use_anim := get_sfall_arg;

   



   






end

procedure useskillon_handler begin
   variable
      critter := get_sfall_arg,
      target := get_sfall_arg,
      skill := get_sfall_arg;

   if (skill == (10)) then begin
      if (obj_type(target) == (2) and obj_pid(target) == (33555332)) then begin
         sfall_func1("set_cursor_mode", 0);
         reg_anim_func(1, 1);
         if (tile_distance_objs(critter, target) < 5) or (using_skill(dude_obj,(8))) then
            reg_anim_obj_move_to_obj(critter, target, 0);
         else
            reg_anim_obj_run_to_obj(critter, target, 0);
         reg_anim_animate(critter, (11), 0);
         reg_anim_callback(steal_urn);
         reg_anim_func(3, 0);
      end
   end
end

procedure steal_urn begin
   if (Neal_urn_ptr != 0) then begin
      add_timer_event(Neal_urn_ptr, game_ticks(0), 1);
   end
end

procedure useobjon_handler begin
   variable
      target := get_sfall_arg,
      source := get_sfall_arg,
      item := get_sfall_arg;

    
   if (obj_pid(item) == (106)) then
      item_caps_adjust(source, 1);
end
