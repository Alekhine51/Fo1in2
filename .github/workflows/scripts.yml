name: Scripts

on:
 push:
  paths:
  - '.github/workflows/scripts.yml'
  - '.github/workflows/scripts.compile.sh'
  - 'Fallout2/Fallout1in2/Mapper/source/scripts/**/*.[Ss][Ss][Ll]'
  - 'Fallout2/Fallout1in2/Mapper/source/scripts/**/*.[Hh]'
  - 'Tools/sFall_ScriptEditor/resources/compile.exe'
  - 'Tools/ReDefine/ReDefine.exe'
  - 'Tools/ReDefine/ReDefine.cfg'
 pull_request:

jobs:

 Compile:
  if: github.actor != 'antalaskaya'
  runs-on: windows-latest
  steps:

  - name: Clone
    uses: actions/checkout@master
#   with:
#    fetch-depth: 1

  - name:  Compile
    run:   .github/workflows/scripts.compile.sh
    shell: bash

 ###

 ReDefine:
  needs:   Compile
  runs-on: windows-latest
  steps:

  - name: Clone
    uses: actions/checkout@master
#   with:
#    fetch-depth: 1

  - name:  ReDefine
    run:   |
           :
           Tools/ReDefine/ReDefine.exe --config Tools/ReDefine/ReDefine.cfg --scripts Fallout2/Fallout1in2/Mapper/source/scripts/ --headers Fallout2/Fallout1in2/Mapper/source/scripts/headers/ >/dev/null

           echo ::group::Result steps config
           if [ -f "ReDefine.log" ] && grep --quiet --max-count=1 "^@@" ReDefine.log; then
              echo ::set-env name=REDEFINE_CHANGES::true
           fi
           if [ -f "ReDefine.log" ] && grep --quiet --max-count=1 "^%%" ReDefine.log; then
              echo ::set-env name=REDEFINE_USER_LOG::true
           fi
           if [ -f "ReDefine.WARNING.log" ]; then
              echo ::set-env name=REDEFINE_WARNING::true
           fi
           if [ -f "ReDefine.DEBUG.log" ]; then
              echo ::set-env name=REDEFINE_DEBUG::true
           fi
           echo ::endgroup::
    shell: bash

  - name:  Changes
    if:    env.REDEFINE_CHANGES == 'true'
    run:   grep --after-context=2 "^@@" ReDefine.log
    shell: bash

  - name:  UserLog
    if:    env.REDEFINE_USER_LOG == 'true'
    run:   grep --after-context=1 "^%%" ReDefine.log
    shell: bash

  - name:  Warnings
    if:    env.REDEFINE_WARNING == 'true'
    run:   cat ReDefine.WARNING.log
    shell: bash

  - name:  Debug
    if:    env.REDEFINE_DEBUG == 'true'
    run:   cat ReDefine.DEBUG.log
    shell: bash

  - name:  Cleanup
    run:   rm ReDefine*.log && git status
    shell: bash

  - name:  Compile
    run:   .github/workflows/scripts.compile.sh
    shell: bash
