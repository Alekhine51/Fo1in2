name: Schedule

on:
 push:
  paths:
  - '.github/workflows/schedule.yml'
 schedule:
 - cron: 0 5 * * *

jobs:

 Maintenance:
  runs-on: windows-latest
  env:
   MOD_DIR: "Fallout2/Fallout1in2"
  steps:

  - name: Clone
    uses: actions/checkout@master
    with:
     token: ${{ secrets.ANTALASKAYA_TOKEN }}
#    fetch-depth: 1

  - name:  ReAttach HEAD
    run:   git checkout $(echo "$GITHUB_REF" | awk -F / '{print $3}')
    shell: bash

  - name:  sfall-dev
    run:   |
           :
           set -euxo pipefail
           SFALL_COMMIT=$(curl -Ls https://ci.appveyor.com/api/projects/rotators/sfall/branch/develop 2>/dev/null | jq -r '.build.commitId')
           curl -L "https://ci.appveyor.com/api/projects/rotators/sfall/artifacts/ddraw.dll?job=Configuration:%20ReleaseXP&branch=develop&pr=false" -o $MOD_DIR/ddraw.dev.dll
           SFALL_VERSION=$(powershell -command "(Get-Item $MOD_DIR/ddraw.dev.dll).VersionInfo.ProductVersion")
           echo "sfall v${SFALL_VERSION} (${SFALL_COMMIT})"
           git diff --quiet || (git add --update && echo "- sfall-dev (phobos2077/sfall@${SFALL_COMMIT})" >> $HOME/gha.commit)
    shell: bash

  - name:  ReDefine
    run:   |
           :
           set -euxo pipefail
           Tools/ReDefine/ReDefine.exe --config Tools/ReDefine/ReDefine.cfg --scripts $MOD_DIR/Mapper/source/scripts/ --headers $MOD_DIR/Mapper/source/scripts/headers/ >/dev/null
           grep "^Changed " ReDefine.log || true
           rm ReDefine*.log
           git diff --quiet || (git add --update && echo "- ReDefine run" >> $HOME/gha.commit)
    shell: bash

  - name:  Compile
    run:   |
           :
           set -euxo pipefail
           ok=1
           .github/workflows/scripts.compile.sh --bytecode --optimization=1 || ok=0
           if [ $ok -eq 1 ]; then
              git diff --quiet || (git add --update && echo "- Scripts compilation" >> $HOME/gha.commit)
           else
              echo "Bytecode excluded"
              git checkout -- $MOD_DIR/mods/fo1_base/scripts
           fi
    shell: bash

  - name:  Check
    run:   |
           :
           set -euxo pipefail
           echo ::group::git status
           git status
           echo ::endgroup::

           if [ -f "$HOME/gha.commit" ]; then
              sed -i '1s!^!Maintenance\n! $HOME/gha.commit
              dos2unix $HOME/gha.commit
              echo ::set-env name=GHA_COMMIT::true
              cat $HOME/gha.commit
           else
              echo ::set-env name=GHA_COMMIT::false
           fi
    shell: bash

  - name:  Push
    if:    env.GHA_COMMIT == 'true'
    run:   |
           :
           set -euxo pipefail
           git config --global user.name  "${{ secrets.ANTALASKAYA_NAME }}"
           git config --global user.email "${{ secrets.ANTALASKAYA_EMAIL }}"
           git commit --all --file="$HOME/gha.commit"
           git log -p -n 1 | cat -v
#          git push
    shell: bash
    continue-on-error: true
